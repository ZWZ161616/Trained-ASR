# nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/49.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/50.mdl 
# Started at Mon Feb 24 06:57:42 CST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/49.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/50.mdl 
LOG (nnet3-show-progress[5.5.646~1-cdf2]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 169
right-context: 169
num-parameters: 989456
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=128
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=128 output-dim=128
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=128 output-dim=128
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=128 output-dim=64
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=64 output-dim=128
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=128 output-dim=128
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=128 output-dim=128
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.75, tdnn1.dropout), tdnnf2.dropout) input-dim=128 output-dim=128
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=128 output-dim=64
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=64 output-dim=128
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=128 output-dim=128
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=128 output-dim=128
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.75, tdnnf2.noop), tdnnf3.dropout) input-dim=128 output-dim=128
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=128 output-dim=64
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=64 output-dim=128
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=128 output-dim=128
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=128 output-dim=128
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.75, tdnnf3.noop), tdnnf4.dropout) input-dim=128 output-dim=128
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=128 output-dim=64
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=64 output-dim=128
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=128 output-dim=128
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=128 output-dim=128
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.75, tdnnf4.noop), tdnnf5.dropout) input-dim=128 output-dim=128
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=128 output-dim=64
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=64 output-dim=128
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=128 output-dim=128
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=128 output-dim=128
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.75, tdnnf5.noop), tdnnf6.dropout) input-dim=128 output-dim=128
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=128 output-dim=64
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=64 output-dim=128
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=128 output-dim=128
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=128 output-dim=128
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.75, tdnnf6.noop), tdnnf7.dropout) input-dim=128 output-dim=128
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=128 output-dim=64
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=64 output-dim=128
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=128 output-dim=128
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=128 output-dim=128
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.75, tdnnf7.noop), tdnnf8.dropout) input-dim=128 output-dim=128
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=128 output-dim=64
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=64 output-dim=128
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=128 output-dim=128
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=128 output-dim=128
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.75, tdnnf8.noop), tdnnf9.dropout) input-dim=128 output-dim=128
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=128 output-dim=64
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=64 output-dim=128
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=128 output-dim=128
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=128 output-dim=128
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.75, tdnnf9.noop), tdnnf10.dropout) input-dim=128 output-dim=128
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=128 output-dim=64
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=64 output-dim=128
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=128 output-dim=128
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=128 output-dim=128
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.75, tdnnf10.noop), tdnnf11.dropout) input-dim=128 output-dim=128
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=128 output-dim=64
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=64 output-dim=128
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=128 output-dim=128
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=128 output-dim=128
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.75, tdnnf11.noop), tdnnf12.dropout) input-dim=128 output-dim=128
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=128 output-dim=64
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=64 output-dim=128
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=128 output-dim=128
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=128 output-dim=128
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.75, tdnnf12.noop), tdnnf13.dropout) input-dim=128 output-dim=128
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=128 output-dim=64
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=128 output-dim=128
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=128 output-dim=128
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=64 output-dim=64
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=64 output-dim=4040
output-node name=output input=output.affine dim=4040 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=128 output-dim=128
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=128 output-dim=128
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=64 output-dim=64
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=64 output-dim=4040
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=4040 output-dim=4040
output-node name=output-xent input=output-xent.log-softmax dim=4040 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.01087, bias-{mean,stddev}=0.03747,0.5704
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.03923, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.45,0.45,0.47 0.49,0.51,0.57,0.64,0.68 0.70,0.76,0.78,0.85), mean=0.577, stddev=0.0778], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.18 0.18,0.21,0.40,0.60,0.65 0.69,0.71,0.73,0.76), mean=0.407, stddev=0.176], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.11,0.14 0.17,0.23,0.44,0.77,0.92 1.0,1.1,1.2,1.3), mean=0.504, stddev=0.291], bias-{mean,stddev}=-0.002335,0.03201, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.03,0.07,0.10 0.12,0.14,0.18,0.20), mean=0.0427, stddev=0.0435], oderiv-count=964992
component name=tdnn1.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0382, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.54,0.55 0.56,0.58,0.61,0.64,0.66 0.67,0.69,0.70,0.70), mean=0.61, stddev=0.0387], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.21,0.24 0.25,0.26,0.29,0.34,0.37 0.38,0.41,0.42,0.43), mean=0.302, stddev=0.0471], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.26,0.28 0.31,0.37,0.54,0.77,0.85 0.92,0.99,0.99,1.0), mean=0.574, stddev=0.209], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.04222, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.40 0.42,0.45,0.47,0.51,0.53 0.54,0.56,0.56,0.58), mean=0.476, stddev=0.0427], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.40,0.43 0.44,0.45,0.47,0.50,0.52 0.53,0.56,0.57,0.59), mean=0.476, stddev=0.0341], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.008,0.03 0.06,0.11,0.34,0.65,0.80 0.90,0.97,0.99,1.1), mean=0.388, stddev=0.279], bias-{mean,stddev}=0.001375,0.01687, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.003,0.004 0.004,0.005,0.005,0.01), mean=0.00143, stddev=0.00159], oderiv-count=381312
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=128
component name=tdnnf3.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03462, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.50,0.51,0.51 0.52,0.53,0.55,0.58,0.59 0.60,0.62,0.63,0.64), mean=0.553, stddev=0.0299], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.20,0.21,0.22 0.23,0.25,0.27,0.30,0.32 0.33,0.35,0.36,0.43), mean=0.275, stddev=0.0349], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.23,0.26 0.28,0.34,0.49,0.68,0.79 0.86,0.91,0.94,0.95), mean=0.52, stddev=0.192], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03914, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.37,0.37,0.38 0.39,0.41,0.44,0.47,0.48 0.50,0.52,0.53,0.54), mean=0.441, stddev=0.0374], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.39 0.40,0.41,0.44,0.47,0.49 0.50,0.51,0.52,0.53), mean=0.442, stddev=0.033], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.01,0.03 0.06,0.11,0.32,0.60,0.74 0.82,0.90,0.92,0.96), mean=0.361, stddev=0.256], bias-{mean,stddev}=0.001172,0.01255, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.75e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.6,-2.5,-2.4,-1.9 -1.1,0.17,2.3,4.1,5.3 6.0,7.3,7.5,10), mean=2.23, stddev=2.45], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.3,-0.81,-0.54,-0.40 -0.15,0.10,0.55,0.96,1.2 1.4,1.5,1.7,3.1), mean=0.547, stddev=0.578], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.002,0.003 0.003,0.003,0.003,0.006), mean=0.000807, stddev=0.00114], oderiv-count=232704
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=128
component name=tdnnf4.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03151, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.42,0.45,0.45 0.47,0.48,0.50,0.53,0.55 0.55,0.55,0.56,0.59), mean=0.503, stddev=0.0317], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.19,0.20 0.21,0.22,0.25,0.28,0.29 0.30,0.31,0.33,0.35), mean=0.25, stddev=0.0311], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.22,0.23 0.26,0.31,0.45,0.62,0.71 0.76,0.81,0.81,0.87), mean=0.473, stddev=0.174], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03648, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.34,0.35 0.36,0.38,0.41,0.44,0.46 0.48,0.49,0.50,0.51), mean=0.411, stddev=0.039], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.36,0.37 0.37,0.39,0.41,0.43,0.45 0.45,0.47,0.48,0.50), mean=0.412, stddev=0.0281], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.004,0.006,0.02 0.05,0.10,0.28,0.56,0.70 0.78,0.83,0.87,0.93), mean=0.335, stddev=0.241], bias-{mean,stddev}=-0.001091,0.01023, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.001,0.002 0.002,0.003,0.003,0.006), mean=0.000601, stddev=0.000968], oderiv-count=246400
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=128
component name=tdnnf5.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02878, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.39,0.41 0.41,0.42,0.46,0.49,0.50 0.51,0.52,0.54,0.54), mean=0.459, stddev=0.0361], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.18,0.19 0.20,0.21,0.23,0.25,0.26 0.27,0.28,0.28,0.30), mean=0.229, stddev=0.0251], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.20 0.22,0.27,0.41,0.58,0.66 0.70,0.74,0.74,0.77), mean=0.431, stddev=0.163], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03363, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.31,0.32 0.33,0.35,0.38,0.41,0.43 0.44,0.45,0.45,0.46), mean=0.379, stddev=0.034], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.34,0.34 0.35,0.36,0.38,0.40,0.41 0.42,0.42,0.43,0.44), mean=0.38, stddev=0.0243], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.004,0.008,0.03 0.05,0.09,0.26,0.52,0.63 0.73,0.77,0.82,0.84), mean=0.309, stddev=0.222], bias-{mean,stddev}=3.531e-05,0.00993, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=128
component name=tdnnf6.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02733, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.39,0.41 0.41,0.42,0.44,0.45,0.46 0.47,0.47,0.49,0.51), mean=0.437, stddev=0.0226], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.17,0.18 0.19,0.20,0.22,0.24,0.25 0.26,0.27,0.28,0.30), mean=0.217, stddev=0.0239], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.20 0.22,0.26,0.38,0.55,0.62 0.66,0.71,0.72,0.74), mean=0.41, stddev=0.153], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03227, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.30,0.31 0.32,0.33,0.36,0.39,0.40 0.42,0.44,0.44,0.45), mean=0.364, stddev=0.0341], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.31,0.32 0.33,0.34,0.37,0.39,0.39 0.40,0.40,0.41,0.42), mean=0.364, stddev=0.024], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.005,0.007,0.02 0.04,0.09,0.25,0.49,0.61 0.69,0.75,0.76,0.81), mean=0.296, stddev=0.214], bias-{mean,stddev}=-0.000825,0.01006, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.06e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.35,0.20,0.25,0.53 0.88,1.3,2.0,2.5,2.9 3.1,3.4,3.5,4.3), mean=1.95, stddev=0.767], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.21 0.24,0.29,0.48,0.58,0.62 0.69,0.74,0.76,0.86), mean=0.457, stddev=0.153], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.003,0.006 0.006,0.007,0.007,0.01), mean=0.00144, stddev=0.00248], oderiv-count=14016
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=128
component name=tdnnf7.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02681, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.39,0.40,0.43,0.45,0.46 0.47,0.48,0.49,0.50), mean=0.428, stddev=0.0283], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.17,0.17 0.18,0.19,0.21,0.23,0.25 0.25,0.27,0.28,0.29), mean=0.213, stddev=0.0243], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.16,0.19 0.21,0.25,0.38,0.54,0.61 0.64,0.67,0.72,0.75), mean=0.4, stddev=0.156], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03114, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.29,0.29,0.30 0.31,0.32,0.35,0.38,0.40 0.40,0.41,0.42,0.48), mean=0.351, stddev=0.0348], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.31,0.31 0.32,0.33,0.35,0.37,0.38 0.39,0.40,0.40,0.42), mean=0.351, stddev=0.024], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0001,0.004,0.008,0.02 0.05,0.09,0.24,0.48,0.59 0.67,0.71,0.74,0.78), mean=0.286, stddev=0.205], bias-{mean,stddev}=-0.0008543,0.009328, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0008,0.001,0.002 0.002,0.002,0.002,0.004), mean=0.000776, stddev=0.000673], oderiv-count=452288
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=128
component name=tdnnf8.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02547, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.36,0.36 0.37,0.38,0.41,0.43,0.45 0.45,0.46,0.46,0.46), mean=0.406, stddev=0.0292], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.15,0.16 0.17,0.18,0.20,0.22,0.23 0.24,0.25,0.26,0.26), mean=0.202, stddev=0.0231], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.16,0.17 0.19,0.23,0.36,0.51,0.59 0.63,0.67,0.69,0.72), mean=0.378, stddev=0.151], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03008, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.28,0.29 0.30,0.31,0.34,0.36,0.38 0.38,0.39,0.40,0.43), mean=0.339, stddev=0.0286], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.28,0.29,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.39,0.40,0.41), mean=0.339, stddev=0.0256], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.005,0.007,0.02 0.04,0.08,0.23,0.45,0.57 0.64,0.71,0.72,0.78), mean=0.274, stddev=0.202], bias-{mean,stddev}=-0.0007765,0.007534, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=128
component name=tdnnf9.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0255, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.37,0.37 0.38,0.39,0.41,0.42,0.43 0.44,0.45,0.45,0.47), mean=0.407, stddev=0.0225], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.16,0.16 0.17,0.18,0.20,0.22,0.23 0.25,0.25,0.25,0.29), mean=0.203, stddev=0.0242], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.16 0.18,0.22,0.35,0.52,0.59 0.64,0.67,0.69,0.71), mean=0.377, stddev=0.156], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03041, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.25,0.26,0.27 0.30,0.32,0.34,0.37,0.39 0.40,0.40,0.41,0.45), mean=0.342, stddev=0.0371], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.29,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.39,0.39,0.42), mean=0.343, stddev=0.0245], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.003,0.006,0.02 0.04,0.08,0.23,0.46,0.58 0.65,0.71,0.74,0.82), mean=0.276, stddev=0.205], bias-{mean,stddev}=-0.001087,0.007735, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.001,0.002 0.002,0.002,0.002,0.002), mean=0.000924, stddev=0.000625], oderiv-count=293760
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=128
component name=tdnnf10.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02542, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.36,0.37 0.37,0.38,0.40,0.43,0.44 0.45,0.46,0.46,0.46), mean=0.406, stddev=0.0271], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.15,0.16 0.17,0.18,0.20,0.22,0.23 0.24,0.25,0.26,0.27), mean=0.202, stddev=0.025], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.14,0.16 0.18,0.22,0.36,0.53,0.59 0.63,0.66,0.67,0.71), mean=0.376, stddev=0.154], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03197, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.27,0.29,0.31 0.32,0.33,0.36,0.39,0.40 0.41,0.42,0.42,0.43), mean=0.36, stddev=0.0316], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.31,0.32 0.32,0.34,0.36,0.38,0.39 0.41,0.42,0.42,0.45), mean=0.361, stddev=0.0289], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.005,0.01,0.02 0.04,0.09,0.24,0.48,0.60 0.69,0.76,0.80,0.87), mean=0.29, stddev=0.215], bias-{mean,stddev}=-0.001282,0.007478, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.05e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.1,-0.95,-0.92,0.11 0.45,0.89,1.8,2.6,3.2 3.5,3.7,3.8,4.5), mean=1.76, stddev=1.06], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.02,0.02,0.06,0.11 0.23,0.30,0.43,0.53,0.59 0.65,0.69,0.73,0.79), mean=0.413, stddev=0.151], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.002,0.002 0.002,0.003,0.003,0.003), mean=0.0011, stddev=0.00089], oderiv-count=171200
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=128
component name=tdnnf11.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02737, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.40,0.41,0.44,0.46,0.47 0.48,0.49,0.50,0.50), mean=0.437, stddev=0.0292], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.16 0.18,0.19,0.22,0.24,0.25 0.26,0.27,0.28,0.29), mean=0.217, stddev=0.0295], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.17 0.18,0.24,0.38,0.56,0.62 0.66,0.70,0.73,0.76), mean=0.405, stddev=0.167], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03426, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.31 0.34,0.35,0.39,0.42,0.42 0.43,0.46,0.46,0.48), mean=0.386, stddev=0.0383], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.34,0.35 0.36,0.36,0.39,0.41,0.42 0.43,0.43,0.44,0.44), mean=0.387, stddev=0.0238], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.006,0.008,0.02 0.05,0.10,0.25,0.52,0.66 0.75,0.81,0.82,0.87), mean=0.311, stddev=0.231], bias-{mean,stddev}=0.0006741,0.008642, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.06e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.0,-1.4,-1.0,-0.45 0.24,0.80,1.9,2.9,3.8 4.3,4.6,4.8,5.1), mean=1.92, stddev=1.39], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.29,-0.20,-0.13,0.11 0.16,0.27,0.41,0.58,0.70 0.75,0.87,0.87,0.93), mean=0.423, stddev=0.213]
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=128
component name=tdnnf12.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02871, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.41,0.43,0.45,0.48,0.51 0.52,0.52,0.54,0.56), mean=0.458, stddev=0.0394], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.17 0.19,0.20,0.23,0.25,0.27 0.28,0.29,0.30,0.35), mean=0.228, stddev=0.0316], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.16,0.18 0.20,0.25,0.40,0.59,0.68 0.71,0.76,0.79,0.81), mean=0.423, stddev=0.178], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03625, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.27,0.32 0.34,0.36,0.41,0.45,0.47 0.48,0.49,0.49,0.51), mean=0.407, stddev=0.0516], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.35,0.35,0.36 0.37,0.38,0.41,0.44,0.45 0.46,0.47,0.47,0.48), mean=0.409, stddev=0.0303], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.005,0.01,0.03 0.04,0.10,0.27,0.54,0.68 0.81,0.88,0.91,0.97), mean=0.329, stddev=0.245], bias-{mean,stddev}=0.001848,0.00898, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=9.79e+03, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-23,-19,-18,-16 -13,-5.4,2.5,11,13 17,20,22,37), mean=2.35, stddev=10.4], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-6.1,-5.7,-4.5,-3.3 -2.3,-1.6,0.20,1.3,2.0 2.9,3.7,3.8,5.6), mean=0.0292, stddev=1.85], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.002,0.003,0.003 0.004,0.004,0.004,0.005), mean=0.00155, stddev=0.00137], oderiv-count=120768
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=128
component name=tdnnf13.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03155, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.42,0.43,0.44 0.46,0.47,0.50,0.53,0.54 0.56,0.56,0.58,0.59), mean=0.504, stddev=0.0357], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.19 0.21,0.22,0.25,0.28,0.29 0.30,0.32,0.34,0.36), mean=0.25, stddev=0.0337], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.19 0.21,0.26,0.44,0.65,0.73 0.81,0.86,0.89,0.91), mean=0.463, stddev=0.202], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0398, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.32,0.35 0.37,0.41,0.46,0.49,0.50 0.52,0.53,0.54,0.55), mean=0.447, stddev=0.0514], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.39,0.39 0.40,0.42,0.45,0.48,0.49 0.50,0.51,0.52,0.55), mean=0.449, stddev=0.0336], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.007,0.01,0.03 0.05,0.10,0.30,0.59,0.76 0.88,0.97,0.98,1.1), mean=0.36, stddev=0.27], bias-{mean,stddev}=0.0002153,0.01324, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=5.44e+03, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-18,-12,-9.8,-7.3 -6.2,-2.9,1.8,6.9,9.5 12,17,18,20), mean=2.1, stddev=6.37], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.0,-3.3,-3.2,-1.9 -1.4,-0.75,0.43,1.6,1.9 2.2,2.9,3.2,4.3), mean=0.327, stddev=1.41], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.01,0.01 0.02,0.02,0.02,0.02), mean=0.00483, stddev=0.00587], oderiv-count=13056
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=128
component name=prefinal-l type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.005, max-change=0.75, params-rms=0.02758, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.27,0.27 0.28,0.29,0.31,0.33,0.33 0.34,0.35,0.35,0.36), mean=0.311, stddev=0.021], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.18 0.18,0.19,0.22,0.24,0.25 0.27,0.27,0.28,0.30), mean=0.219, stddev=0.0269], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.09,0.10 0.12,0.16,0.27,0.41,0.45 0.49,0.52,0.55,0.55), mean=0.285, stddev=0.127], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.0513, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.32,0.33,0.34 0.35,0.37,0.40,0.45,0.46 0.47,0.49,0.50,0.51), mean=0.408, stddev=0.0426], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.51,0.52,0.53 0.54,0.55,0.58,0.60,0.61 0.62,0.65,0.65,0.65), mean=0.579, stddev=0.032], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.14,0.18 0.21,0.30,0.49,0.75,0.86 0.92,0.97,0.99,1.0), mean=0.527, stddev=0.244], bias-{mean,stddev}=-0.001067,0.02, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.01,0.02,0.02 0.02,0.02,0.03,0.03), mean=0.00975, stddev=0.00759], oderiv-count=29376
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-chain.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, params-rms=0.04145, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.41,0.41,0.41 0.43,0.44,0.47,0.49,0.50 0.52,0.52,0.53,0.54), mean=0.468, stddev=0.0302], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.22,0.23,0.27 0.28,0.30,0.33,0.36,0.37 0.39,0.41,0.42,0.53), mean=0.329, stddev=0.0416], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.14,0.15 0.19,0.24,0.40,0.61,0.68 0.74,0.77,0.79,0.82), mean=0.429, stddev=0.19], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0105611, l2-regularize=5e-05, max-change=1.5, linear-params-rms=0.02416, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.002,0.004,0.01 0.03,0.04,0.11,0.25,0.33 0.40,0.45,0.49,0.67), mean=0.149, stddev=0.123], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.4,1.4 1.5,1.5,1.5,1.6,1.6 1.6,1.6,1.7,1.7), mean=1.53, stddev=0.074], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.44,0.46,0.82 0.90,1.1,1.5,1.9,2.0 2.1,2.1,2.2,2.2), mean=1.47, stddev=0.441], bias-{mean,stddev}=-1.001e-05,0.03558, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.03862, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.25,0.26 0.26,0.28,0.30,0.33,0.36 0.37,0.38,0.39,0.44), mean=0.307, stddev=0.035], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.37,0.38 0.40,0.41,0.43,0.46,0.47 0.47,0.48,0.49,0.52), mean=0.436, stddev=0.0293], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.18,0.22,0.37,0.57,0.64 0.69,0.74,0.79,0.81), mean=0.397, stddev=0.182], bias-{mean,stddev}=-0.0006684,0.01618, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.09e+03, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-30,-27,-27,-23 -16,-11,-0.67,8.7,13 14,19,20,28), mean=-1.16, stddev=11.4], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-12,-6.4,-5.9,-5.0 -3.3,-1.9,0.78,3.5,4.5 5.3,7.2,8.1,11), mean=0.732, stddev=3.36], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.006,0.008,0.01 0.01,0.01,0.01,0.02), mean=0.00515, stddev=0.00423], oderiv-count=13056
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-xent.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.0105611, l2-regularize=0.0005, max-change=0.75, params-rms=0.02466, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.25 0.26,0.26,0.28,0.29,0.30 0.31,0.32,0.32,0.32), mean=0.278, stddev=0.0181], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.16,0.16 0.17,0.18,0.19,0.21,0.23 0.23,0.24,0.24,0.25), mean=0.196, stddev=0.0222], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.09,0.10 0.12,0.15,0.25,0.36,0.41 0.43,0.46,0.47,0.48), mean=0.257, stddev=0.107], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0528056, l2-regularize=5e-05, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.0248, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.003,0.006,0.02 0.04,0.06,0.13,0.26,0.33 0.39,0.45,0.48,0.65), mean=0.16, stddev=0.117], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.6,1.6,1.6 1.7,1.7,1.7,1.7), mean=1.58, stddev=0.0558], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.85,0.86,0.91 0.98,1.1,1.5,1.9,2.1 2.1,2.2,2.2,2.2), mean=1.53, stddev=0.398], bias-{mean,stddev}=-5.12e-09,0.01772, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=4040

LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:6.593 tdnnf2.linear:4.88967 tdnnf2.affine:5.40803 tdnnf3.linear:4.43183 tdnnf3.affine:5.01143 tdnnf4.linear:4.03285 tdnnf4.affine:4.67104 tdnnf5.linear:3.68359 tdnnf5.affine:4.30646 tdnnf6.linear:3.49882 tdnnf6.affine:4.13242 tdnnf7.linear:3.43188 tdnnf7.affine:3.98685 tdnnf8.linear:3.25969 tdnnf8.affine:3.85092 tdnnf9.linear:3.26461 tdnnf9.affine:3.89356 tdnnf10.linear:3.25322 tdnnf10.affine:4.09274 tdnnf11.linear:3.50304 tdnnf11.affine:4.38583 tdnnf12.linear:3.67511 tdnnf12.affine:4.64095 tdnnf13.linear:4.0387 tdnnf13.affine:5.09706 prefinal-l:2.49651 prefinal-chain.affine:4.64823 prefinal-chain.linear:3.75121 output.affine:12.4928 prefinal-xent.affine:3.50037 prefinal-xent.linear:2.2318 output-xent.affine:12.6612 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:22.6629 tdnnf2.linear:18.1975 tdnnf2.affine:17.2639 tdnnf3.linear:15.8957 tdnnf3.affine:15.0904 tdnnf4.linear:13.9817 tdnnf4.affine:13.7648 tdnnf5.linear:13.2016 tdnnf5.affine:13.0898 tdnnf6.linear:12.9191 tdnnf6.affine:12.4193 tdnnf7.linear:13.1103 tdnnf7.affine:12.3774 tdnnf8.linear:13.5782 tdnnf8.affine:12.5134 tdnnf9.linear:13.5119 tdnnf9.affine:12.5842 tdnnf10.linear:14.0174 tdnnf10.affine:12.9486 tdnnf11.linear:14.4899 tdnnf11.affine:13.3939 tdnnf12.linear:14.4714 tdnnf12.affine:13.3588 tdnnf13.linear:13.2612 tdnnf13.affine:12.5801 prefinal-l:10.5269 prefinal-chain.affine:18.5775 prefinal-chain.linear:22.7682 output.affine:94.619 prefinal-xent.affine:14.9975 prefinal-xent.linear:14.5241 output-xent.affine:95.8308 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.2909 tdnnf2.linear:0.268441 tdnnf2.affine:0.312336 tdnnf3.linear:0.278535 tdnnf3.affine:0.331416 tdnnf4.linear:0.288172 tdnnf4.affine:0.338487 tdnnf5.linear:0.278776 tdnnf5.affine:0.32681 tdnnf6.linear:0.269923 tdnnf6.affine:0.330999 tdnnf7.linear:0.261217 tdnnf7.affine:0.320587 tdnnf8.linear:0.240085 tdnnf8.affine:0.308099 tdnnf9.linear:0.240645 tdnnf9.affine:0.308574 tdnnf10.linear:0.231876 tdnnf10.affine:0.315873 tdnnf11.linear:0.241714 tdnnf11.affine:0.327894 tdnnf12.linear:0.254294 tdnnf12.affine:0.347921 tdnnf13.linear:0.304219 tdnnf13.affine:0.404912 prefinal-l:0.238317 prefinal-chain.affine:0.250646 prefinal-chain.linear:0.165179 output.affine:0.132707 prefinal-xent.affine:0.233896 prefinal-xent.linear:0.153508 output-xent.affine:0.132017 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=4 threads=1
# Ended (code 0) at Mon Feb 24 06:57:46 CST 2020, elapsed time 4 seconds
