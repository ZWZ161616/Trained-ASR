# nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/259.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/260.mdl 
# Started at Mon Feb 24 12:29:48 CST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/259.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/260.mdl 
LOG (nnet3-show-progress[5.5.646~1-cdf2]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 169
right-context: 169
num-parameters: 989456
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=128
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=128 output-dim=128
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=128 output-dim=128
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=128 output-dim=64
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=64 output-dim=128
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=128 output-dim=128
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=128 output-dim=128
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.75, tdnn1.dropout), tdnnf2.dropout) input-dim=128 output-dim=128
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=128 output-dim=64
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=64 output-dim=128
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=128 output-dim=128
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=128 output-dim=128
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.75, tdnnf2.noop), tdnnf3.dropout) input-dim=128 output-dim=128
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=128 output-dim=64
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=64 output-dim=128
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=128 output-dim=128
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=128 output-dim=128
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.75, tdnnf3.noop), tdnnf4.dropout) input-dim=128 output-dim=128
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=128 output-dim=64
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=64 output-dim=128
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=128 output-dim=128
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=128 output-dim=128
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.75, tdnnf4.noop), tdnnf5.dropout) input-dim=128 output-dim=128
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=128 output-dim=64
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=64 output-dim=128
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=128 output-dim=128
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=128 output-dim=128
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.75, tdnnf5.noop), tdnnf6.dropout) input-dim=128 output-dim=128
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=128 output-dim=64
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=64 output-dim=128
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=128 output-dim=128
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=128 output-dim=128
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.75, tdnnf6.noop), tdnnf7.dropout) input-dim=128 output-dim=128
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=128 output-dim=64
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=64 output-dim=128
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=128 output-dim=128
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=128 output-dim=128
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.75, tdnnf7.noop), tdnnf8.dropout) input-dim=128 output-dim=128
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=128 output-dim=64
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=64 output-dim=128
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=128 output-dim=128
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=128 output-dim=128
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.75, tdnnf8.noop), tdnnf9.dropout) input-dim=128 output-dim=128
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=128 output-dim=64
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=64 output-dim=128
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=128 output-dim=128
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=128 output-dim=128
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.75, tdnnf9.noop), tdnnf10.dropout) input-dim=128 output-dim=128
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=128 output-dim=64
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=64 output-dim=128
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=128 output-dim=128
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=128 output-dim=128
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.75, tdnnf10.noop), tdnnf11.dropout) input-dim=128 output-dim=128
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=128 output-dim=64
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=64 output-dim=128
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=128 output-dim=128
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=128 output-dim=128
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.75, tdnnf11.noop), tdnnf12.dropout) input-dim=128 output-dim=128
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=128 output-dim=64
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=64 output-dim=128
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=128 output-dim=128
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=128 output-dim=128
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.75, tdnnf12.noop), tdnnf13.dropout) input-dim=128 output-dim=128
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=128 output-dim=64
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=128 output-dim=128
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=128 output-dim=128
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=64 output-dim=64
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=64 output-dim=4040
output-node name=output input=output.affine dim=4040 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=128 output-dim=128
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=128 output-dim=128
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=64 output-dim=64
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=64 output-dim=4040
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=4040 output-dim=4040
output-node name=output-xent input=output-xent.log-softmax dim=4040 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.01087, bias-{mean,stddev}=0.03747,0.5704
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.04238, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.46,0.48,0.50 0.51,0.55,0.62,0.69,0.74 0.79,0.81,0.81,0.87), mean=0.623, stddev=0.0869], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.20,0.21 0.23,0.25,0.43,0.63,0.69 0.74,0.77,0.78,0.85), mean=0.445, stddev=0.178], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.14 0.18,0.24,0.48,0.83,1.0 1.1,1.2,1.3,1.4), mean=0.545, stddev=0.313], bias-{mean,stddev}=-0.001842,0.02667, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.53e+05, self-repaired-proportion=-0.0807292, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.71,-0.68,-0.61,-0.44 -0.33,-0.19,0.04,0.26,0.38 0.58,0.82,0.86,1.3), mean=0.0539, stddev=0.316], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.7,-1.7,-1.4,-0.72 -0.53,-0.23,0.27,0.83,1.1 1.4,1.7,2.0,2.4), mean=0.312, stddev=0.699]
component name=tdnn1.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02704, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.38,0.38 0.40,0.41,0.43,0.45,0.46 0.47,0.47,0.49,0.50), mean=0.432, stddev=0.0273], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.15,0.16 0.17,0.19,0.21,0.24,0.26 0.27,0.28,0.28,0.31), mean=0.214, stddev=0.0317], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.19 0.21,0.26,0.38,0.54,0.62 0.66,0.69,0.71,0.74), mean=0.405, stddev=0.153], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03099, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.28,0.29 0.30,0.32,0.35,0.38,0.39 0.39,0.40,0.41,0.44), mean=0.349, stddev=0.0323], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.30,0.31 0.32,0.33,0.35,0.37,0.38 0.39,0.40,0.40,0.42), mean=0.35, stddev=0.0256], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.002,0.006,0.02 0.04,0.08,0.24,0.48,0.58 0.65,0.71,0.72,0.77), mean=0.284, stddev=0.206], bias-{mean,stddev}=0.0004646,0.01328, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=6.36e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-27,-19,-14,-11 -8.5,-5.4,-1.3,4.4,7.0 8.7,9.7,10.0,16), mean=-0.959, stddev=6.23], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-6.5,-5.9,-5.4,-3.2 -1.7,-0.87,0.77,1.7,2.7 3.4,4.4,4.4,6.0), mean=0.493, stddev=2.01], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.0005,0.001 0.002,0.002,0.002,0.003), mean=0.000308, stddev=0.000656], oderiv-count=868544
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=128
component name=tdnnf3.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02361, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.32,0.33,0.33 0.34,0.35,0.38,0.40,0.41 0.41,0.42,0.42,0.49), mean=0.377, stddev=0.0289], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.14,0.15 0.15,0.17,0.18,0.21,0.22 0.23,0.24,0.25,0.27), mean=0.187, stddev=0.0244], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.17 0.20,0.22,0.34,0.47,0.53 0.57,0.61,0.62,0.66), mean=0.354, stddev=0.131], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03047, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.28,0.29,0.29 0.31,0.31,0.34,0.37,0.38 0.39,0.41,0.42,0.44), mean=0.343, stddev=0.0311], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.29,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.39,0.39,0.41), mean=0.344, stddev=0.0235], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.004,0.007,0.02 0.04,0.08,0.24,0.47,0.58 0.65,0.71,0.72,0.76), mean=0.28, stddev=0.202], bias-{mean,stddev}=0.0003088,0.01225, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.46e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.49,-0.16,0.04,0.17 0.27,0.66,1.4,2.1,2.5 2.7,2.9,3.0,3.7), mean=1.38, stddev=0.798], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.67,-0.18,-0.11,0.06 0.17,0.34,0.49,0.66,0.77 0.98,1.1,1.1,1.6), mean=0.501, stddev=0.287]
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=128
component name=tdnnf4.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02189, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.30,0.31,0.31 0.32,0.33,0.35,0.37,0.38 0.38,0.40,0.40,0.43), mean=0.349, stddev=0.0236], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.13,0.14 0.15,0.16,0.17,0.19,0.20 0.21,0.22,0.22,0.23), mean=0.174, stddev=0.0196], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.14,0.15 0.17,0.20,0.31,0.44,0.50 0.54,0.57,0.59,0.60), mean=0.327, stddev=0.126], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02785, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.27 0.28,0.29,0.31,0.34,0.35 0.36,0.37,0.37,0.37), mean=0.314, stddev=0.0264], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.27,0.28 0.28,0.29,0.31,0.33,0.34 0.36,0.36,0.36,0.38), mean=0.314, stddev=0.0243], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.006,0.02 0.04,0.08,0.21,0.42,0.53 0.59,0.65,0.67,0.70), mean=0.256, stddev=0.184], bias-{mean,stddev}=0.0005352,0.008621, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.34e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.8,-1.6,-1.6,-1.1 -0.49,-0.26,0.60,1.1,1.8 2.0,2.4,2.4,3.6), mean=0.536, stddev=0.934], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.26,-0.06,-0.03,0.10 0.18,0.36,0.54,0.71,0.90 1.0,1.1,1.3,1.4), mean=0.543, stddev=0.278], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.0006,0.001,0.002,0.002 0.002,0.002,0.002,0.002), mean=0.0011, stddev=0.000612], oderiv-count=616000
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=128
component name=tdnnf5.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01963, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.27,0.29 0.29,0.30,0.31,0.33,0.34 0.34,0.35,0.36,0.37), mean=0.313, stddev=0.0195], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.11,0.12,0.12 0.13,0.14,0.16,0.17,0.18 0.19,0.19,0.20,0.21), mean=0.156, stddev=0.0187], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.14 0.16,0.19,0.27,0.40,0.45 0.48,0.51,0.52,0.54), mean=0.294, stddev=0.111], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02335, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.22,0.23 0.24,0.25,0.26,0.28,0.29 0.30,0.31,0.31,0.33), mean=0.263, stddev=0.0222], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.22,0.23,0.24 0.24,0.25,0.26,0.28,0.29 0.30,0.30,0.30,0.31), mean=0.263, stddev=0.0205], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.003,0.007,0.02 0.03,0.06,0.19,0.36,0.44 0.50,0.53,0.54,0.59), mean=0.215, stddev=0.154], bias-{mean,stddev}=0.001584,0.008171, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0007,0.002,0.003 0.003,0.003,0.004,0.004), mean=0.00118, stddev=0.00125], oderiv-count=142272
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=128
component name=tdnnf6.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01799, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.25,0.25 0.26,0.27,0.29,0.30,0.32 0.32,0.33,0.33,0.34), mean=0.287, stddev=0.0215], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.11,0.11,0.12 0.12,0.13,0.14,0.16,0.16 0.17,0.18,0.18,0.19), mean=0.143, stddev=0.0165], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.15,0.17,0.26,0.36,0.41 0.43,0.45,0.47,0.49), mean=0.27, stddev=0.099], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02052, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.19,0.20 0.20,0.21,0.23,0.25,0.26 0.27,0.28,0.28,0.29), mean=0.231, stddev=0.023], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.20,0.20 0.21,0.22,0.23,0.25,0.25 0.26,0.27,0.27,0.28), mean=0.232, stddev=0.0166], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.006,0.01 0.03,0.06,0.16,0.31,0.39 0.43,0.48,0.49,0.52), mean=0.188, stddev=0.136], bias-{mean,stddev}=0.0002771,0.005524, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=128
component name=tdnnf7.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01661, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.24,0.24 0.24,0.25,0.26,0.28,0.29 0.29,0.30,0.30,0.30), mean=0.265, stddev=0.0166], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.11 0.11,0.12,0.13,0.14,0.15 0.16,0.16,0.17,0.17), mean=0.132, stddev=0.0148], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.13,0.16,0.23,0.34,0.38 0.40,0.43,0.43,0.43), mean=0.249, stddev=0.0916], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0194, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.17,0.18 0.19,0.20,0.22,0.24,0.25 0.25,0.26,0.26,0.26), mean=0.218, stddev=0.0209], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.19,0.19 0.20,0.21,0.22,0.23,0.24 0.24,0.25,0.25,0.26), mean=0.219, stddev=0.0152], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.003,0.004,0.01 0.03,0.05,0.15,0.30,0.38 0.42,0.44,0.45,0.48), mean=0.178, stddev=0.129], bias-{mean,stddev}=4.207e-05,0.004871, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.81e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.42,-0.27,-0.10,0.11 0.31,0.55,1.1,1.6,1.9 2.3,2.5,2.5,2.9), mean=1.13, stddev=0.633], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.26 0.29,0.34,0.47,0.59,0.64 0.68,0.74,0.77,0.89), mean=0.471, stddev=0.142]
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=128
component name=tdnnf8.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01612, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.22,0.23 0.23,0.24,0.26,0.27,0.28 0.28,0.29,0.30,0.30), mean=0.257, stddev=0.0189], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.11,0.12,0.13,0.14,0.15 0.15,0.16,0.16,0.17), mean=0.128, stddev=0.016], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.09,0.11 0.12,0.15,0.22,0.33,0.38 0.40,0.42,0.43,0.46), mean=0.239, stddev=0.0968], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.01884, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.17,0.18 0.19,0.19,0.21,0.23,0.24 0.24,0.25,0.26,0.27), mean=0.212, stddev=0.02], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.16,0.18 0.19,0.20,0.21,0.22,0.23 0.24,0.25,0.25,0.27), mean=0.212, stddev=0.0182], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.001,0.004,0.01 0.02,0.05,0.14,0.29,0.37 0.40,0.43,0.44,0.50), mean=0.171, stddev=0.127], bias-{mean,stddev}=0.0003033,0.005353, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.15e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-2.0,-1.0,-0.61 -0.19,0.11,1.0,2.0,2.8 3.6,3.9,4.1,4.7), mean=1.15, stddev=1.25], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.31,-0.19,-0.18,-0.01 0.12,0.22,0.48,0.73,0.82 0.87,0.98,1.1,1.3), mean=0.483, stddev=0.278], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.002,0.002 0.002,0.003,0.003,0.003), mean=0.00114, stddev=0.00078], oderiv-count=292096
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=128
component name=tdnnf9.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01627, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.22,0.23,0.23 0.23,0.24,0.26,0.28,0.28 0.29,0.30,0.30,0.31), mean=0.26, stddev=0.0191], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.08,0.09,0.10 0.11,0.12,0.13,0.14,0.15 0.16,0.16,0.17,0.17), mean=0.129, stddev=0.0162], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.10,0.11 0.12,0.15,0.22,0.33,0.38 0.40,0.42,0.43,0.45), mean=0.242, stddev=0.0959], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.01922, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.18,0.18 0.19,0.20,0.22,0.23,0.24 0.25,0.26,0.27,0.28), mean=0.217, stddev=0.0197], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.19,0.19 0.20,0.20,0.22,0.23,0.24 0.24,0.25,0.25,0.26), mean=0.217, stddev=0.0153], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.003,0.003,0.009 0.02,0.05,0.14,0.30,0.36 0.42,0.45,0.47,0.49), mean=0.174, stddev=0.131], bias-{mean,stddev}=0.0002157,0.004752, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0002,0.003,0.005 0.005,0.006,0.007,0.007), mean=0.00166, stddev=0.00203], oderiv-count=43200
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=128
component name=tdnnf10.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01675, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.24 0.24,0.25,0.27,0.28,0.29 0.29,0.30,0.30,0.31), mean=0.267, stddev=0.0182], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.09,0.09,0.10 0.11,0.12,0.13,0.15,0.16 0.16,0.17,0.17,0.19), mean=0.133, stddev=0.0192], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.11 0.12,0.15,0.23,0.34,0.39 0.41,0.44,0.46,0.47), mean=0.248, stddev=0.101], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02015, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.19 0.20,0.21,0.22,0.25,0.26 0.27,0.28,0.28,0.29), mean=0.227, stddev=0.0245], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.20,0.20 0.21,0.21,0.23,0.24,0.25 0.25,0.26,0.26,0.27), mean=0.227, stddev=0.0157], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.003,0.006,0.01 0.02,0.05,0.15,0.30,0.39 0.44,0.48,0.50,0.58), mean=0.182, stddev=0.137], bias-{mean,stddev}=-0.0003788,0.005027, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.002,0.003,0.003 0.003,0.004,0.004,0.005), mean=0.00178, stddev=0.00122], oderiv-count=191744
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=128
component name=tdnnf11.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01764, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.25 0.25,0.26,0.28,0.30,0.31 0.31,0.32,0.32,0.32), mean=0.281, stddev=0.0203], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.10,0.11 0.12,0.12,0.14,0.16,0.16 0.17,0.18,0.18,0.20), mean=0.14, stddev=0.0195], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.11 0.13,0.15,0.24,0.36,0.41 0.44,0.46,0.48,0.50), mean=0.26, stddev=0.11], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02183, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.19,0.21 0.21,0.22,0.25,0.27,0.28 0.29,0.29,0.29,0.32), mean=0.246, stddev=0.0254], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.21,0.22 0.23,0.23,0.25,0.26,0.27 0.27,0.28,0.28,0.29), mean=0.246, stddev=0.0166], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.004,0.02 0.03,0.06,0.16,0.33,0.42 0.47,0.51,0.54,0.57), mean=0.198, stddev=0.147], bias-{mean,stddev}=-0.0006204,0.005764, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0004,0.005,0.007 0.007,0.008,0.008,0.01), mean=0.00246, stddev=0.00289], oderiv-count=50560
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=128
component name=tdnnf12.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.01884, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.26 0.27,0.28,0.30,0.32,0.33 0.35,0.35,0.36,0.36), mean=0.3, stddev=0.0253], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.08,0.11,0.12 0.12,0.13,0.15,0.17,0.18 0.18,0.19,0.19,0.20), mean=0.149, stddev=0.0212], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.12 0.13,0.16,0.25,0.39,0.44 0.48,0.50,0.51,0.54), mean=0.277, stddev=0.119], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0229, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.20,0.21 0.22,0.23,0.26,0.28,0.29 0.30,0.31,0.31,0.33), mean=0.257, stddev=0.0295], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.21,0.21,0.23 0.23,0.24,0.26,0.27,0.28 0.29,0.29,0.29,0.30), mean=0.258, stddev=0.0188], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.005,0.01 0.03,0.06,0.17,0.34,0.45 0.50,0.55,0.56,0.61), mean=0.207, stddev=0.156], bias-{mean,stddev}=0.0005983,0.0075, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=6.2e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.98,-0.96,-0.79,-0.65 -0.12,0.20,0.89,1.6,2.1 2.4,2.7,3.0,3.1), mean=0.905, stddev=0.865], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.53,-0.49,-0.45,-0.15 -0.06,0.05,0.29,0.57,0.73 0.85,0.96,0.99,1.1), mean=0.313, stddev=0.313], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.004,0.007,0.008 0.009,0.01,0.01,0.01), mean=0.00408, stddev=0.00311], oderiv-count=78336
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=128
component name=tdnnf13.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02048, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.29,0.30 0.30,0.31,0.33,0.34,0.35 0.36,0.36,0.38,0.38), mean=0.327, stddev=0.0207], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.12,0.12,0.13 0.14,0.15,0.16,0.18,0.18 0.19,0.20,0.20,0.21), mean=0.163, stddev=0.0183], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.12,0.13 0.15,0.17,0.28,0.41,0.48 0.52,0.55,0.57,0.60), mean=0.302, stddev=0.128], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02633, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.25,0.25 0.26,0.27,0.29,0.32,0.33 0.34,0.35,0.36,0.38), mean=0.297, stddev=0.0274], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.27 0.27,0.28,0.30,0.32,0.33 0.33,0.34,0.34,0.36), mean=0.297, stddev=0.0221], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.003,0.005,0.02 0.03,0.07,0.19,0.39,0.50 0.58,0.63,0.64,0.72), mean=0.238, stddev=0.179], bias-{mean,stddev}=0.0006044,0.01023, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=5.44e+03, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5.8,-5.8,-5.1,-4.2 -3.5,-1.6,0.48,3.5,5.4 6.3,6.7,8.1,11), mean=0.93, stddev=3.28], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.0,-2.6,-2.0,-1.8 -0.99,-0.35,0.47,1.6,2.3 2.8,2.9,3.0,4.5), mean=0.559, stddev=1.29], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.005,0.01,0.02 0.02,0.02,0.02,0.02), mean=0.00703, stddev=0.00752], oderiv-count=13056
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.180952, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=128
component name=prefinal-l type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.005, max-change=0.75, params-rms=0.04072, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.40,0.42 0.42,0.43,0.46,0.49,0.50 0.50,0.52,0.52,0.53), mean=0.46, stddev=0.0322], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.25,0.25,0.26 0.28,0.30,0.33,0.35,0.36 0.38,0.40,0.41,0.41), mean=0.324, stddev=0.0347], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.14,0.16 0.18,0.24,0.40,0.60,0.67 0.71,0.75,0.76,0.83), mean=0.422, stddev=0.184], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.04315, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.28,0.29 0.30,0.31,0.34,0.37,0.40 0.40,0.42,0.42,0.43), mean=0.343, stddev=0.0363], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.43,0.43,0.44 0.45,0.46,0.48,0.51,0.54 0.54,0.55,0.56,0.56), mean=0.487, stddev=0.033], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.14,0.15 0.18,0.23,0.42,0.63,0.74 0.78,0.81,0.83,0.87), mean=0.443, stddev=0.205], bias-{mean,stddev}=-0.002024,0.01497, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-chain.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, params-rms=0.04287, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.40,0.42,0.43 0.44,0.45,0.48,0.51,0.52 0.54,0.56,0.57,0.58), mean=0.484, stddev=0.0367], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.25,0.25,0.28 0.29,0.31,0.34,0.37,0.39 0.40,0.43,0.43,0.46), mean=0.341, stddev=0.0401], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.13,0.17 0.19,0.25,0.43,0.62,0.69 0.76,0.80,0.83,0.87), mean=0.445, stddev=0.194], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.00227533, l2-regularize=5e-05, max-change=1.5, linear-params-rms=0.01857, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(7e-06,0.002,0.004,0.01 0.02,0.03,0.08,0.19,0.26 0.31,0.37,0.40,0.51), mean=0.112, stddev=0.0974], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,0.99,1.1,1.1 1.1,1.1,1.2,1.2,1.2 1.2,1.3,1.3,1.3), mean=1.18, stddev=0.0562], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.35,0.71 0.75,0.87,1.1,1.4,1.5 1.6,1.6,1.7,1.7), mean=1.14, stddev=0.315], bias-{mean,stddev}=1.251e-06,0.02881, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.02433, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.15,0.16 0.17,0.17,0.19,0.21,0.22 0.23,0.24,0.24,0.30), mean=0.193, stddev=0.0252], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.24,0.24 0.25,0.26,0.27,0.29,0.30 0.31,0.31,0.31,0.33), mean=0.275, stddev=0.0184], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.09 0.11,0.14,0.24,0.36,0.40 0.44,0.45,0.47,0.49), mean=0.252, stddev=0.111], bias-{mean,stddev}=-0.0005476,0.008659, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.37e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.30,0.33,0.49 0.61,0.69,0.94,1.2,1.4 1.6,1.8,1.9,2.2), mean=0.982, stddev=0.345], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.27,0.30 0.34,0.38,0.48,0.54,0.58 0.60,0.68,0.68,0.74), mean=0.465, stddev=0.0953]
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-xent.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00227533, l2-regularize=0.0005, max-change=0.75, params-rms=0.0156, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.15,0.15 0.16,0.16,0.18,0.19,0.19 0.19,0.20,0.20,0.21), mean=0.176, stddev=0.0127], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.08,0.09,0.09,0.10 0.11,0.11,0.12,0.14,0.14 0.15,0.15,0.15,0.16), mean=0.124, stddev=0.0148], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.05,0.05,0.06,0.06 0.08,0.09,0.15,0.23,0.26 0.28,0.29,0.31,0.32), mean=0.162, stddev=0.0701], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0113766, l2-regularize=5e-05, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.01616, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0003,0.002,0.005,0.01 0.02,0.04,0.08,0.17,0.22 0.26,0.30,0.33,0.43), mean=0.104, stddev=0.0774], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.92,0.94,0.97 0.98,0.99,1.0,1.1,1.1 1.1,1.1,1.1,1.1), mean=1.03, stddev=0.0378], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.58,0.59,0.63 0.69,0.75,0.99,1.2,1.3 1.3,1.4,1.4,1.4), mean=1, stddev=0.234], bias-{mean,stddev}=1.616e-09,0.01189, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=4040, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0002,0.004,0.006 0.009,0.01,0.01,0.07), mean=0.00206, stddev=0.00333], oderiv-count=5440

LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:7.11858 tdnnf2.linear:3.46157 tdnnf2.affine:3.969 tdnnf3.linear:3.02214 tdnnf3.affine:3.90288 tdnnf4.linear:2.80141 tdnnf4.affine:3.56643 tdnnf5.linear:2.51233 tdnnf5.affine:2.99032 tdnnf6.linear:2.30323 tdnnf6.affine:2.62709 tdnnf7.linear:2.12569 tdnnf7.affine:2.48335 tdnnf8.linear:2.06376 tdnnf8.affine:2.4125 tdnnf9.linear:2.08273 tdnnf9.affine:2.46129 tdnnf10.linear:2.14351 tdnnf10.affine:2.57947 tdnnf11.linear:2.25752 tdnnf11.affine:2.79493 tdnnf12.linear:2.41154 tdnnf12.affine:2.93236 tdnnf13.linear:2.62157 tdnnf13.affine:3.37205 prefinal-l:3.68543 prefinal-chain.affine:3.90901 prefinal-chain.linear:3.88007 output.affine:9.61897 prefinal-xent.affine:2.20437 prefinal-xent.linear:1.41229 output-xent.affine:8.25309 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:23.235 tdnnf2.linear:14.8323 tdnnf2.affine:15.0934 tdnnf3.linear:13.5815 tdnnf3.affine:14.5942 tdnnf4.linear:12.5863 tdnnf4.affine:13.2618 tdnnf5.linear:11.5435 tdnnf5.affine:11.4279 tdnnf6.linear:11.2956 tdnnf6.affine:10.7372 tdnnf7.linear:11.2976 tdnnf7.affine:10.6612 tdnnf8.linear:11.6372 tdnnf8.affine:10.6396 tdnnf9.linear:12.0608 tdnnf9.affine:10.9962 tdnnf10.linear:12.1005 tdnnf10.affine:10.9506 tdnnf11.linear:11.3731 tdnnf11.affine:10.6216 tdnnf12.linear:10.8602 tdnnf12.affine:10.4787 tdnnf13.linear:11.5716 tdnnf13.affine:11.422 prefinal-l:11.6394 prefinal-chain.affine:17.3535 prefinal-chain.linear:23.3593 output.affine:110.081 prefinal-xent.affine:12.3847 prefinal-xent.linear:12.4128 output-xent.affine:99.6201 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.308472 tdnnf2.linear:0.234968 tdnnf2.affine:0.265977 tdnnf3.linear:0.22492 tdnnf3.affine:0.272016 tdnnf4.linear:0.224937 tdnnf4.affine:0.273968 tdnnf5.linear:0.21808 tdnnf5.affine:0.26391 tdnnf6.linear:0.204271 tdnnf6.affine:0.244893 tdnnf7.linear:0.187921 tdnnf7.affine:0.232756 tdnnf8.linear:0.177175 tdnnf8.affine:0.226455 tdnnf9.linear:0.172533 tdnnf9.affine:0.223547 tdnnf10.linear:0.17688 tdnnf10.affine:0.235119 tdnnf11.linear:0.197979 tdnnf11.affine:0.262797 tdnnf12.linear:0.221219 tdnnf12.affine:0.279031 tdnnf13.linear:0.225676 tdnnf13.affine:0.29414 prefinal-l:0.311832 prefinal-chain.affine:0.224939 prefinal-chain.linear:0.165098 output.affine:0.0871245 prefinal-xent.affine:0.177443 prefinal-xent.linear:0.113385 output-xent.affine:0.0828036 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=3 threads=1
# Ended (code 0) at Mon Feb 24 12:29:51 CST 2020, elapsed time 3 seconds
