# nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/29.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/30.mdl 
# Started at Mon Feb 24 06:09:20 CST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/29.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/30.mdl 
LOG (nnet3-show-progress[5.5.646~1-cdf2]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 169
right-context: 169
num-parameters: 989456
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=128
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=128 output-dim=128
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=128 output-dim=128
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=128 output-dim=64
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=64 output-dim=128
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=128 output-dim=128
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=128 output-dim=128
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.75, tdnn1.dropout), tdnnf2.dropout) input-dim=128 output-dim=128
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=128 output-dim=64
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=64 output-dim=128
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=128 output-dim=128
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=128 output-dim=128
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.75, tdnnf2.noop), tdnnf3.dropout) input-dim=128 output-dim=128
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=128 output-dim=64
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=64 output-dim=128
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=128 output-dim=128
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=128 output-dim=128
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.75, tdnnf3.noop), tdnnf4.dropout) input-dim=128 output-dim=128
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=128 output-dim=64
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=64 output-dim=128
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=128 output-dim=128
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=128 output-dim=128
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.75, tdnnf4.noop), tdnnf5.dropout) input-dim=128 output-dim=128
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=128 output-dim=64
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=64 output-dim=128
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=128 output-dim=128
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=128 output-dim=128
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.75, tdnnf5.noop), tdnnf6.dropout) input-dim=128 output-dim=128
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=128 output-dim=64
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=64 output-dim=128
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=128 output-dim=128
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=128 output-dim=128
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.75, tdnnf6.noop), tdnnf7.dropout) input-dim=128 output-dim=128
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=128 output-dim=64
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=64 output-dim=128
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=128 output-dim=128
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=128 output-dim=128
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.75, tdnnf7.noop), tdnnf8.dropout) input-dim=128 output-dim=128
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=128 output-dim=64
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=64 output-dim=128
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=128 output-dim=128
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=128 output-dim=128
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.75, tdnnf8.noop), tdnnf9.dropout) input-dim=128 output-dim=128
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=128 output-dim=64
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=64 output-dim=128
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=128 output-dim=128
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=128 output-dim=128
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.75, tdnnf9.noop), tdnnf10.dropout) input-dim=128 output-dim=128
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=128 output-dim=64
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=64 output-dim=128
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=128 output-dim=128
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=128 output-dim=128
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.75, tdnnf10.noop), tdnnf11.dropout) input-dim=128 output-dim=128
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=128 output-dim=64
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=64 output-dim=128
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=128 output-dim=128
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=128 output-dim=128
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.75, tdnnf11.noop), tdnnf12.dropout) input-dim=128 output-dim=128
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=128 output-dim=64
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=64 output-dim=128
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=128 output-dim=128
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=128 output-dim=128
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.75, tdnnf12.noop), tdnnf13.dropout) input-dim=128 output-dim=128
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=128 output-dim=64
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=128 output-dim=128
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=128 output-dim=128
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=64 output-dim=64
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=64 output-dim=4040
output-node name=output input=output.affine dim=4040 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=128 output-dim=128
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=128 output-dim=128
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=64 output-dim=64
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=64 output-dim=4040
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=4040 output-dim=4040
output-node name=output-xent input=output-xent.log-softmax dim=4040 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.01087, bias-{mean,stddev}=0.03747,0.5704
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.03763, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.41,0.42,0.44 0.46,0.48,0.54,0.62,0.66 0.69,0.70,0.71,0.73), mean=0.553, stddev=0.0738], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.17 0.18,0.21,0.38,0.57,0.61 0.64,0.68,0.70,0.75), mean=0.392, stddev=0.166], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.10,0.10,0.13 0.15,0.22,0.43,0.74,0.90 0.99,1.1,1.1,1.1), mean=0.484, stddev=0.278], bias-{mean,stddev}=0.000629,0.02814, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.02,0.05,0.10,0.17 0.19,0.23,0.26,0.34), mean=0.0718, stddev=0.0648], oderiv-count=643328
component name=tdnn1.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03718, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.52,0.53,0.53 0.54,0.56,0.59,0.62,0.65 0.66,0.67,0.68,0.69), mean=0.593, stddev=0.0396], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.20,0.22,0.22 0.23,0.25,0.29,0.33,0.36 0.39,0.40,0.42,0.43), mean=0.294, stddev=0.0479], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.24,0.27 0.28,0.34,0.52,0.74,0.83 0.92,0.96,1.0,1.1), mean=0.555, stddev=0.213], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.04071, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.38,0.39,0.39 0.40,0.42,0.45,0.50,0.51 0.53,0.54,0.54,0.59), mean=0.459, stddev=0.0421], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.39,0.39,0.41 0.42,0.43,0.46,0.49,0.50 0.51,0.51,0.52,0.55), mean=0.459, stddev=0.0333], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.006,0.01,0.03 0.05,0.11,0.32,0.62,0.76 0.85,0.95,0.96,1.0), mean=0.374, stddev=0.27], bias-{mean,stddev}=-0.001268,0.01587, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.6e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.35,-0.05,-0.02,0.48 0.71,1.0,1.9,2.6,3.0 3.5,3.9,3.9,4.9), mean=1.93, stddev=0.951], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.23,-0.21,-0.18,-0.09 0.12,0.28,0.49,0.68,0.77 0.85,0.97,1.0,1.1), mean=0.469, stddev=0.263]
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=128
component name=tdnnf3.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0343, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.47,0.48,0.48 0.50,0.52,0.55,0.58,0.59 0.60,0.61,0.61,0.62), mean=0.548, stddev=0.0354], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.20,0.21,0.22 0.23,0.25,0.27,0.30,0.32 0.33,0.34,0.34,0.36), mean=0.272, stddev=0.0334], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.22,0.23,0.24 0.28,0.32,0.49,0.70,0.78 0.82,0.86,0.90,0.94), mean=0.515, stddev=0.188], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03932, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.37,0.38 0.40,0.42,0.44,0.47,0.49 0.50,0.52,0.52,0.54), mean=0.443, stddev=0.035], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.40,0.41,0.44,0.47,0.49 0.51,0.53,0.53,0.57), mean=0.443, stddev=0.0364], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.005,0.009,0.009,0.03 0.05,0.12,0.32,0.60,0.75 0.82,0.91,0.93,1.0), mean=0.363, stddev=0.257], bias-{mean,stddev}=1.633e-05,0.01355, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.002,0.002 0.003,0.003,0.003,0.008), mean=0.00117, stddev=0.00117], oderiv-count=387840
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=128
component name=tdnnf4.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03192, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.44,0.46,0.47 0.47,0.48,0.51,0.54,0.55 0.56,0.57,0.57,0.58), mean=0.51, stddev=0.0307], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.20,0.21 0.22,0.23,0.25,0.28,0.29 0.30,0.31,0.33,0.35), mean=0.254, stddev=0.0282], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.21,0.23 0.27,0.31,0.45,0.65,0.72 0.76,0.79,0.83,0.85), mean=0.48, stddev=0.176], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03667, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.34,0.36 0.37,0.39,0.41,0.44,0.46 0.47,0.48,0.49,0.53), mean=0.413, stddev=0.0358], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.34,0.36,0.37 0.38,0.39,0.41,0.44,0.45 0.46,0.48,0.49,0.49), mean=0.414, stddev=0.0296], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.005,0.008,0.03 0.05,0.11,0.29,0.56,0.68 0.76,0.84,0.86,0.94), mean=0.338, stddev=0.24], bias-{mean,stddev}=2.618e-05,0.01027, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=128
component name=tdnnf5.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03016, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.42,0.43,0.43 0.44,0.46,0.48,0.51,0.52 0.54,0.54,0.54,0.55), mean=0.482, stddev=0.0308], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.19,0.19 0.20,0.21,0.24,0.26,0.28 0.29,0.30,0.30,0.38), mean=0.239, stddev=0.0301], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.20 0.23,0.28,0.42,0.61,0.69 0.75,0.79,0.82,0.84), mean=0.45, stddev=0.175], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03515, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.32,0.33,0.33 0.34,0.37,0.39,0.42,0.45 0.46,0.47,0.47,0.49), mean=0.396, stddev=0.0366], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.34,0.36 0.36,0.38,0.40,0.42,0.43 0.44,0.45,0.45,0.46), mean=0.397, stddev=0.0253], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.007,0.009,0.02 0.05,0.10,0.28,0.54,0.66 0.74,0.82,0.83,0.92), mean=0.323, stddev=0.232], bias-{mean,stddev}=0.0004331,0.01172, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=128
component name=tdnnf6.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02823, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.39,0.41 0.42,0.43,0.45,0.47,0.48 0.50,0.52,0.54,0.55), mean=0.451, stddev=0.0314], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.19 0.19,0.20,0.22,0.24,0.25 0.27,0.27,0.28,0.29), mean=0.225, stddev=0.0241], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.19 0.21,0.25,0.40,0.58,0.65 0.68,0.72,0.75,0.78), mean=0.421, stddev=0.163], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03313, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.31,0.31,0.32 0.33,0.34,0.37,0.40,0.42 0.43,0.44,0.45,0.55), mean=0.373, stddev=0.0372], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.32,0.32,0.32 0.34,0.35,0.37,0.40,0.42 0.42,0.43,0.43,0.49), mean=0.374, stddev=0.0306], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.005,0.02 0.04,0.09,0.26,0.50,0.64 0.71,0.77,0.79,0.83), mean=0.303, stddev=0.22], bias-{mean,stddev}=0.0008253,0.00978, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0009,0.002,0.002 0.002,0.003,0.003,0.004), mean=0.000906, stddev=0.000897], oderiv-count=252288
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=128
component name=tdnnf7.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02835, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.39,0.41 0.41,0.42,0.45,0.48,0.48 0.50,0.52,0.53,0.57), mean=0.452, stddev=0.0336], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.19 0.19,0.20,0.22,0.25,0.26 0.27,0.28,0.28,0.30), mean=0.225, stddev=0.0259], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.19 0.22,0.26,0.40,0.57,0.64 0.70,0.74,0.75,0.82), mean=0.422, stddev=0.166], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03319, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.30,0.31,0.32 0.32,0.34,0.37,0.40,0.42 0.43,0.44,0.45,0.46), mean=0.374, stddev=0.0359], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.32,0.33 0.34,0.35,0.37,0.39,0.41 0.42,0.45,0.45,0.48), mean=0.374, stddev=0.0298], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.004,0.006,0.02 0.04,0.09,0.26,0.51,0.64 0.71,0.76,0.80,0.84), mean=0.304, stddev=0.221], bias-{mean,stddev}=0.0004504,0.01001, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.002,0.003 0.003,0.004,0.007,0.009), mean=0.000971, stddev=0.0016], oderiv-count=48896
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=128
component name=tdnnf8.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02612, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.36,0.37 0.37,0.38,0.41,0.44,0.45 0.46,0.49,0.49,0.52), mean=0.417, stddev=0.0322], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.16,0.17 0.18,0.19,0.21,0.23,0.24 0.25,0.25,0.27,0.27), mean=0.208, stddev=0.0238], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.14,0.16 0.19,0.23,0.37,0.53,0.60 0.64,0.67,0.69,0.74), mean=0.387, stddev=0.158], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03094, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.26,0.29 0.31,0.33,0.35,0.37,0.39 0.40,0.42,0.42,0.44), mean=0.349, stddev=0.0324], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.30 0.31,0.33,0.35,0.37,0.38 0.40,0.41,0.41,0.42), mean=0.349, stddev=0.0275], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0002,0.005,0.005,0.02 0.04,0.08,0.24,0.46,0.59 0.65,0.72,0.75,0.80), mean=0.283, stddev=0.206], bias-{mean,stddev}=-0.0003197,0.007481, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0003,0.002,0.002 0.003,0.003,0.003,0.004), mean=0.000926, stddev=0.00106], oderiv-count=73024
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=128
component name=tdnnf9.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02643, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.37,0.37 0.39,0.39,0.42,0.45,0.46 0.47,0.48,0.48,0.49), mean=0.422, stddev=0.0297], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.17 0.18,0.19,0.21,0.23,0.24 0.25,0.26,0.27,0.28), mean=0.21, stddev=0.0244], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.16 0.19,0.24,0.37,0.53,0.60 0.66,0.68,0.73,0.75), mean=0.391, stddev=0.161], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03181, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.28,0.29 0.31,0.33,0.36,0.38,0.40 0.42,0.43,0.44,0.44), mean=0.358, stddev=0.0353], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.31,0.31,0.32 0.32,0.33,0.36,0.38,0.39 0.41,0.41,0.41,0.44), mean=0.359, stddev=0.0269], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.006,0.009,0.02 0.04,0.08,0.24,0.48,0.62 0.68,0.74,0.78,0.80), mean=0.29, stddev=0.213], bias-{mean,stddev}=1.863e-05,0.008023, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.73e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.65,-0.14,-0.04,0.18 0.51,0.98,2.2,3.3,3.9 4.2,4.5,4.9,5.2), mean=2.21, stddev=1.26], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.17,-0.05,0.15,0.19 0.22,0.30,0.47,0.62,0.70 0.75,0.78,0.79,0.85), mean=0.464, stddev=0.182]
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=128
component name=tdnnf10.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02657, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.36,0.37 0.38,0.40,0.42,0.45,0.46 0.47,0.47,0.48,0.48), mean=0.424, stddev=0.0309], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.16,0.17 0.18,0.19,0.21,0.23,0.24 0.25,0.26,0.26,0.28), mean=0.211, stddev=0.0248], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.13,0.15,0.16 0.18,0.23,0.36,0.55,0.63 0.68,0.70,0.72,0.74), mean=0.391, stddev=0.167], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03247, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.31,0.31 0.32,0.34,0.37,0.39,0.41 0.41,0.43,0.44,0.46), mean=0.366, stddev=0.0332], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.31,0.32,0.33 0.33,0.34,0.37,0.39,0.40 0.41,0.42,0.42,0.43), mean=0.366, stddev=0.0266], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.003,0.008,0.02 0.04,0.08,0.25,0.50,0.62 0.70,0.75,0.78,0.82), mean=0.296, stddev=0.218], bias-{mean,stddev}=0.001617,0.007875, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.16e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.8,-2.0,-1.7,-0.93 -0.17,0.79,2.3,3.6,4.1 4.5,5.4,5.7,6.3), mean=2.21, stddev=1.7], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.44,-0.21,-0.08,0.06 0.17,0.31,0.49,0.64,0.75 0.83,0.95,0.95,0.97), mean=0.478, stddev=0.238]
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=128
component name=tdnnf11.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02815, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.39,0.39 0.41,0.42,0.45,0.47,0.49 0.51,0.51,0.52,0.55), mean=0.449, stddev=0.0336], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.17,0.18 0.19,0.20,0.22,0.24,0.26 0.28,0.29,0.29,0.32), mean=0.223, stddev=0.029], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.15,0.17 0.19,0.24,0.39,0.58,0.66 0.71,0.72,0.78,0.81), mean=0.414, stddev=0.177], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03471, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.31,0.32,0.33 0.34,0.35,0.39,0.42,0.44 0.45,0.46,0.46,0.48), mean=0.391, stddev=0.0385], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.34,0.35 0.36,0.37,0.39,0.41,0.42 0.44,0.45,0.46,0.48), mean=0.392, stddev=0.0274], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.009,0.02 0.04,0.09,0.26,0.52,0.67 0.75,0.84,0.84,0.91), mean=0.315, stddev=0.235], bias-{mean,stddev}=0.0006188,0.007388, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=128
component name=tdnnf12.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02865, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.39,0.41 0.42,0.43,0.46,0.48,0.50 0.51,0.52,0.53,0.53), mean=0.457, stddev=0.0331], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.16,0.18 0.19,0.20,0.23,0.25,0.27 0.28,0.28,0.29,0.33), mean=0.227, stddev=0.0306], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.16,0.18 0.19,0.25,0.40,0.59,0.66 0.71,0.75,0.78,0.80), mean=0.423, stddev=0.177], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03619, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.30,0.31,0.33 0.33,0.37,0.41,0.44,0.46 0.47,0.49,0.50,0.51), mean=0.407, stddev=0.0454], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.34,0.35 0.36,0.38,0.41,0.43,0.44 0.45,0.46,0.47,0.48), mean=0.408, stddev=0.0319], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.006,0.008,0.02 0.05,0.09,0.27,0.55,0.70 0.79,0.84,0.87,0.97), mean=0.328, stddev=0.245], bias-{mean,stddev}=0.001293,0.008679, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=7.83e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.1,-1.1,-1.1,-0.18 0.24,1.2,2.6,3.7,4.6 5.2,5.8,6.0,8.0), mean=2.57, stddev=1.67], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.28,-0.06,0.01,0.08 0.21,0.30,0.43,0.58,0.66 0.74,0.79,0.82,0.88), mean=0.434, stddev=0.196], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.006,0.009 0.01,0.01,0.02,0.02), mean=0.0029, stddev=0.00441], oderiv-count=6528
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=128
component name=tdnnf13.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03159, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.43,0.43,0.46 0.47,0.48,0.50,0.53,0.55 0.56,0.57,0.60,0.61), mean=0.504, stddev=0.0341], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.19,0.20 0.21,0.22,0.25,0.28,0.29 0.31,0.32,0.33,0.36), mean=0.251, stddev=0.0332], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.18 0.22,0.27,0.44,0.65,0.73 0.79,0.84,0.84,0.88), mean=0.466, stddev=0.196], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.04012, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.31,0.32,0.37 0.39,0.41,0.45,0.49,0.52 0.54,0.55,0.56,0.57), mean=0.451, stddev=0.0513], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.40 0.41,0.42,0.45,0.48,0.49 0.50,0.52,0.54,0.56), mean=0.453, stddev=0.0345], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.008,0.03 0.05,0.12,0.31,0.61,0.76 0.85,0.94,0.97,1.1), mean=0.366, stddev=0.269], bias-{mean,stddev}=0.002254,0.01177, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.85e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.6,-2.2,-2.0,-0.94 -0.14,0.68,2.6,4.6,6.2 6.9,8.3,9.1,9.5), mean=2.78, stddev=2.45], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.58,-0.42,-0.35,-0.14 0.01,0.13,0.51,0.85,0.99 1.1,1.2,1.3,1.5), mean=0.515, stddev=0.393]
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=128
component name=prefinal-l type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.005, max-change=0.75, params-rms=0.02563, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.26,0.26 0.27,0.27,0.29,0.31,0.31 0.32,0.32,0.33,0.33), mean=0.289, stddev=0.0185], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.16,0.16 0.17,0.19,0.20,0.22,0.24 0.25,0.25,0.25,0.27), mean=0.204, stddev=0.0247], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.09 0.11,0.14,0.25,0.38,0.43 0.45,0.48,0.49,0.53), mean=0.264, stddev=0.12], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.04811, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.29,0.30,0.31 0.33,0.34,0.38,0.42,0.44 0.45,0.47,0.49,0.52), mean=0.383, stddev=0.0428], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.47,0.49 0.50,0.50,0.53,0.58,0.59 0.60,0.60,0.61,0.67), mean=0.543, stddev=0.0398], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.17 0.20,0.26,0.46,0.71,0.80 0.87,0.92,0.95,0.98), mean=0.491, stddev=0.234], bias-{mean,stddev}=-0.002598,0.01932, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.008,0.01,0.02 0.02,0.02,0.02,0.02), mean=0.00774, stddev=0.00686], oderiv-count=26112
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-chain.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, params-rms=0.03838, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.37,0.38 0.39,0.41,0.43,0.45,0.47 0.49,0.51,0.52,0.52), mean=0.433, stddev=0.0333], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.23,0.25 0.26,0.27,0.30,0.33,0.35 0.36,0.41,0.42,0.45), mean=0.304, stddev=0.0403], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.12,0.14 0.17,0.22,0.38,0.56,0.63 0.66,0.73,0.75,0.80), mean=0.397, stddev=0.176], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0122237, l2-regularize=5e-05, max-change=1.5, linear-params-rms=0.02287, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.001,0.004,0.01 0.02,0.04,0.11,0.24,0.31 0.37,0.43,0.46,0.61), mean=0.143, stddev=0.114], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.3 1.4,1.4,1.5,1.5,1.5 1.6,1.6,1.6,1.6), mean=1.45, stddev=0.0753], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.41,0.49,0.74 0.81,0.95,1.4,1.8,1.9 2.0,2.1,2.1,2.2), mean=1.38, stddev=0.444], bias-{mean,stddev}=-1.418e-05,0.03243, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.0376, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.21,0.21,0.24 0.25,0.26,0.30,0.33,0.35 0.36,0.38,0.39,0.40), mean=0.298, stddev=0.0393], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.37,0.38 0.39,0.40,0.43,0.44,0.45 0.47,0.47,0.50,0.50), mean=0.425, stddev=0.0266], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.11,0.14 0.16,0.22,0.37,0.53,0.63 0.67,0.70,0.74,0.75), mean=0.389, stddev=0.173], bias-{mean,stddev}=9.533e-05,0.01541, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-xent.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.0122237, l2-regularize=0.0005, max-change=0.75, params-rms=0.02539, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.25,0.25 0.26,0.27,0.28,0.30,0.31 0.33,0.33,0.34,0.36), mean=0.286, stddev=0.0229], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.15,0.16 0.17,0.18,0.20,0.22,0.23 0.24,0.25,0.25,0.26), mean=0.202, stddev=0.0221], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.09,0.11 0.12,0.16,0.25,0.36,0.42 0.45,0.46,0.49,0.51), mean=0.265, stddev=0.11], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0611185, l2-regularize=5e-05, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.02368, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.006,0.02 0.03,0.05,0.12,0.25,0.32 0.38,0.43,0.46,0.63), mean=0.152, stddev=0.112], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.5,1.5,1.5,1.6 1.6,1.6,1.6,1.6), mean=1.5, stddev=0.0635], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.74,0.77,0.83 0.90,1.0,1.4,1.9,2.0 2.1,2.1,2.2,2.2), mean=1.45, stddev=0.42], bias-{mean,stddev}=-2.051e-08,0.01797, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=4040, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0003,0.002,0.003 0.003,0.005,0.006,0.06), mean=0.000874, stddev=0.00163], oderiv-count=38080

LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:6.32309 tdnnf2.linear:4.75843 tdnnf2.affine:5.21428 tdnnf3.linear:4.39047 tdnnf3.affine:5.03547 tdnnf4.linear:4.08619 tdnnf4.affine:4.69518 tdnnf5.linear:3.86021 tdnnf5.affine:4.50057 tdnnf6.linear:3.61357 tdnnf6.affine:4.24264 tdnnf7.linear:3.62829 tdnnf7.affine:4.24959 tdnnf8.linear:3.34387 tdnnf8.affine:3.96148 tdnnf9.linear:3.38323 tdnnf9.affine:4.07243 tdnnf10.linear:3.40084 tdnnf10.affine:4.15774 tdnnf11.linear:3.6026 tdnnf11.affine:4.44374 tdnnf12.linear:3.6671 tdnnf12.affine:4.63284 tdnnf13.linear:4.0438 tdnnf13.affine:5.13658 prefinal-l:2.31946 prefinal-chain.affine:4.3602 prefinal-chain.linear:3.47369 output.affine:11.8094 prefinal-xent.affine:3.40766 prefinal-xent.linear:2.29799 output-xent.affine:12.0939 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:22.3079 tdnnf2.linear:18.0461 tdnnf2.affine:17.0916 tdnnf3.linear:15.8448 tdnnf3.affine:14.8866 tdnnf4.linear:13.8023 tdnnf4.affine:13.3937 tdnnf5.linear:13.0199 tdnnf5.affine:12.7613 tdnnf6.linear:12.8423 tdnnf6.affine:12.2782 tdnnf7.linear:13.1476 tdnnf7.affine:12.3841 tdnnf8.linear:13.3603 tdnnf8.affine:12.4046 tdnnf9.linear:13.3461 tdnnf9.affine:12.4517 tdnnf10.linear:13.8396 tdnnf10.affine:12.809 tdnnf11.linear:14.6414 tdnnf11.affine:13.463 tdnnf12.linear:14.8375 tdnnf12.affine:13.654 tdnnf13.linear:14.0108 tdnnf13.affine:13.2259 prefinal-l:9.90265 prefinal-chain.affine:17.6032 prefinal-chain.linear:21.557 output.affine:80.7662 prefinal-xent.affine:14.2847 prefinal-xent.linear:14.7484 output-xent.affine:92.5333 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.283227 tdnnf2.linear:0.262829 tdnnf2.affine:0.303631 tdnnf3.linear:0.276041 tdnnf3.affine:0.337615 tdnnf4.linear:0.295056 tdnnf4.affine:0.349222 tdnnf5.linear:0.295519 tdnnf5.affine:0.350541 tdnnf6.linear:0.279264 tdnnf6.affine:0.343782 tdnnf7.linear:0.273575 tdnnf7.affine:0.34157 tdnnf8.linear:0.250273 tdnnf8.affine:0.319244 tdnnf9.linear:0.253402 tdnnf9.affine:0.32662 tdnnf10.linear:0.245806 tdnnf10.affine:0.324638 tdnnf11.linear:0.246521 tdnnf11.affine:0.330113 tdnnf12.linear:0.246593 tdnnf12.affine:0.339092 tdnnf13.linear:0.287627 tdnnf13.affine:0.386588 prefinal-l:0.235277 prefinal-chain.affine:0.248489 prefinal-chain.linear:0.161605 output.affine:0.147928 prefinal-xent.affine:0.239339 prefinal-xent.linear:0.155629 output-xent.affine:0.130992 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=4 threads=1
# Ended (code 0) at Mon Feb 24 06:09:24 CST 2020, elapsed time 4 seconds
