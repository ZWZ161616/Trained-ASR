# nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/169.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/170.mdl 
# Started at Mon Feb 24 10:17:47 CST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/169.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/170.mdl 
LOG (nnet3-show-progress[5.5.646~1-cdf2]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 169
right-context: 169
num-parameters: 989456
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=128
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=128 output-dim=128
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=128 output-dim=128
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=128 output-dim=64
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=64 output-dim=128
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=128 output-dim=128
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=128 output-dim=128
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.75, tdnn1.dropout), tdnnf2.dropout) input-dim=128 output-dim=128
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=128 output-dim=64
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=64 output-dim=128
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=128 output-dim=128
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=128 output-dim=128
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.75, tdnnf2.noop), tdnnf3.dropout) input-dim=128 output-dim=128
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=128 output-dim=64
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=64 output-dim=128
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=128 output-dim=128
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=128 output-dim=128
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.75, tdnnf3.noop), tdnnf4.dropout) input-dim=128 output-dim=128
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=128 output-dim=64
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=64 output-dim=128
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=128 output-dim=128
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=128 output-dim=128
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.75, tdnnf4.noop), tdnnf5.dropout) input-dim=128 output-dim=128
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=128 output-dim=64
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=64 output-dim=128
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=128 output-dim=128
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=128 output-dim=128
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.75, tdnnf5.noop), tdnnf6.dropout) input-dim=128 output-dim=128
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=128 output-dim=64
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=64 output-dim=128
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=128 output-dim=128
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=128 output-dim=128
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.75, tdnnf6.noop), tdnnf7.dropout) input-dim=128 output-dim=128
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=128 output-dim=64
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=64 output-dim=128
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=128 output-dim=128
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=128 output-dim=128
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.75, tdnnf7.noop), tdnnf8.dropout) input-dim=128 output-dim=128
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=128 output-dim=64
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=64 output-dim=128
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=128 output-dim=128
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=128 output-dim=128
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.75, tdnnf8.noop), tdnnf9.dropout) input-dim=128 output-dim=128
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=128 output-dim=64
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=64 output-dim=128
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=128 output-dim=128
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=128 output-dim=128
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.75, tdnnf9.noop), tdnnf10.dropout) input-dim=128 output-dim=128
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=128 output-dim=64
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=64 output-dim=128
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=128 output-dim=128
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=128 output-dim=128
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.75, tdnnf10.noop), tdnnf11.dropout) input-dim=128 output-dim=128
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=128 output-dim=64
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=64 output-dim=128
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=128 output-dim=128
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=128 output-dim=128
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.75, tdnnf11.noop), tdnnf12.dropout) input-dim=128 output-dim=128
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=128 output-dim=64
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=64 output-dim=128
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=128 output-dim=128
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=128 output-dim=128
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.75, tdnnf12.noop), tdnnf13.dropout) input-dim=128 output-dim=128
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=128 output-dim=64
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=128 output-dim=128
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=128 output-dim=128
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=64 output-dim=64
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=64 output-dim=4040
output-node name=output input=output.affine dim=4040 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=128 output-dim=128
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=128 output-dim=128
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=64 output-dim=64
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=64 output-dim=4040
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=4040 output-dim=4040
output-node name=output-xent input=output-xent.log-softmax dim=4040 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.01087, bias-{mean,stddev}=0.03747,0.5704
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.05837, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,0.67,0.69,0.71 0.73,0.77,0.83,0.93,0.99 1.1,1.1,1.2,1.4), mean=0.858, stddev=0.117], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.25,0.27,0.28 0.29,0.32,0.61,0.86,0.98 1.0,1.1,1.1,1.2), mean=0.609, stddev=0.256], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.15,0.16,0.19 0.25,0.34,0.65,1.1,1.4 1.5,1.7,1.7,1.8), mean=0.751, stddev=0.431], bias-{mean,stddev}=0.001094,0.04366, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=9.19e+04, self-repaired-proportion=-0.125868, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-3.0,-2.1,-1.7,-1.5 -1.1,-0.48,0.22,0.98,1.6 2.1,2.7,3.3,3.6), mean=0.286, stddev=1.1], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-8.0,-7.7,-5.0,-2.7 -1.9,-0.90,0.44,2.3,3.2 3.9,4.5,5.1,5.3), mean=0.539, stddev=2.19], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0.02,0.04,0.08,0.13,0.16 0.22,0.29,0.29,0.49), mean=0.0908, stddev=0.0726], oderiv-count=666304
component name=tdnn1.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03942, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.54,0.55 0.58,0.59,0.63,0.67,0.68 0.69,0.69,0.70,0.70), mean=0.629, stddev=0.0405], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.23,0.23,0.24 0.27,0.28,0.31,0.34,0.36 0.37,0.38,0.38,0.44), mean=0.313, stddev=0.0368], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.24,0.25,0.27 0.30,0.37,0.55,0.80,0.89 0.99,1.0,1.0,1.1), mean=0.588, stddev=0.229], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.04393, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.41,0.42,0.43 0.44,0.46,0.49,0.53,0.54 0.57,0.59,0.59,0.62), mean=0.495, stddev=0.0403], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.43,0.44,0.45 0.46,0.47,0.49,0.52,0.54 0.55,0.56,0.56,0.57), mean=0.496, stddev=0.0308], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.008,0.01,0.03 0.06,0.12,0.34,0.68,0.84 0.93,0.98,1.0,1.1), mean=0.404, stddev=0.289], bias-{mean,stddev}=-0.002285,0.01214, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.97e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.0,-0.83,-0.42,0.07 0.50,0.97,2.4,3.8,4.4 5.4,6.1,6.2,7.0), mean=2.45, stddev=1.64], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.63,-0.43,-0.23,-0.04 0.08,0.22,0.51,0.76,0.86 1.1,1.4,1.4,2.1), mean=0.523, stddev=0.378], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0.001,0.002,0.004,0.005 0.006,0.01,0.01,0.02), mean=0.00271, stddev=0.00262], oderiv-count=635520
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=128
component name=tdnnf3.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0336, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.47,0.48,0.48 0.49,0.50,0.53,0.57,0.59 0.61,0.61,0.62,0.64), mean=0.536, stddev=0.0399], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.21,0.21,0.22 0.23,0.24,0.27,0.29,0.31 0.32,0.33,0.34,0.37), mean=0.267, stddev=0.0302], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.21,0.23 0.25,0.31,0.48,0.68,0.77 0.85,0.87,0.89,0.91), mean=0.501, stddev=0.195], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0391, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.37,0.38 0.40,0.41,0.44,0.47,0.48 0.49,0.53,0.55,0.56), mean=0.441, stddev=0.0364], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.38,0.38,0.39 0.40,0.41,0.44,0.47,0.48 0.49,0.51,0.53,0.54), mean=0.441, stddev=0.0333], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.007,0.01,0.03 0.05,0.11,0.31,0.59,0.74 0.82,0.88,0.92,1.0), mean=0.36, stddev=0.257], bias-{mean,stddev}=-0.001526,0.01018, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=5.82e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-36,-16,-13,-9.3 -5.1,-1.7,4.5,11,16 20,22,25,33), mean=4.85, stddev=9.21], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.7,-4.6,-4.0,-3.6 -2.2,-0.89,0.35,2.1,2.7 3.4,5.0,5.8,6.8), mean=0.44, stddev=2.07]
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=128
component name=tdnnf4.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03177, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.41,0.43,0.44 0.45,0.46,0.50,0.53,0.55 0.58,0.59,0.68,0.72), mean=0.506, stddev=0.0511], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.19,0.20,0.21 0.22,0.23,0.25,0.27,0.29 0.30,0.31,0.31,0.34), mean=0.253, stddev=0.0271], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.20 0.24,0.27,0.44,0.66,0.73 0.79,0.82,0.85,0.90), mean=0.471, stddev=0.192], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0375, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.34,0.34,0.35 0.36,0.39,0.43,0.45,0.48 0.49,0.50,0.50,0.53), mean=0.422, stddev=0.0416], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.37,0.37,0.37 0.38,0.40,0.42,0.45,0.47 0.48,0.49,0.49,0.50), mean=0.423, stddev=0.0326], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.007,0.008,0.03 0.05,0.11,0.29,0.56,0.73 0.80,0.87,0.90,0.93), mean=0.345, stddev=0.247], bias-{mean,stddev}=-0.0004079,0.00984, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.06e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-9.0,-9.0,-9.0,-5.5 -2.6,-0.19,4.2,7.4,10 12,15,15,18), mean=4.01, stddev=5.11], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.1,-1.8,-1.7,-1.2 -0.61,-0.24,0.47,1.1,1.4 1.8,2.0,2.1,2.3), mean=0.414, stddev=0.845]
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=128
component name=tdnnf5.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02986, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.41,0.41,0.42 0.43,0.45,0.48,0.50,0.51 0.52,0.53,0.55,0.57), mean=0.476, stddev=0.0342], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.18,0.18,0.19 0.20,0.22,0.24,0.26,0.27 0.28,0.29,0.30,0.31), mean=0.238, stddev=0.0254], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.19,0.21 0.23,0.27,0.41,0.60,0.70 0.74,0.80,0.82,0.83), mean=0.444, stddev=0.176], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03463, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.32,0.34 0.35,0.36,0.39,0.42,0.43 0.44,0.45,0.48,0.50), mean=0.39, stddev=0.0341], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.31,0.33 0.35,0.36,0.39,0.42,0.43 0.44,0.46,0.46,0.49), mean=0.391, stddev=0.0322], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.01,0.01,0.03 0.04,0.10,0.27,0.53,0.67 0.72,0.78,0.84,0.86), mean=0.318, stddev=0.229], bias-{mean,stddev}=-0.002526,0.009566, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.003,0.005 0.006,0.01,0.01,0.02), mean=0.00205, stddev=0.00313], oderiv-count=47424
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=128
component name=tdnnf6.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02751, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.35,0.39,0.40 0.40,0.42,0.44,0.47,0.48 0.48,0.49,0.50,0.50), mean=0.439, stddev=0.0295], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.17,0.17,0.18 0.19,0.20,0.22,0.24,0.25 0.26,0.27,0.28,0.34), mean=0.219, stddev=0.0253], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.19 0.21,0.25,0.38,0.55,0.63 0.67,0.73,0.73,0.75), mean=0.41, stddev=0.16], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03099, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.28,0.29 0.31,0.32,0.35,0.38,0.39 0.40,0.42,0.43,0.43), mean=0.349, stddev=0.0334], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.30,0.30,0.31 0.32,0.33,0.35,0.37,0.38 0.39,0.39,0.40,0.41), mean=0.35, stddev=0.0236], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.005,0.008,0.02 0.05,0.09,0.24,0.47,0.60 0.65,0.72,0.74,0.78), mean=0.285, stddev=0.204], bias-{mean,stddev}=-0.0001511,0.00783, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0009,0.001,0.002 0.002,0.002,0.002,0.004), mean=0.000862, stddev=0.000806], oderiv-count=336384
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=128
component name=tdnnf7.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02648, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.37,0.39 0.39,0.40,0.43,0.44,0.45 0.46,0.47,0.47,0.47), mean=0.423, stddev=0.0241], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.15,0.16,0.17 0.18,0.19,0.21,0.23,0.24 0.25,0.26,0.27,0.27), mean=0.21, stddev=0.0244], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.19 0.21,0.25,0.38,0.54,0.60 0.63,0.66,0.68,0.71), mean=0.397, stddev=0.147], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03009, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.28,0.29 0.30,0.31,0.33,0.37,0.38 0.38,0.40,0.40,0.41), mean=0.339, stddev=0.0297], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.28,0.30 0.31,0.32,0.34,0.36,0.37 0.38,0.38,0.38,0.41), mean=0.34, stddev=0.0247], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.008,0.01,0.02 0.04,0.09,0.23,0.45,0.58 0.65,0.69,0.72,0.74), mean=0.277, stddev=0.198], bias-{mean,stddev}=-0.0002883,0.007343, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0005,0.003,0.003 0.004,0.005,0.005,0.01), mean=0.00136, stddev=0.00165], oderiv-count=61120
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=128
component name=tdnnf8.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02598, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.35,0.37,0.37 0.38,0.39,0.41,0.44,0.46 0.47,0.47,0.47,0.48), mean=0.415, stddev=0.03], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.14,0.15,0.16 0.17,0.18,0.20,0.23,0.24 0.25,0.26,0.27,0.29), mean=0.206, stddev=0.0272], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.18 0.20,0.23,0.37,0.52,0.59 0.64,0.67,0.68,0.72), mean=0.387, stddev=0.152], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02928, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.21,0.24,0.25,0.28 0.30,0.31,0.33,0.35,0.37 0.38,0.40,0.40,0.42), mean=0.33, stddev=0.0333], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.28,0.29 0.30,0.31,0.33,0.35,0.36 0.36,0.37,0.38,0.40), mean=0.33, stddev=0.023], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.004,0.008,0.02 0.04,0.08,0.23,0.44,0.55 0.63,0.69,0.70,0.77), mean=0.268, stddev=0.195], bias-{mean,stddev}=0.0005115,0.006319, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=128
component name=tdnnf9.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0264, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.37,0.38 0.39,0.40,0.42,0.44,0.45 0.47,0.48,0.49,0.50), mean=0.422, stddev=0.0276], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.13,0.15,0.16 0.17,0.19,0.21,0.24,0.25 0.26,0.26,0.26,0.29), mean=0.209, stddev=0.0288], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.17 0.20,0.24,0.37,0.53,0.60 0.65,0.68,0.69,0.70), mean=0.395, stddev=0.151], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03041, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.24,0.27,0.27,0.28 0.29,0.32,0.34,0.37,0.38 0.40,0.42,0.42,0.43), mean=0.342, stddev=0.0348], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.29,0.31 0.31,0.32,0.34,0.37,0.38 0.39,0.39,0.39,0.41), mean=0.343, stddev=0.026], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.003,0.007,0.02 0.04,0.09,0.23,0.47,0.58 0.67,0.72,0.74,0.78), mean=0.276, stddev=0.205], bias-{mean,stddev}=-0.0005989,0.00737, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.46e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-16,-15,-12,-7.4 -6.0,-3.2,2.6,7.8,10 12,16,17,17), mean=2.44, stddev=6.5], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.6,-1.4,-1.4,-1.0 -0.74,-0.49,0.28,1.1,1.4 1.9,2.5,2.6,3.3), mean=0.366, stddev=0.931], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.002,0.002 0.002,0.002,0.002,0.002), mean=0.00096, stddev=0.000743], oderiv-count=250560
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=128
component name=tdnnf10.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02706, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.40,0.41,0.44,0.45,0.46 0.46,0.47,0.47,0.51), mean=0.432, stddev=0.0252], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.14,0.15,0.17 0.18,0.19,0.21,0.24,0.25 0.26,0.27,0.28,0.30), mean=0.214, stddev=0.0298], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.17,0.18 0.20,0.24,0.38,0.55,0.63 0.66,0.71,0.72,0.73), mean=0.403, stddev=0.159], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03196, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.29,0.30,0.32 0.33,0.33,0.36,0.39,0.40 0.41,0.42,0.42,0.43), mean=0.36, stddev=0.0303], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.31,0.31,0.32 0.33,0.34,0.36,0.38,0.39 0.40,0.42,0.42,0.45), mean=0.361, stddev=0.0259], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.005,0.008,0.02 0.04,0.09,0.25,0.50,0.61 0.69,0.73,0.75,0.81), mean=0.292, stddev=0.213], bias-{mean,stddev}=0.0002981,0.006276, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.002,0.003 0.003,0.004,0.004,0.004), mean=0.00129, stddev=0.00122], oderiv-count=123264
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=128
component name=tdnnf11.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0274, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.39,0.40 0.40,0.42,0.44,0.45,0.47 0.48,0.50,0.50,0.51), mean=0.438, stddev=0.0265], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.15,0.17 0.18,0.20,0.22,0.24,0.25 0.26,0.27,0.27,0.28), mean=0.217, stddev=0.0292], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.17,0.20 0.22,0.25,0.38,0.56,0.64 0.67,0.70,0.73,0.74), mean=0.41, stddev=0.156], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03299, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.28,0.29,0.30 0.31,0.34,0.37,0.40,0.42 0.44,0.45,0.45,0.47), mean=0.371, stddev=0.0409], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.32,0.34 0.35,0.35,0.37,0.39,0.40 0.41,0.43,0.43,0.44), mean=0.372, stddev=0.0237], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.007,0.01,0.02 0.05,0.09,0.25,0.50,0.63 0.71,0.77,0.82,0.84), mean=0.301, stddev=0.22], bias-{mean,stddev}=0.0001173,0.00799, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=128
component name=tdnnf12.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02928, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.41,0.41,0.41,0.42 0.42,0.44,0.47,0.49,0.50 0.52,0.53,0.53,0.53), mean=0.468, stddev=0.0306], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.13,0.18,0.19 0.20,0.21,0.23,0.26,0.27 0.28,0.29,0.30,0.31), mean=0.232, stddev=0.0304], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.16,0.19 0.22,0.26,0.41,0.60,0.68 0.73,0.78,0.80,0.83), mean=0.434, stddev=0.178], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03494, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.31,0.31,0.32 0.34,0.36,0.40,0.43,0.44 0.45,0.46,0.46,0.57), mean=0.393, stddev=0.0413], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.34,0.35,0.35,0.35 0.36,0.37,0.39,0.42,0.43 0.45,0.45,0.45,0.46), mean=0.394, stddev=0.0285], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.006,0.01,0.03 0.04,0.10,0.27,0.53,0.68 0.74,0.83,0.86,0.94), mean=0.318, stddev=0.235], bias-{mean,stddev}=0.0007181,0.01048, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.01e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.32,-0.02,0.05,0.22 0.60,1.0,1.6,2.4,3.0 3.2,3.5,3.7,4.6), mean=1.71, stddev=0.908], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.31,-0.30,-0.03,0.03 0.09,0.18,0.35,0.60,0.66 0.73,0.81,0.88,0.91), mean=0.374, stddev=0.23], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.002,0.006,0.007 0.008,0.008,0.008,0.009), mean=0.00292, stddev=0.00302], oderiv-count=52224
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=128
component name=tdnnf13.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03186, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.44,0.44,0.46 0.47,0.48,0.50,0.53,0.55 0.57,0.57,0.59,0.59), mean=0.509, stddev=0.0341], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.19,0.20 0.22,0.23,0.25,0.28,0.29 0.31,0.32,0.33,0.36), mean=0.253, stddev=0.0325], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.20,0.22 0.24,0.29,0.45,0.64,0.74 0.78,0.81,0.85,0.90), mean=0.475, stddev=0.184], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03886, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.34,0.36 0.39,0.41,0.44,0.47,0.48 0.49,0.50,0.51,0.53), mean=0.438, stddev=0.0376], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.37,0.37,0.39 0.40,0.41,0.43,0.46,0.48 0.49,0.50,0.52,0.54), mean=0.439, stddev=0.0313], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.004,0.01,0.03 0.06,0.12,0.30,0.58,0.74 0.84,0.94,0.95,0.99), mean=0.356, stddev=0.258], bias-{mean,stddev}=9.984e-05,0.01456, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.466667, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=128
component name=prefinal-l type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.005, max-change=0.75, params-rms=0.04551, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.44,0.44,0.47 0.47,0.48,0.51,0.54,0.55 0.57,0.57,0.57,0.57), mean=0.514, stddev=0.0326], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.28,0.30 0.31,0.33,0.36,0.39,0.42 0.43,0.44,0.44,0.46), mean=0.362, stddev=0.0392], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.19 0.21,0.27,0.45,0.66,0.74 0.79,0.84,0.88,0.92), mean=0.474, stddev=0.201], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.05742, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.37,0.37,0.38 0.39,0.41,0.45,0.50,0.52 0.55,0.55,0.56,0.60), mean=0.457, stddev=0.049], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.53,0.55,0.57 0.58,0.60,0.65,0.68,0.71 0.73,0.76,0.76,0.78), mean=0.648, stddev=0.0507], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.21 0.24,0.33,0.56,0.85,0.96 1.0,1.1,1.1,1.2), mean=0.591, stddev=0.269], bias-{mean,stddev}=-0.004406,0.01779, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.26e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.55,0.85,1.2 1.5,2.0,2.8,3.7,4.0 4.1,4.4,4.8,5.4), mean=2.82, stddev=0.963], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.12,0.14,0.17 0.21,0.29,0.40,0.50,0.56 0.58,0.69,0.71,0.80), mean=0.394, stddev=0.131]
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-chain.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, params-rms=0.06121, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.54,0.61,0.62 0.64,0.66,0.69,0.72,0.74 0.77,0.78,0.78,0.80), mean=0.691, stddev=0.0452], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.39,0.40,0.42 0.43,0.45,0.48,0.53,0.54 0.56,0.58,0.58,0.63), mean=0.488, stddev=0.0448], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.18,0.23 0.27,0.37,0.62,0.89,1.0 1.1,1.1,1.2,1.2), mean=0.635, stddev=0.275], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.00439297, l2-regularize=5e-05, max-change=1.5, linear-params-rms=0.03002, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.003,0.006,0.02 0.03,0.05,0.14,0.32,0.41 0.48,0.56,0.60,0.78), mean=0.187, stddev=0.15], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.8 1.8,1.8,1.9,2.0,2.0 2.0,2.1,2.1,2.2), mean=1.91, stddev=0.0924], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.51,0.69,1.1 1.2,1.4,1.8,2.3,2.5 2.5,2.7,2.7,2.8), mean=1.84, stddev=0.518], bias-{mean,stddev}=-4.111e-06,0.05048, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.03146, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.18,0.18,0.19 0.21,0.23,0.25,0.27,0.29 0.31,0.31,0.32,0.35), mean=0.249, stddev=0.0331], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.30,0.31,0.32 0.32,0.33,0.35,0.38,0.39 0.40,0.41,0.41,0.44), mean=0.355, stddev=0.0284], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.10,0.10,0.10,0.12 0.15,0.19,0.31,0.45,0.51 0.55,0.60,0.61,0.65), mean=0.326, stddev=0.142], bias-{mean,stddev}=-0.0009281,0.01128, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.79e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.59,0.60,0.74 0.88,1.1,1.4,1.8,1.9 2.2,2.4,2.7,2.9), mean=1.42, stddev=0.455], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.30,0.32,0.34 0.36,0.40,0.47,0.54,0.59 0.61,0.70,0.70,0.74), mean=0.479, stddev=0.0903], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.004,0.006,0.008 0.008,0.009,0.01,0.01), mean=0.00381, stddev=0.00291], oderiv-count=22848
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-xent.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00439297, l2-regularize=0.0005, max-change=0.75, params-rms=0.02071, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.20,0.21 0.21,0.22,0.24,0.25,0.25 0.26,0.26,0.26,0.28), mean=0.234, stddev=0.0161], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.11,0.12,0.13 0.14,0.15,0.16,0.18,0.19 0.20,0.21,0.21,0.22), mean=0.164, stddev=0.0215], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.06,0.06,0.08,0.08 0.10,0.13,0.21,0.30,0.34 0.36,0.39,0.40,0.41), mean=0.216, stddev=0.0908], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0219648, l2-regularize=5e-05, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.02547, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.003,0.007,0.02 0.04,0.05,0.13,0.27,0.34 0.40,0.46,0.49,0.65), mean=0.163, stddev=0.122], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.5 1.5,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.62, stddev=0.0641], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.89,0.89,0.90,0.99 1.0,1.2,1.5,1.9,2.1 2.2,2.2,2.3,2.3), mean=1.57, stddev=0.398], bias-{mean,stddev}=2.913e-08,0.01961, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=4040

LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:9.80693 tdnnf2.linear:5.04603 tdnnf2.affine:5.62467 tdnnf3.linear:4.30066 tdnnf3.affine:5.00572 tdnnf4.linear:4.06705 tdnnf4.affine:4.80118 tdnnf5.linear:3.82167 tdnnf5.affine:4.43454 tdnnf6.linear:3.5216 tdnnf6.affine:3.96728 tdnnf7.linear:3.38884 tdnnf7.affine:3.85282 tdnnf8.linear:3.32599 tdnnf8.affine:3.74826 tdnnf9.linear:3.37973 tdnnf9.affine:3.89386 tdnnf10.linear:3.46369 tdnnf10.affine:4.09143 tdnnf11.linear:3.50751 tdnnf11.affine:4.22371 tdnnf12.linear:3.74844 tdnnf12.affine:4.47407 tdnnf13.linear:4.07807 tdnnf13.affine:4.97674 prefinal-l:4.1195 prefinal-chain.affine:5.201 prefinal-chain.linear:5.54049 output.affine:15.6007 prefinal-xent.affine:2.85014 prefinal-xent.linear:1.8749 output-xent.affine:13.0123 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:25.9407 tdnnf2.linear:16.2072 tdnnf2.affine:16.0547 tdnnf3.linear:14.0484 tdnnf3.affine:14.1802 tdnnf4.linear:13.5896 tdnnf4.affine:14.0037 tdnnf5.linear:12.6376 tdnnf5.affine:12.7518 tdnnf6.linear:11.8937 tdnnf6.affine:11.6433 tdnnf7.linear:12.0112 tdnnf7.affine:11.5986 tdnnf8.linear:12.446 tdnnf8.affine:11.7525 tdnnf9.linear:12.9069 tdnnf9.affine:11.9494 tdnnf10.linear:13.2364 tdnnf10.affine:12.1005 tdnnf11.linear:12.9102 tdnnf11.affine:11.8962 tdnnf12.linear:12.8451 tdnnf12.affine:11.9805 tdnnf13.linear:13.658 tdnnf13.affine:12.6302 prefinal-l:11.8929 prefinal-chain.affine:18.567 prefinal-chain.linear:27.4151 output.affine:121.882 prefinal-xent.affine:13.9728 prefinal-xent.linear:13.6433 output-xent.affine:93.6639 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.376383 tdnnf2.linear:0.309539 tdnnf2.affine:0.347919 tdnnf3.linear:0.304655 tdnnf3.affine:0.350278 tdnnf4.linear:0.297992 tdnnf4.affine:0.340869 tdnnf5.linear:0.298799 tdnnf5.affine:0.34447 tdnnf6.linear:0.295234 tdnnf6.affine:0.339787 tdnnf7.linear:0.281539 tdnnf7.affine:0.331555 tdnnf8.linear:0.267421 tdnnf8.affine:0.318778 tdnnf9.linear:0.261591 tdnnf9.affine:0.325479 tdnnf10.linear:0.261352 tdnnf10.affine:0.337848 tdnnf11.linear:0.270483 tdnnf11.affine:0.353931 tdnnf12.linear:0.290995 tdnnf12.affine:0.373029 tdnnf13.linear:0.297908 tdnnf13.affine:0.392535 prefinal-l:0.343036 prefinal-chain.affine:0.279381 prefinal-chain.linear:0.201923 output.affine:0.128035 prefinal-xent.affine:0.203593 prefinal-xent.linear:0.136893 output-xent.affine:0.138938 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=3 threads=1
# Ended (code 0) at Mon Feb 24 10:17:50 CST 2020, elapsed time 3 seconds
