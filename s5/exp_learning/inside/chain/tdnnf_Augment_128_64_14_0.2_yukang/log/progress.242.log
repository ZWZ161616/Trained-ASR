# nnet3-am-info exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/242.mdl && nnet3-show-progress --use-gpu=no exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/241.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/242.mdl 
# Started at Mon Feb 24 12:05:29 CST 2020
#
nnet3-am-info exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/242.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 4040
prior-dimension: 0
# Nnet info follows.
left-context: 169
right-context: 169
num-parameters: 989456
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=128
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=128 output-dim=128
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=128 output-dim=128
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=128 output-dim=64
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=64 output-dim=128
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=128 output-dim=128
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=128 output-dim=128
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.75, tdnn1.dropout), tdnnf2.dropout) input-dim=128 output-dim=128
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=128 output-dim=64
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=64 output-dim=128
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=128 output-dim=128
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=128 output-dim=128
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.75, tdnnf2.noop), tdnnf3.dropout) input-dim=128 output-dim=128
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=128 output-dim=64
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=64 output-dim=128
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=128 output-dim=128
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=128 output-dim=128
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.75, tdnnf3.noop), tdnnf4.dropout) input-dim=128 output-dim=128
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=128 output-dim=64
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=64 output-dim=128
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=128 output-dim=128
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=128 output-dim=128
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.75, tdnnf4.noop), tdnnf5.dropout) input-dim=128 output-dim=128
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=128 output-dim=64
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=64 output-dim=128
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=128 output-dim=128
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=128 output-dim=128
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.75, tdnnf5.noop), tdnnf6.dropout) input-dim=128 output-dim=128
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=128 output-dim=64
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=64 output-dim=128
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=128 output-dim=128
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=128 output-dim=128
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.75, tdnnf6.noop), tdnnf7.dropout) input-dim=128 output-dim=128
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=128 output-dim=64
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=64 output-dim=128
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=128 output-dim=128
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=128 output-dim=128
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.75, tdnnf7.noop), tdnnf8.dropout) input-dim=128 output-dim=128
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=128 output-dim=64
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=64 output-dim=128
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=128 output-dim=128
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=128 output-dim=128
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.75, tdnnf8.noop), tdnnf9.dropout) input-dim=128 output-dim=128
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=128 output-dim=64
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=64 output-dim=128
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=128 output-dim=128
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=128 output-dim=128
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.75, tdnnf9.noop), tdnnf10.dropout) input-dim=128 output-dim=128
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=128 output-dim=64
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=64 output-dim=128
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=128 output-dim=128
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=128 output-dim=128
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.75, tdnnf10.noop), tdnnf11.dropout) input-dim=128 output-dim=128
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=128 output-dim=64
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=64 output-dim=128
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=128 output-dim=128
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=128 output-dim=128
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.75, tdnnf11.noop), tdnnf12.dropout) input-dim=128 output-dim=128
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=128 output-dim=64
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=64 output-dim=128
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=128 output-dim=128
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=128 output-dim=128
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.75, tdnnf12.noop), tdnnf13.dropout) input-dim=128 output-dim=128
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=128 output-dim=64
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=128 output-dim=128
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=128 output-dim=128
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=64 output-dim=64
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=64 output-dim=4040
output-node name=output input=output.affine dim=4040 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=128 output-dim=128
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=128 output-dim=128
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=64 output-dim=64
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=64 output-dim=4040
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=4040 output-dim=4040
output-node name=output-xent input=output-xent.log-softmax dim=4040 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.01087, bias-{mean,stddev}=0.03747,0.5704
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.1416, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.3,1.4,1.5 1.6,1.7,1.9,2.4,2.7 2.9,3.1,3.2,3.3), mean=2.05, stddev=0.454], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.53,0.62,0.66 0.72,0.87,1.5,1.9,2.4 2.6,2.7,2.8,3.3), mean=1.48, stddev=0.601], bias-{mean,stddev}=-0.1249,0.1919, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=8.2e+06, self-repaired-proportion=0.0194602, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.004,0.009,0.02 0.03,0.05,0.10,0.20,0.23 0.25,0.29,0.31,0.32), mean=0.12, stddev=0.0789], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.05,0.09 0.10,0.18,0.33,0.54,0.66 0.68,0.75,0.76,0.80), mean=0.352, stddev=0.193], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.02 0.02,0.03,0.03,0.05,0.06 0.06,0.07,0.08,0.14), mean=0.038, stddev=0.0177], oderiv-count=1.25908e+07
component name=tdnn1.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=91904, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.007,0.01,0.02 0.03,0.05,0.10,0.20,0.23 0.24,0.30,0.32,0.33), mean=0.119, stddev=0.0794], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.06,0.06,0.09 0.10,0.14,0.21,0.26,0.29 0.31,0.32,0.33,0.33), mean=0.2, stddev=0.0695]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1181, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.9,1.9,1.9,1.9 1.9,1.9,1.9,1.9,1.9 1.9,1.9,1.9,1.9), mean=1.89, stddev=0.00207], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.69,0.72,0.76 0.80,0.84,0.93,1.0,1.1 1.1,1.2,1.2,1.3), mean=0.938, stddev=0.11], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1178, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.92,0.99,1.1,1.1 1.1,1.2,1.3,1.4,1.5 1.6,1.7,1.7,1.8), mean=1.32, stddev=0.154], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.2,1.2 1.2,1.3,1.3,1.4,1.5 1.5,1.5,1.5,1.6), mean=1.33, stddev=0.0944], bias-{mean,stddev}=-0.1733,0.09592, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=8.2e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.87,0.88,1.1 1.2,1.3,1.5,1.6,1.7 1.7,1.8,1.9,2.0), mean=1.45, stddev=0.221], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.36,0.37,0.38 0.39,0.45,0.54,0.58,0.59 0.60,0.61,0.61,0.62), mean=0.515, stddev=0.0716], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.003 0.003,0.008,0.008,0.009), mean=0.002, stddev=0.00124], oderiv-count=1.19054e+07
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=84736, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.83,0.92,1.1 1.2,1.3,1.5,1.6,1.7 1.8,1.9,1.9,2.1), mean=1.45, stddev=0.23], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.5,1.5,1.7 1.8,1.9,2.2,2.6,2.8 2.9,3.0,3.0,3.2), mean=2.29, stddev=0.385]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=128
component name=tdnnf3.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1069, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.71, stddev=0.00561], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.66,0.67,0.70 0.74,0.77,0.85,0.93,0.96 0.98,1.0,1.1,1.1), mean=0.85, stddev=0.0899], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1121, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.64,0.88,1.0 1.1,1.2,1.3,1.4,1.5 1.5,1.6,1.6,1.7), mean=1.26, stddev=0.166], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.1,1.1 1.2,1.2,1.3,1.4,1.4 1.4,1.5,1.5,1.5), mean=1.27, stddev=0.0908], bias-{mean,stddev}=-0.1779,0.08067, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=6.88e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.64,1.2,1.4 1.5,1.6,1.7,1.9,2.0 2.0,2.1,2.2,2.3), mean=1.72, stddev=0.239], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.39,0.40,0.42 0.44,0.47,0.52,0.56,0.57 0.58,0.59,0.59,0.60), mean=0.512, stddev=0.0496], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0008,0.0009 0.0009,0.0009,0.001,0.001,0.002 0.003,0.003,0.003,0.008), mean=0.00127, stddev=0.000893], oderiv-count=1.09177e+07
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=77568, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,1.2,1.4 1.4,1.5,1.7,1.9,2.0 2.0,2.1,2.2,2.2), mean=1.7, stddev=0.235], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.90,0.91,1.6,2.1 2.2,2.4,2.7,3.0,3.2 3.4,3.4,3.7,3.9), mean=2.69, stddev=0.432]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=128
component name=tdnnf4.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.09914, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.59, stddev=0.00476], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.60,0.63,0.65,0.67 0.70,0.73,0.78,0.85,0.88 0.92,0.94,0.97,0.98), mean=0.79, stddev=0.0721], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1029, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.60,0.64,1.0 1.0,1.1,1.2,1.3,1.3 1.4,1.4,1.4,1.5), mean=1.16, stddev=0.138], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.95,0.95,1.0 1.0,1.1,1.1,1.2,1.3 1.4,1.4,1.4,1.8), mean=1.16, stddev=0.121], bias-{mean,stddev}=-0.1753,0.08865, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=6.72e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.72,0.72,1.4 1.5,1.6,1.7,2.0,2.0 2.1,2.4,2.4,2.6), mean=1.76, stddev=0.285], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.39,0.40 0.42,0.45,0.50,0.55,0.57 0.57,0.58,0.59,0.60), mean=0.502, stddev=0.0512], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0007,0.0007,0.0007 0.0007,0.0008,0.0009,0.001,0.001 0.002,0.002,0.004,0.007), mean=0.00103, stddev=0.000708], oderiv-count=9.8032e+06
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=70400, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.70,0.71,1.4 1.5,1.6,1.7,2.0,2.1 2.1,2.2,2.4,2.4), mean=1.74, stddev=0.281], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,1.1,1.1,2.1 2.4,2.5,2.8,3.1,3.3 3.5,3.7,3.7,4.4), mean=2.81, stddev=0.492]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=128
component name=tdnnf5.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0918, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5), mean=1.47, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.55,0.59,0.62 0.64,0.67,0.73,0.80,0.84 0.86,0.87,0.91,0.95), mean=0.73, stddev=0.0756], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0901, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.49,0.54,0.62,0.86 0.89,0.93,1.0,1.1,1.1 1.2,1.2,1.2,1.4), mean=1.01, stddev=0.121], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.82,0.83,0.87 0.90,0.94,1.0,1.1,1.1 1.2,1.2,1.2,1.3), mean=1.02, stddev=0.0925], bias-{mean,stddev}=-0.149,0.05798, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=6.28e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.70,0.73,1.2 1.3,1.4,1.5,1.7,1.8 1.8,1.9,1.9,2.0), mean=1.52, stddev=0.227], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.37,0.37,0.42 0.46,0.47,0.51,0.55,0.56 0.57,0.58,0.59,0.61), mean=0.509, stddev=0.0453], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0008,0.0008 0.0009,0.0009,0.001,0.001,0.001 0.001,0.002,0.003,0.004), mean=0.0011, stddev=0.000371], oderiv-count=8.94733e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=63232, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.69,0.80,1.2 1.3,1.4,1.5,1.7,1.8 1.8,1.8,1.9,2.0), mean=1.52, stddev=0.215], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.0,1.2,1.3,2.0 2.0,2.1,2.3,2.5,2.7 2.9,3.1,3.2,3.7), mean=2.34, stddev=0.345]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=128
component name=tdnnf6.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.08954, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4), mean=1.43, stddev=0.00313], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.55,0.59,0.61 0.62,0.66,0.71,0.77,0.79 0.82,0.85,0.87,0.90), mean=0.713, stddev=0.0694], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0841, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.62,0.65,0.77 0.84,0.87,0.95,1.0,1.1 1.1,1.1,1.1,1.3), mean=0.945, stddev=0.108], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.77,0.78,0.81 0.83,0.87,0.94,1.0,1.1 1.1,1.2,1.2,1.2), mean=0.947, stddev=0.0907], bias-{mean,stddev}=-0.1426,0.05437, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=5.26e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.84,0.94,1.0 1.1,1.3,1.4,1.5,1.6 1.7,1.8,1.8,2.0), mean=1.41, stddev=0.198], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.37,0.39,0.41 0.44,0.46,0.50,0.53,0.54 0.57,0.58,0.58,0.60), mean=0.494, stddev=0.0441], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0009,0.0009,0.0009 0.0009,0.001,0.001,0.001,0.001 0.002,0.002,0.002,0.002), mean=0.00115, stddev=0.000194], oderiv-count=7.9751e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=56064, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.79,0.88,0.98,1.1 1.1,1.3,1.4,1.6,1.6 1.7,1.8,1.8,1.9), mean=1.41, stddev=0.196], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.7,1.7 1.8,1.9,2.2,2.4,2.6 2.7,2.8,2.9,3.2), mean=2.19, stddev=0.299]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=128
component name=tdnnf7.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.08928, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4), mean=1.43, stddev=0.00229], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.56,0.58,0.60 0.62,0.66,0.71,0.77,0.80 0.83,0.85,0.87,0.91), mean=0.711, stddev=0.0699], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.08371, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.55,0.62,0.78 0.81,0.84,0.94,1.0,1.1 1.1,1.2,1.2,1.3), mean=0.94, stddev=0.119], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.76,0.77,0.79 0.81,0.85,0.94,1.0,1.1 1.1,1.1,1.1,1.2), mean=0.942, stddev=0.094], bias-{mean,stddev}=-0.1288,0.06036, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.61e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.71,0.86,1.0 1.2,1.3,1.4,1.5,1.7 1.8,1.9,1.9,2.0), mean=1.41, stddev=0.217], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.33,0.41 0.43,0.45,0.48,0.50,0.53 0.55,0.57,0.57,0.59), mean=0.475, stddev=0.0469], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0009,0.0009,0.0009 0.001,0.001,0.001,0.001,0.001 0.001,0.002,0.002,0.002), mean=0.00117, stddev=0.000215], oderiv-count=6.80877e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=48896, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.75,0.84,1.1 1.2,1.3,1.4,1.5,1.6 1.8,1.9,1.9,2.1), mean=1.41, stddev=0.218], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.4,1.7,1.9 1.9,2.0,2.2,2.4,2.7 3.0,3.1,3.2,3.6), mean=2.25, stddev=0.348]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=128
component name=tdnnf8.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.09275, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5), mean=1.48, stddev=0.00169], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.55,0.56,0.60 0.63,0.66,0.74,0.80,0.84 0.89,0.92,0.94,0.97), mean=0.737, stddev=0.0845], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0844, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.56,0.58,0.74 0.78,0.85,0.94,1.0,1.1 1.2,1.2,1.2,1.2), mean=0.946, stddev=0.129], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.78,0.79,0.80 0.82,0.86,0.95,1.0,1.1 1.1,1.2,1.2,1.3), mean=0.95, stddev=0.0993], bias-{mean,stddev}=-0.1001,0.05711, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.91e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.72,0.86,1.1 1.2,1.3,1.4,1.6,1.8 1.9,2.0,2.1,2.1), mean=1.46, stddev=0.253], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.29,0.40 0.41,0.43,0.45,0.48,0.50 0.51,0.52,0.55,0.58), mean=0.452, stddev=0.0437], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0008,0.0009,0.0009 0.001,0.001,0.001,0.001,0.001 0.001,0.001,0.001,0.002), mean=0.00113, stddev=0.000176], oderiv-count=6.18618e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=41728, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.73,0.88,1.1 1.2,1.3,1.4,1.6,1.8 1.9,2.0,2.0,2.1), mean=1.44, stddev=0.254], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.8,1.9 2.0,2.1,2.4,2.7,3.1 3.2,3.4,3.4,3.6), mean=2.46, stddev=0.392]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=128
component name=tdnnf9.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.09621, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5), mean=1.54, stddev=0.00154], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.49,0.54,0.57,0.62 0.64,0.68,0.75,0.85,0.89 0.94,0.95,0.98,1.1), mean=0.763, stddev=0.1], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.08754, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.53,0.57,0.71 0.76,0.86,1.0,1.1,1.2 1.2,1.2,1.2,1.2), mean=0.979, stddev=0.152], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.76,0.78,0.81 0.85,0.91,0.97,1.1,1.1 1.1,1.2,1.2,1.2), mean=0.985, stddev=0.0999], bias-{mean,stddev}=-0.07841,0.04806, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.27e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.78,0.89,1.2 1.2,1.4,1.5,1.7,1.9 2.0,2.2,2.3,2.4), mean=1.55, stddev=0.272], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.27,0.31,0.38 0.41,0.43,0.45,0.47,0.48 0.49,0.50,0.51,0.53), mean=0.447, stddev=0.0393], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0009,0.0009,0.001 0.001,0.001,0.001,0.001,0.001 0.002,0.002,0.002,0.002), mean=0.00121, stddev=0.000172], oderiv-count=4.89024e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=34560, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.77,0.78,0.95,1.1 1.3,1.4,1.5,1.7,1.9 2.0,2.2,2.3,2.3), mean=1.56, stddev=0.272], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.9,2.0,2.0,2.1 2.2,2.4,2.6,3.0,3.1 3.4,3.5,3.7,4.0), mean=2.69, stddev=0.382]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=128
component name=tdnnf10.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.09701, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.55, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.54,0.57,0.59 0.62,0.67,0.75,0.86,0.94 0.98,1.0,1.1,1.1), mean=0.767, stddev=0.119], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0874, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.42,0.51,0.63,0.71 0.77,0.88,0.99,1.1,1.1 1.2,1.2,1.2,1.3), mean=0.978, stddev=0.149], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.73,0.77,0.81 0.84,0.88,0.98,1.1,1.1 1.2,1.2,1.2,1.3), mean=0.983, stddev=0.11], bias-{mean,stddev}=-0.07432,0.03892, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.56e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.80,1.1,1.2 1.2,1.3,1.5,1.6,1.7 1.8,1.8,1.8,1.9), mean=1.46, stddev=0.196], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.28,0.33,0.36 0.38,0.40,0.43,0.46,0.47 0.49,0.49,0.49,0.53), mean=0.428, stddev=0.0418], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.001,0.002,0.002 0.002,0.002,0.002,0.002), mean=0.00149, stddev=0.000182], oderiv-count=3.94445e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=27392, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.70,0.93,1.2,1.2 1.2,1.3,1.5,1.7,1.7 1.8,1.8,1.9,1.9), mean=1.47, stddev=0.201], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.0,2.1,2.2,2.3 2.3,2.4,2.7,3.1,3.4 3.7,3.8,3.8,3.9), mean=2.77, stddev=0.419]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=128
component name=tdnnf11.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0914, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5), mean=1.46, stddev=0.00301], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.50,0.55,0.56 0.59,0.62,0.70,0.83,0.89 0.93,0.96,0.99,1.0), mean=0.722, stddev=0.116], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.08456, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.49,0.56,0.72 0.75,0.78,0.92,1.1,1.2 1.2,1.2,1.2,1.3), mean=0.94, stddev=0.177], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.74,0.75,0.77,0.80 0.83,0.87,0.94,1.0,1.1 1.1,1.1,1.1,1.2), mean=0.952, stddev=0.0935], bias-{mean,stddev}=-0.08256,0.04411, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.83e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.72,0.73,0.77,0.96 1.0,1.1,1.2,1.3,1.4 1.5,1.6,1.6,1.7), mean=1.2, stddev=0.164], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.25,0.25,0.32 0.34,0.37,0.40,0.43,0.44 0.45,0.46,0.47,0.50), mean=0.396, stddev=0.0442], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.002,0.002,0.002 0.003,0.003,0.003,0.003), mean=0.00215, stddev=0.000253], oderiv-count=2.81114e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=20224, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.83,0.84,0.99 1.0,1.1,1.2,1.3,1.4 1.5,1.6,1.6,1.7), mean=1.23, stddev=0.162], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.9,2.0,2.0,2.1 2.2,2.4,2.7,3.2,3.5 3.6,3.8,3.9,4.1), mean=2.8, stddev=0.493]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=128
component name=tdnnf12.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.08908, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4), mean=1.43, stddev=0.00324], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.46,0.49,0.51,0.53 0.57,0.60,0.69,0.81,0.87 0.91,0.94,0.97,0.99), mean=0.703, stddev=0.116], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.08491, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.44,0.51,0.53,0.59 0.67,0.76,0.93,1.1,1.2 1.3,1.3,1.3,1.3), mean=0.939, stddev=0.204], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.72,0.77,0.80 0.83,0.89,0.95,1.0,1.1 1.1,1.1,1.1,1.3), mean=0.956, stddev=0.0919], bias-{mean,stddev}=-0.09077,0.05691, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.11e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.71,0.72,0.80 0.86,0.92,1.0,1.2,1.3 1.3,1.4,1.4,1.9), mean=1.06, stddev=0.176], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.20,0.21,0.23 0.27,0.28,0.35,0.42,0.45 0.46,0.47,0.48,0.53), mean=0.354, stddev=0.0727], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.003 0.003,0.003,0.003,0.003,0.004 0.004,0.004,0.004,0.005), mean=0.00319, stddev=0.000442], oderiv-count=1.78867e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=13056, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.74,0.76,0.82 0.88,0.95,1.1,1.2,1.3 1.4,1.5,1.5,1.9), mean=1.08, stddev=0.18], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,2.0,2.0,2.2 2.3,2.4,3.0,3.5,3.7 4.0,4.1,4.1,4.3), mean=3, stddev=0.558]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=128
component name=tdnnf13.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.09382, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5), mean=1.5, stddev=0.00342], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.48,0.55,0.56,0.58 0.61,0.64,0.73,0.85,0.88 0.94,0.97,1.0,1.1), mean=0.742, stddev=0.112], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.09091, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.50,0.59,0.60,0.66 0.73,0.85,1.0,1.2,1.3 1.3,1.3,1.3,1.4), mean=1.01, stddev=0.195], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.86,0.88,0.90 0.93,0.96,1.0,1.1,1.1 1.2,1.2,1.2,1.3), mean=1.03, stddev=0.0824], bias-{mean,stddev}=-0.0875,0.07882, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.11e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.75,0.79,0.84 0.90,0.99,1.1,1.3,1.4 1.4,1.6,1.6,1.8), mean=1.14, stddev=0.19], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.14,0.16,0.20 0.23,0.30,0.35,0.41,0.45 0.47,0.49,0.49,0.50), mean=0.347, stddev=0.0802], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.005,0.005 0.005,0.005,0.006,0.007,0.007 0.007,0.008,0.008,0.01), mean=0.00593, stddev=0.000876], oderiv-count=635392
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.78,0.85,0.88 0.92,1.0,1.2,1.3,1.4 1.5,1.6,1.7,1.9), mean=1.18, stddev=0.207], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.5,2.5,2.6,2.7 2.8,3.2,3.9,4.5,4.7 5.0,5.2,5.2,5.4), mean=3.84, stddev=0.694]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.234921, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=128
component name=prefinal-l type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.005, max-change=0.75, params-rms=0.1324, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.5,1.5,1.5 1.5,1.5,1.5,1.5), mean=1.5, stddev=0.0214], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.78,0.83,0.84,0.88 0.92,0.97,1.0,1.1,1.2 1.2,1.3,1.3,1.3), mean=1.05, stddev=0.102], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.1958, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.3 1.4,1.5,1.6,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.56, stddev=0.133], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.9,1.9,1.9,2.0 2.1,2.1,2.2,2.3,2.4 2.4,2.5,2.5,2.5), mean=2.21, stddev=0.131], bias-{mean,stddev}=-0.0496,0.1216, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.07e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.8 1.8,1.9,2.1,2.4,2.5 2.6,2.7,2.7,2.8), mean=2.11, stddev=0.262], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.33,0.35 0.35,0.36,0.39,0.42,0.43 0.44,0.44,0.44,0.47), mean=0.389, stddev=0.0288], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.007,0.007,0.008,0.008 0.009,0.009,0.009,0.01,0.01 0.01,0.01,0.01,0.02), mean=0.00967, stddev=0.00135], oderiv-count=631040
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.6,1.7 1.9,1.9,2.1,2.4,2.5 2.6,2.6,2.6,2.8), mean=2.14, stddev=0.263], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,4.4,4.6,4.8 4.9,5.2,5.8,6.5,7.0 7.2,7.6,7.9,10.0), mean=5.9, stddev=0.876]
component name=prefinal-chain.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, params-rms=0.2748, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.1,3.1,3.1,3.1 3.1,3.1,3.1,3.1,3.1 3.1,3.1,3.1,3.1), mean=3.11, stddev=0.00594], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.6,1.8 1.9,2.0,2.2,2.4,2.5 2.6,2.6,2.6,2.7), mean=2.18, stddev=0.25], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-5e-08,-5e-08,-4e-08,-4e-08 -3e-08,-2e-08,5e-10,2e-08,3e-08 4e-08,4e-08,4e-08,5e-08), mean=8.01e-10, stddev=2.12e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.4,3.4,3.5,3.5 3.5,3.6,3.8,4.0,4.1 4.2,4.5,4.5,4.6), mean=3.84, stddev=0.253]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.00257639, l2-regularize=5e-05, max-change=1.5, linear-params-rms=0.2232, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.16,0.25,0.55 0.88,1.2,1.8,2.1,2.3 2.4,2.5,2.7,3.3), mean=1.7, stddev=0.557], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(12,12,13,13 13,13,14,15,15 16,16,16,17), mean=14.2, stddev=0.88], bias-{mean,stddev}=0.001417,0.319, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.1403, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.72,0.79,0.98 1.0,1.1,1.1,1.2,1.2 1.2,1.3,1.3,1.5), mean=1.12, stddev=0.0979], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.3,1.4 1.4,1.5,1.6,1.7,1.7 1.8,1.9,1.9,1.9), mean=1.58, stddev=0.125], bias-{mean,stddev}=-0.06145,0.1816, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.91e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.73,0.75,0.85 0.91,0.95,1.1,1.3,1.5 1.6,1.7,1.7,1.9), mean=1.15, stddev=0.236], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.33,0.36,0.39 0.41,0.43,0.48,0.52,0.56 0.59,0.62,0.63,0.66), mean=0.479, stddev=0.0605], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.004,0.004 0.005,0.005,0.005,0.005,0.006 0.006,0.006,0.007,0.01), mean=0.00508, stddev=0.000778], oderiv-count=612544
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.73,0.76,0.83 0.88,0.92,1.1,1.3,1.5 1.6,1.7,1.7,1.9), mean=1.13, stddev=0.246], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.3,1.4,1.4 1.4,1.5,1.7,1.9,2.0 2.1,2.2,2.3,3.0), mean=1.73, stddev=0.246]
component name=prefinal-xent.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00257639, l2-regularize=0.0005, max-change=0.75, params-rms=0.1419, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.61, stddev=0], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.75,0.82,0.87,0.91 0.96,1.0,1.1,1.2,1.3 1.3,1.4,1.4,1.4), mean=1.13, stddev=0.131], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4e-08,-4e-08,-3e-08,-3e-08 -3e-08,-2e-08,3e-11,2e-08,3e-08 4e-08,5e-08,5e-08,5e-08), mean=1.06e-09, stddev=2.09e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.5 1.5,1.5,1.7,1.7,1.8 1.9,1.9,1.9,1.9), mean=1.65, stddev=0.116]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.012882, l2-regularize=5e-05, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.1922, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.04,0.08,0.28 0.71,1.0,1.5,1.9,2.1 2.3,2.4,2.5,3.5), mean=1.43, stddev=0.556], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(11,11,12,12 12,12,12,12,12 13,13,13,13), mean=12.2, stddev=0.228], bias-{mean,stddev}=-9.855e-09,0.2246, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=4040, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,1e-05 0.0001,0.0002,0.0005,0.001,0.002 0.002,0.003,0.004,0.06), mean=0.000793, stddev=0.0012], oderiv-count=595136
nnet3-show-progress --use-gpu=no exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/241.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/242.mdl 
LOG (nnet3-show-progress[5.5.646~1-cdf2]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:7.69923 tdnnf2.linear:3.77242 tdnnf2.affine:4.21394 tdnnf3.linear:3.30901 tdnnf3.affine:4.01221 tdnnf4.linear:2.95408 tdnnf4.affine:3.65961 tdnnf5.linear:2.74833 tdnnf5.affine:3.19992 tdnnf6.linear:2.54698 tdnnf6.affine:2.89367 tdnnf7.linear:2.43133 tdnnf7.affine:2.76915 tdnnf8.linear:2.27535 tdnnf8.affine:2.64191 tdnnf9.linear:2.34104 tdnnf9.affine:2.76423 tdnnf10.linear:2.42882 tdnnf10.affine:2.89672 tdnnf11.linear:2.49823 tdnnf11.affine:3.07733 tdnnf12.linear:2.69835 tdnnf12.affine:3.31555 tdnnf13.linear:2.87575 tdnnf13.affine:3.70546 prefinal-l:4.02618 prefinal-chain.affine:4.21455 prefinal-chain.linear:4.36835 output.affine:11.2503 prefinal-xent.affine:2.36895 prefinal-xent.linear:1.53878 output-xent.affine:9.55666 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:23.8975 tdnnf2.linear:15.114 tdnnf2.affine:15.2418 tdnnf3.linear:13.6829 tdnnf3.affine:14.5237 tdnnf4.linear:12.6903 tdnnf4.affine:13.3548 tdnnf5.linear:11.7499 tdnnf5.affine:11.6735 tdnnf6.linear:11.4615 tdnnf6.affine:10.9026 tdnnf7.linear:11.4278 tdnnf7.affine:10.8357 tdnnf8.linear:11.8722 tdnnf8.affine:10.8819 tdnnf9.linear:12.3151 tdnnf9.affine:11.2533 tdnnf10.linear:12.4177 tdnnf10.affine:11.2269 tdnnf11.linear:11.6986 tdnnf11.affine:10.8755 tdnnf12.linear:11.4024 tdnnf12.affine:10.9357 tdnnf13.linear:12.0094 tdnnf13.affine:11.7119 prefinal-l:11.9867 prefinal-chain.affine:17.7851 prefinal-chain.linear:24.8746 output.affine:115.304 prefinal-xent.affine:12.8856 prefinal-xent.linear:12.8467 output-xent.affine:98.7654 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.319605 tdnnf2.linear:0.248086 tdnnf2.affine:0.274453 tdnnf3.linear:0.240032 tdnnf3.affine:0.273694 tdnnf4.linear:0.230028 tdnnf4.affine:0.271096 tdnnf5.linear:0.231909 tdnnf5.affine:0.271684 tdnnf6.linear:0.22154 tdnnf6.affine:0.264889 tdnnf7.linear:0.212139 tdnnf7.affine:0.25498 tdnnf8.linear:0.191436 tdnnf8.affine:0.242134 tdnnf9.linear:0.189643 tdnnf9.affine:0.245126 tdnnf10.linear:0.195127 tdnnf10.affine:0.257148 tdnnf11.linear:0.212786 tdnnf11.affine:0.281716 tdnnf12.linear:0.235589 tdnnf12.affine:0.301713 tdnnf13.linear:0.23811 tdnnf13.affine:0.315538 prefinal-l:0.334042 prefinal-chain.affine:0.236088 prefinal-chain.linear:0.174474 output.affine:0.0973058 prefinal-xent.affine:0.183559 prefinal-xent.linear:0.119709 output-xent.affine:0.0968971 ]
# Accounting: time=3 threads=1
# Ended (code 0) at Mon Feb 24 12:05:32 CST 2020, elapsed time 3 seconds
