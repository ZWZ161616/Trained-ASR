# nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/139.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/140.mdl 
# Started at Mon Feb 24 09:31:33 CST 2020
#
nnet3-show-progress --use-gpu=no --verbose=2 exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/139.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/140.mdl 
LOG (nnet3-show-progress[5.5.646~1-cdf2]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
VLOG[1] (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:136) Printing info for the difference between the neural nets: left-context: 169
right-context: 169
num-parameters: 989456
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=128
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=128 output-dim=128
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=128 output-dim=128
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=128 output-dim=64
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=64 output-dim=128
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=128 output-dim=128
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=128 output-dim=128
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.75, tdnn1.dropout), tdnnf2.dropout) input-dim=128 output-dim=128
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=128 output-dim=64
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=64 output-dim=128
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=128 output-dim=128
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=128 output-dim=128
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.75, tdnnf2.noop), tdnnf3.dropout) input-dim=128 output-dim=128
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=128 output-dim=64
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=64 output-dim=128
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=128 output-dim=128
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=128 output-dim=128
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.75, tdnnf3.noop), tdnnf4.dropout) input-dim=128 output-dim=128
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=128 output-dim=64
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=64 output-dim=128
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=128 output-dim=128
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=128 output-dim=128
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.75, tdnnf4.noop), tdnnf5.dropout) input-dim=128 output-dim=128
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=128 output-dim=64
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=64 output-dim=128
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=128 output-dim=128
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=128 output-dim=128
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.75, tdnnf5.noop), tdnnf6.dropout) input-dim=128 output-dim=128
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=128 output-dim=64
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=64 output-dim=128
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=128 output-dim=128
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=128 output-dim=128
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.75, tdnnf6.noop), tdnnf7.dropout) input-dim=128 output-dim=128
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=128 output-dim=64
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=64 output-dim=128
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=128 output-dim=128
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=128 output-dim=128
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.75, tdnnf7.noop), tdnnf8.dropout) input-dim=128 output-dim=128
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=128 output-dim=64
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=64 output-dim=128
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=128 output-dim=128
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=128 output-dim=128
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.75, tdnnf8.noop), tdnnf9.dropout) input-dim=128 output-dim=128
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=128 output-dim=64
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=64 output-dim=128
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=128 output-dim=128
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=128 output-dim=128
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.75, tdnnf9.noop), tdnnf10.dropout) input-dim=128 output-dim=128
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=128 output-dim=64
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=64 output-dim=128
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=128 output-dim=128
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=128 output-dim=128
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.75, tdnnf10.noop), tdnnf11.dropout) input-dim=128 output-dim=128
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=128 output-dim=64
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=64 output-dim=128
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=128 output-dim=128
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=128 output-dim=128
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.75, tdnnf11.noop), tdnnf12.dropout) input-dim=128 output-dim=128
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=128 output-dim=64
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=64 output-dim=128
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=128 output-dim=128
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=128 output-dim=128
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.75, tdnnf12.noop), tdnnf13.dropout) input-dim=128 output-dim=128
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=128 output-dim=64
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=128 output-dim=128
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=128 output-dim=128
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=64 output-dim=64
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=64 output-dim=4040
output-node name=output input=output.affine dim=4040 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=128 output-dim=128
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=128 output-dim=128
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=64 output-dim=64
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=64 output-dim=4040
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=4040 output-dim=4040
output-node name=output-xent input=output-xent.log-softmax dim=4040 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.01087, bias-{mean,stddev}=0.03747,0.5704
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.05384, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.64,0.65,0.67 0.68,0.72,0.78,0.87,0.91 0.94,0.97,0.99,1.1), mean=0.793, stddev=0.0903], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.27,0.28 0.30,0.34,0.56,0.79,0.88 0.92,1.0,1.0,1.0), mean=0.569, stddev=0.218], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.16,0.17,0.20 0.23,0.32,0.63,1.0,1.3 1.4,1.5,1.5,1.7), mean=0.7, stddev=0.384], bias-{mean,stddev}=0.00132,0.04443, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.3e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-1.2,-0.88,-0.54 -0.27,-0.14,0.08,0.47,0.67 0.83,1.2,1.2,1.6), mean=0.142, stddev=0.454], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.2,-2.8,-1.9,-0.97 -0.66,-0.23,0.27,0.98,1.2 1.6,2.1,2.2,3.4), mean=0.306, stddev=0.926], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.03,0.12 0.22,0.32,0.32,0.72), mean=0.037, stddev=0.0965], oderiv-count=206784
component name=tdnn1.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.04171, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.59,0.60,0.61 0.62,0.63,0.66,0.70,0.73 0.74,0.75,0.76,0.79), mean=0.666, stddev=0.0422], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.24,0.25,0.27 0.28,0.30,0.33,0.36,0.38 0.40,0.41,0.44,0.47), mean=0.331, stddev=0.0404], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.25,0.26,0.29 0.33,0.39,0.59,0.84,0.94 1.0,1.1,1.1,1.2), mean=0.624, stddev=0.236], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.04707, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.39,0.42,0.44 0.46,0.49,0.53,0.57,0.60 0.61,0.64,0.65,0.68), mean=0.53, stddev=0.0553], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.47,0.47,0.47,0.48 0.49,0.50,0.53,0.56,0.58 0.59,0.60,0.61,0.63), mean=0.532, stddev=0.0337], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.009,0.01,0.03 0.07,0.12,0.37,0.71,0.90 1.0,1.1,1.1,1.2), mean=0.433, stddev=0.311], bias-{mean,stddev}=0.00155,0.01456, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=6.57e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.56,-0.35,-0.12,0.37 0.62,1.2,1.6,2.4,2.8 3.2,3.4,3.6,4.8), mean=1.72, stddev=0.868], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.22,-0.08,0.02,0.15 0.28,0.36,0.51,0.67,0.72 0.80,0.90,0.99,1.2), mean=0.509, stddev=0.207]
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=128
component name=tdnnf3.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0355, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.48,0.48,0.48,0.50 0.51,0.55,0.57,0.59,0.61 0.62,0.64,0.65,0.66), mean=0.567, stddev=0.0366], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.21,0.22,0.23 0.25,0.26,0.28,0.31,0.32 0.33,0.35,0.36,0.36), mean=0.282, stddev=0.0314], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.24,0.25 0.29,0.34,0.51,0.73,0.80 0.85,0.90,0.91,0.97), mean=0.533, stddev=0.195], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.04122, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.39 0.40,0.43,0.47,0.49,0.51 0.52,0.55,0.55,0.58), mean=0.465, stddev=0.0398], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.40,0.40,0.41 0.43,0.44,0.46,0.49,0.50 0.51,0.52,0.52,0.57), mean=0.465, stddev=0.0316], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.005,0.009,0.03 0.06,0.12,0.33,0.63,0.77 0.87,0.96,0.96,1.1), mean=0.38, stddev=0.271], bias-{mean,stddev}=0.0006908,0.01145, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=128
component name=tdnnf4.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03292, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.45,0.46,0.47 0.47,0.49,0.53,0.56,0.57 0.58,0.59,0.59,0.61), mean=0.526, stddev=0.0358], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.20,0.21 0.23,0.24,0.26,0.28,0.30 0.31,0.33,0.34,0.36), mean=0.261, stddev=0.0315], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.20,0.23 0.26,0.30,0.47,0.66,0.75 0.82,0.84,0.85,0.92), mean=0.492, stddev=0.189], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03997, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.36,0.37,0.38 0.40,0.41,0.45,0.48,0.50 0.51,0.53,0.54,0.56), mean=0.45, stddev=0.0405], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.38,0.38,0.39 0.41,0.42,0.45,0.48,0.50 0.51,0.53,0.53,0.55), mean=0.451, stddev=0.036], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.006,0.01,0.03 0.05,0.12,0.32,0.60,0.75 0.82,0.93,0.96,1.0), mean=0.369, stddev=0.261], bias-{mean,stddev}=-0.0007639,0.0112, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=128
component name=tdnnf5.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03153, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.43,0.45,0.45 0.46,0.48,0.50,0.53,0.54 0.55,0.55,0.55,0.57), mean=0.504, stddev=0.0296], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.20,0.21 0.21,0.23,0.25,0.27,0.28 0.30,0.31,0.32,0.32), mean=0.251, stddev=0.0274], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.20,0.22 0.24,0.29,0.44,0.64,0.70 0.77,0.81,0.84,0.89), mean=0.471, stddev=0.181], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03625, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.32,0.33,0.35 0.36,0.38,0.41,0.44,0.45 0.46,0.47,0.48,0.49), mean=0.409, stddev=0.0356], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.33,0.35,0.36 0.38,0.39,0.41,0.43,0.45 0.46,0.46,0.47,0.50), mean=0.409, stddev=0.0295], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.007,0.008,0.03 0.05,0.10,0.29,0.55,0.68 0.76,0.82,0.84,0.88), mean=0.335, stddev=0.236], bias-{mean,stddev}=-0.0004063,0.009295, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=5.53e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.66,0.73,0.92 1.3,1.6,2.2,3.0,3.3 3.7,3.8,4.0,5.3), mean=2.3, stddev=0.852], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.17,0.21,0.25 0.31,0.38,0.49,0.62,0.67 0.73,0.83,0.86,0.89), mean=0.503, stddev=0.146], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.002,0.002 0.002,0.002,0.002,0.009), mean=0.000719, stddev=0.00107], oderiv-count=189696
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=128
component name=tdnnf6.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02855, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.41 0.42,0.43,0.46,0.48,0.49 0.50,0.51,0.51,0.53), mean=0.456, stddev=0.0317], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.17,0.18,0.19 0.19,0.20,0.23,0.25,0.26 0.27,0.28,0.28,0.30), mean=0.227, stddev=0.0259], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.18,0.20 0.22,0.26,0.40,0.59,0.65 0.71,0.74,0.74,0.80), mean=0.426, stddev=0.165], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03217, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.30,0.32 0.33,0.34,0.36,0.39,0.40 0.40,0.42,0.43,0.44), mean=0.363, stddev=0.0279], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.30,0.30,0.31,0.31 0.32,0.34,0.36,0.38,0.39 0.40,0.42,0.42,0.43), mean=0.363, stddev=0.027], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.004,0.01,0.02 0.04,0.09,0.26,0.49,0.60 0.68,0.75,0.76,0.82), mean=0.297, stddev=0.21], bias-{mean,stddev}=-0.0002881,0.009013, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=8.41e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-8.9,-5.3,-5.1,-2.8 -2.1,-0.47,2.7,4.9,6.3 7.5,9.2,10,11), mean=2.34, stddev=3.43], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.4,-0.93,-0.92,-0.67 -0.39,-0.02,0.44,1.0,1.3 1.5,2.0,2.0,2.6), mean=0.482, stddev=0.695], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.003,0.004 0.005,0.006,0.007,0.03), mean=0.00167, stddev=0.00311], oderiv-count=42048
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=128
component name=tdnnf7.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02731, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.40,0.41,0.44,0.45,0.47 0.48,0.49,0.50,0.52), mean=0.436, stddev=0.0287], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.16,0.17,0.18 0.19,0.20,0.22,0.24,0.25 0.26,0.26,0.27,0.29), mean=0.217, stddev=0.0233], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.18,0.19 0.22,0.26,0.39,0.55,0.63 0.67,0.70,0.71,0.74), mean=0.409, stddev=0.154], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03073, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.27,0.27,0.28,0.30 0.31,0.32,0.35,0.37,0.39 0.40,0.41,0.42,0.42), mean=0.346, stddev=0.0318], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.29,0.30,0.31,0.31 0.31,0.33,0.35,0.37,0.38 0.39,0.39,0.39,0.42), mean=0.347, stddev=0.0238], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4e-05,0.004,0.007,0.02 0.04,0.09,0.24,0.46,0.58 0.65,0.71,0.72,0.78), mean=0.283, stddev=0.202], bias-{mean,stddev}=-0.0007331,0.007084, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.54e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.81,-0.36,-0.27,0.60 0.88,1.3,1.9,2.5,2.8 3.0,3.4,3.5,4.4), mean=1.87, stddev=0.812], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.21,0.27 0.29,0.35,0.47,0.58,0.64 0.70,0.74,0.77,0.84), mean=0.472, stddev=0.135]
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=128
component name=tdnnf8.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02606, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.36,0.37,0.37 0.38,0.39,0.42,0.44,0.45 0.47,0.47,0.47,0.48), mean=0.416, stddev=0.0286], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.15,0.16,0.17 0.17,0.18,0.21,0.23,0.24 0.25,0.25,0.26,0.29), mean=0.207, stddev=0.0253], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.18 0.20,0.24,0.38,0.53,0.59 0.62,0.64,0.68,0.70), mean=0.391, stddev=0.146], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.02984, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.27,0.28 0.29,0.31,0.34,0.37,0.38 0.39,0.40,0.40,0.41), mean=0.336, stddev=0.0332], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.27,0.27,0.29 0.30,0.32,0.34,0.36,0.37 0.38,0.39,0.40,0.40), mean=0.336, stddev=0.027], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.003,0.005,0.007,0.02 0.04,0.09,0.23,0.45,0.56 0.65,0.70,0.72,0.76), mean=0.273, stddev=0.198], bias-{mean,stddev}=-0.0006343,0.007341, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0009,0.002,0.002 0.002,0.003,0.003,0.003), mean=0.000927, stddev=0.000891], oderiv-count=198208
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=128
component name=tdnnf9.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02681, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.37,0.39 0.40,0.40,0.43,0.45,0.46 0.48,0.48,0.49,0.50), mean=0.428, stddev=0.0295], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.16,0.17 0.18,0.19,0.21,0.24,0.25 0.26,0.26,0.27,0.28), mean=0.213, stddev=0.0266], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.15,0.15,0.16,0.18 0.20,0.25,0.38,0.54,0.63 0.65,0.68,0.71,0.72), mean=0.4, stddev=0.154], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03054, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.27,0.29 0.30,0.31,0.34,0.37,0.39 0.40,0.41,0.42,0.45), mean=0.344, stddev=0.0337], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.29,0.29,0.30 0.31,0.32,0.34,0.37,0.38 0.39,0.40,0.40,0.41), mean=0.344, stddev=0.027], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0004,0.004,0.009,0.02 0.04,0.09,0.24,0.47,0.58 0.65,0.72,0.73,0.78), mean=0.28, stddev=0.202], bias-{mean,stddev}=0.0006632,0.005968, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.001,0.002,0.002 0.003,0.003,0.003,0.003), mean=0.00114, stddev=0.000896], oderiv-count=207360
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=128
component name=tdnnf10.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.0275, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.41,0.42,0.44,0.46,0.47 0.48,0.49,0.50,0.50), mean=0.439, stddev=0.0271], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.15,0.15,0.17 0.18,0.19,0.22,0.24,0.26 0.27,0.28,0.28,0.30), mean=0.218, stddev=0.0307], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.19 0.21,0.25,0.39,0.55,0.63 0.68,0.72,0.75,0.79), mean=0.409, stddev=0.161], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03191, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.26,0.29,0.31 0.31,0.33,0.36,0.38,0.40 0.43,0.44,0.44,0.45), mean=0.359, stddev=0.036], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.31,0.31,0.32 0.33,0.34,0.36,0.38,0.39 0.41,0.42,0.42,0.44), mean=0.36, stddev=0.0263], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.005,0.005,0.02 0.04,0.09,0.25,0.48,0.60 0.69,0.75,0.79,0.83), mean=0.292, stddev=0.212], bias-{mean,stddev}=0.0005645,0.007014, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.37e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.49,-0.13,0.03,0.27 0.44,0.73,1.9,2.9,3.6 4.1,4.5,4.5,5.0), mean=1.95, stddev=1.21], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-0.14,-0.08,-0.06,0.09 0.14,0.22,0.42,0.58,0.66 0.74,0.77,0.78,0.96), mean=0.407, stddev=0.209]
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=128
component name=tdnnf11.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02793, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.39,0.39,0.39,0.40 0.41,0.43,0.44,0.46,0.48 0.49,0.50,0.51,0.53), mean=0.446, stddev=0.0276], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.13,0.16,0.16,0.17 0.18,0.19,0.22,0.25,0.26 0.27,0.28,0.28,0.31), mean=0.221, stddev=0.0304], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.17,0.19 0.21,0.26,0.39,0.57,0.64 0.68,0.72,0.74,0.77), mean=0.417, stddev=0.162], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03333, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.22,0.26,0.27,0.31 0.33,0.35,0.38,0.40,0.42 0.43,0.45,0.45,0.45), mean=0.375, stddev=0.0388], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.32,0.33,0.33 0.34,0.35,0.38,0.40,0.41 0.41,0.42,0.42,0.44), mean=0.376, stddev=0.026], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.005,0.008,0.02 0.04,0.09,0.25,0.51,0.63 0.71,0.76,0.82,0.89), mean=0.305, stddev=0.221], bias-{mean,stddev}=-0.0002542,0.008015, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.03e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-9.3,-8.2,-6.5,-4.4 -3.1,-1.3,1.9,5.2,7.0 8.3,9.5,9.9,13), mean=1.98, stddev=4.02], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.3,-1.1,-1.0,-0.84 -0.66,-0.23,0.42,1.0,1.4 1.6,2.0,2.1,2.8), mean=0.404, stddev=0.8], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.002,0.004,0.004 0.005,0.005,0.005,0.005), mean=0.002, stddev=0.00171], oderiv-count=101120
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=128
component name=tdnnf12.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.02826, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.40,0.40,0.40,0.42 0.42,0.43,0.45,0.47,0.48 0.49,0.50,0.50,0.50), mean=0.451, stddev=0.0249], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.14,0.16,0.17 0.19,0.20,0.23,0.25,0.26 0.27,0.28,0.29,0.31), mean=0.224, stddev=0.0292], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.20 0.22,0.26,0.39,0.58,0.65 0.70,0.73,0.76,0.80), mean=0.42, stddev=0.167], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03476, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.25,0.29,0.29,0.30 0.33,0.35,0.39,0.43,0.45 0.46,0.48,0.49,0.49), mean=0.39, stddev=0.0466], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.32,0.33,0.35 0.35,0.37,0.39,0.42,0.43 0.44,0.45,0.45,0.47), mean=0.392, stddev=0.0288], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.006,0.008,0.02 0.05,0.10,0.27,0.53,0.65 0.74,0.84,0.85,0.91), mean=0.318, stddev=0.232], bias-{mean,stddev}=0.0002774,0.0102, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.28e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-9.4,-7.3,-5.5,-4.8 -3.8,-2.5,0.65,3.3,5.2 7.8,10,11,11), mean=0.734, stddev=3.81], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-2.2,-1.8,-1.8,-1.2 -1.0,-0.62,0.23,1.0,1.4 1.7,2.1,2.5,2.8), mean=0.252, stddev=0.952], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.003,0.005,0.005 0.006,0.006,0.006,0.006), mean=0.00286, stddev=0.00193], oderiv-count=159936
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=128
component name=tdnnf13.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.03254, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.43,0.43,0.45,0.46 0.48,0.48,0.52,0.55,0.56 0.57,0.58,0.59,0.60), mean=0.519, stddev=0.0355], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.19,0.19,0.20,0.21 0.22,0.23,0.26,0.28,0.30 0.31,0.33,0.34,0.36), mean=0.258, stddev=0.031], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.18,0.20,0.22 0.25,0.29,0.45,0.67,0.75 0.80,0.84,0.87,0.96), mean=0.482, stddev=0.197], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.03893, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.31,0.31,0.32,0.35 0.37,0.40,0.44,0.48,0.50 0.51,0.53,0.55,0.57), mean=0.438, stddev=0.0489], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.39,0.39 0.40,0.42,0.44,0.47,0.47 0.48,0.50,0.50,0.51), mean=0.44, stddev=0.0279], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.003,0.007,0.03 0.05,0.11,0.30,0.59,0.73 0.83,0.93,0.95,1.0), mean=0.356, stddev=0.259], bias-{mean,stddev}=-0.001424,0.01316, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.18e+04, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-4.0,-2.1,-1.8,-1.0 -0.52,0.33,1.6,2.8,3.4 4.0,4.9,5.1,5.7), mean=1.58, stddev=1.61], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-1.0,-0.81,-0.76,-0.55 -0.31,-0.06,0.31,0.65,0.85 1.0,1.3,1.4,1.5), mean=0.291, stddev=0.469], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0,0.01,0.02 0.02,0.02,0.03,0.03), mean=0.00612, stddev=0.00765], oderiv-count=10880
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.396825, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=128
component name=prefinal-l type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.005, max-change=0.75, params-rms=0.03888, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.38,0.38,0.39 0.40,0.41,0.44,0.46,0.48 0.48,0.49,0.49,0.51), mean=0.439, stddev=0.0292], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.23,0.23,0.23,0.25 0.26,0.28,0.31,0.34,0.36 0.37,0.38,0.38,0.41), mean=0.309, stddev=0.0369], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.14 0.17,0.23,0.38,0.57,0.66 0.70,0.72,0.75,0.76), mean=0.402, stddev=0.178], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.06035, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.37,0.37,0.39 0.41,0.44,0.48,0.52,0.55 0.56,0.57,0.57,0.61), mean=0.48, stddev=0.051], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.57,0.59,0.60 0.62,0.64,0.69,0.71,0.73 0.75,0.76,0.77,0.79), mean=0.681, stddev=0.045], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.16,0.16,0.18,0.23 0.27,0.35,0.59,0.88,0.98 1.1,1.1,1.2,1.2), mean=0.624, stddev=0.278], bias-{mean,stddev}=-6.627e-05,0.02151, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.01,0.02,0.02 0.02,0.03,0.03,0.03), mean=0.0111, stddev=0.0086], oderiv-count=19584
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-chain.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, params-rms=0.05601, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.52,0.55,0.57 0.57,0.59,0.63,0.66,0.69 0.70,0.71,0.74,0.75), mean=0.632, stddev=0.0448], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.34,0.35,0.37 0.38,0.40,0.45,0.49,0.51 0.52,0.54,0.54,0.55), mean=0.445, stddev=0.0501], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.14,0.14,0.18,0.21 0.26,0.34,0.56,0.80,0.93 0.98,1.0,1.1,1.1), mean=0.581, stddev=0.253], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.00547011, l2-regularize=5e-05, max-change=1.5, linear-params-rms=0.03007, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1e-05,0.003,0.005,0.02 0.03,0.05,0.14,0.31,0.42 0.49,0.57,0.62,0.74), mean=0.187, stddev=0.152], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.8 1.8,1.8,1.9,2.0,2.0 2.0,2.1,2.1,2.1), mean=1.91, stddev=0.091], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.49,0.49,0.65,1.1 1.2,1.4,1.8,2.3,2.5 2.6,2.7,2.7,2.8), mean=1.84, stddev=0.518], bias-{mean,stddev}=-4.044e-06,0.05257, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.03277, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.18,0.19,0.20,0.21 0.22,0.23,0.26,0.28,0.29 0.30,0.32,0.32,0.44), mean=0.26, stddev=0.0334], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.32,0.32,0.33 0.34,0.35,0.37,0.39,0.40 0.41,0.42,0.42,0.43), mean=0.37, stddev=0.0257], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.09,0.09,0.10,0.12 0.15,0.19,0.32,0.48,0.56 0.59,0.62,0.63,0.68), mean=0.338, stddev=0.152], bias-{mean,stddev}=0.001426,0.01229, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.01,0.02,0.02 0.02,0.03,0.03,0.03), mean=0.0102, stddev=0.00938], oderiv-count=2176
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=prefinal-xent.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00547011, l2-regularize=0.0005, max-change=0.75, params-rms=0.02075, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.20,0.21,0.21 0.21,0.22,0.24,0.25,0.25 0.26,0.27,0.27,0.27), mean=0.234, stddev=0.016], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.12,0.12,0.13,0.13 0.14,0.15,0.16,0.18,0.19 0.20,0.20,0.21,0.22), mean=0.165, stddev=0.0206], params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.07,0.07,0.08,0.09 0.10,0.12,0.21,0.30,0.34 0.36,0.38,0.39,0.42), mean=0.216, stddev=0.091], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=0, test-mode=false
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0273505, l2-regularize=5e-05, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.02628, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.003,0.007,0.02 0.04,0.06,0.13,0.27,0.35 0.42,0.48,0.51,0.69), mean=0.169, stddev=0.126], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.6,1.6,1.7,1.7,1.7 1.8,1.8,1.8,1.8), mean=1.67, stddev=0.0651], linear-params-singular-values=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.89,0.89,0.94,0.99 1.1,1.2,1.6,2.0,2.2 2.2,2.3,2.3,2.4), mean=1.62, stddev=0.41], bias-{mean,stddev}=5.754e-10,0.01979, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=4040, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,0 0,0,0.0003,0.002,0.003 0.004,0.006,0.007,0.06), mean=0.00105, stddev=0.00185], oderiv-count=23936

LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:9.04903 tdnnf2.linear:5.33887 tdnnf2.affine:6.0278 tdnnf3.linear:4.54456 tdnnf3.affine:5.27714 tdnnf4.linear:4.21408 tdnnf4.affine:5.1175 tdnnf5.linear:4.03537 tdnnf5.affine:4.64075 tdnnf6.linear:3.65404 tdnnf6.affine:4.11861 tdnnf7.linear:3.49615 tdnnf7.affine:3.93452 tdnnf8.linear:3.3361 tdnnf8.affine:3.82009 tdnnf9.linear:3.43106 tdnnf9.affine:3.90956 tdnnf10.linear:3.52032 tdnnf10.affine:4.08546 tdnnf11.linear:3.5751 tdnnf11.affine:4.26707 tdnnf12.linear:3.61749 tdnnf12.affine:4.45046 tdnnf13.linear:4.16507 tdnnf13.affine:4.98495 prefinal-l:3.5191 prefinal-chain.affine:5.46776 prefinal-chain.linear:5.0699 output.affine:15.6501 prefinal-xent.affine:2.96954 prefinal-xent.linear:1.87821 output-xent.affine:13.42 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:25.3974 tdnnf2.linear:17.0814 tdnnf2.affine:17.1932 tdnnf3.linear:14.7964 tdnnf3.affine:14.9056 tdnnf4.linear:13.7811 tdnnf4.affine:14.7356 tdnnf5.linear:13.029 tdnnf5.affine:13.3618 tdnnf6.linear:12.2883 tdnnf6.affine:12.1265 tdnnf7.linear:12.5568 tdnnf7.affine:12.04 tdnnf8.linear:12.9325 tdnnf8.affine:12.1812 tdnnf9.linear:13.2323 tdnnf9.affine:12.3281 tdnnf10.linear:13.7587 tdnnf10.affine:12.5835 tdnnf11.linear:13.2822 tdnnf11.affine:12.2783 tdnnf12.linear:12.9471 tdnnf12.affine:12.1053 tdnnf13.linear:13.4894 tdnnf13.affine:12.4156 prefinal-l:11.6674 prefinal-chain.affine:19.3447 prefinal-chain.linear:26.8402 output.affine:119.419 prefinal-xent.affine:14.3448 prefinal-xent.linear:13.8003 output-xent.affine:95.2918 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.357862 tdnnf2.linear:0.314211 tdnnf2.affine:0.354172 tdnnf3.linear:0.308407 tdnnf3.affine:0.356748 tdnnf4.linear:0.306139 tdnnf4.affine:0.346879 tdnnf5.linear:0.310474 tdnnf5.affine:0.346425 tdnnf6.linear:0.298178 tdnnf6.affine:0.339331 tdnnf7.linear:0.278108 tdnnf7.affine:0.325325 tdnnf8.linear:0.256727 tdnnf8.affine:0.31196 tdnnf9.linear:0.259086 tdnnf9.affine:0.316614 tdnnf10.linear:0.254943 tdnnf10.affine:0.323495 tdnnf11.linear:0.268854 tdnnf11.affine:0.346627 tdnnf12.linear:0.278476 tdnnf12.affine:0.367157 tdnnf13.linear:0.307295 tdnnf13.affine:0.399891 prefinal-l:0.300196 prefinal-chain.affine:0.28163 prefinal-chain.linear:0.188798 output.affine:0.131207 prefinal-xent.affine:0.206803 prefinal-xent.linear:0.136039 output-xent.affine:0.140897 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:PrintProfile():cu-device.cc:533) -----
[cudevice profile]
Total GPU time:	0s (may involve some double-counting)
-----
# Accounting: time=3 threads=1
# Ended (code 0) at Mon Feb 24 09:31:36 CST 2020, elapsed time 3 seconds
