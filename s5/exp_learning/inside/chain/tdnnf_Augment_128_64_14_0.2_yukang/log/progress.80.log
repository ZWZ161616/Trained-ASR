# nnet3-am-info exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/80.mdl && nnet3-show-progress --use-gpu=no exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/79.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/80.mdl 
# Started at Mon Feb 24 08:00:29 CST 2020
#
nnet3-am-info exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/80.mdl 
input-dim: 40
ivector-dim: 100
num-pdfs: 4040
prior-dimension: 0
# Nnet info follows.
left-context: 169
right-context: 169
num-parameters: 989456
modulus: 1
input-node name=ivector dim=100
input-node name=input dim=40
component-node name=lda component=lda input=Append(Offset(input, -1), input, Offset(input, 1), ReplaceIndex(ivector, t, 0)) input-dim=220 output-dim=220
component-node name=tdnn1.affine component=tdnn1.affine input=lda input-dim=220 output-dim=128
component-node name=tdnn1.relu component=tdnn1.relu input=tdnn1.affine input-dim=128 output-dim=128
component-node name=tdnn1.batchnorm component=tdnn1.batchnorm input=tdnn1.relu input-dim=128 output-dim=128
component-node name=tdnn1.dropout component=tdnn1.dropout input=tdnn1.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.linear component=tdnnf2.linear input=tdnn1.dropout input-dim=128 output-dim=64
component-node name=tdnnf2.affine component=tdnnf2.affine input=tdnnf2.linear input-dim=64 output-dim=128
component-node name=tdnnf2.relu component=tdnnf2.relu input=tdnnf2.affine input-dim=128 output-dim=128
component-node name=tdnnf2.batchnorm component=tdnnf2.batchnorm input=tdnnf2.relu input-dim=128 output-dim=128
component-node name=tdnnf2.dropout component=tdnnf2.dropout input=tdnnf2.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf2.noop component=tdnnf2.noop input=Sum(Scale(0.75, tdnn1.dropout), tdnnf2.dropout) input-dim=128 output-dim=128
component-node name=tdnnf3.linear component=tdnnf3.linear input=tdnnf2.noop input-dim=128 output-dim=64
component-node name=tdnnf3.affine component=tdnnf3.affine input=tdnnf3.linear input-dim=64 output-dim=128
component-node name=tdnnf3.relu component=tdnnf3.relu input=tdnnf3.affine input-dim=128 output-dim=128
component-node name=tdnnf3.batchnorm component=tdnnf3.batchnorm input=tdnnf3.relu input-dim=128 output-dim=128
component-node name=tdnnf3.dropout component=tdnnf3.dropout input=tdnnf3.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf3.noop component=tdnnf3.noop input=Sum(Scale(0.75, tdnnf2.noop), tdnnf3.dropout) input-dim=128 output-dim=128
component-node name=tdnnf4.linear component=tdnnf4.linear input=tdnnf3.noop input-dim=128 output-dim=64
component-node name=tdnnf4.affine component=tdnnf4.affine input=tdnnf4.linear input-dim=64 output-dim=128
component-node name=tdnnf4.relu component=tdnnf4.relu input=tdnnf4.affine input-dim=128 output-dim=128
component-node name=tdnnf4.batchnorm component=tdnnf4.batchnorm input=tdnnf4.relu input-dim=128 output-dim=128
component-node name=tdnnf4.dropout component=tdnnf4.dropout input=tdnnf4.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf4.noop component=tdnnf4.noop input=Sum(Scale(0.75, tdnnf3.noop), tdnnf4.dropout) input-dim=128 output-dim=128
component-node name=tdnnf5.linear component=tdnnf5.linear input=tdnnf4.noop input-dim=128 output-dim=64
component-node name=tdnnf5.affine component=tdnnf5.affine input=tdnnf5.linear input-dim=64 output-dim=128
component-node name=tdnnf5.relu component=tdnnf5.relu input=tdnnf5.affine input-dim=128 output-dim=128
component-node name=tdnnf5.batchnorm component=tdnnf5.batchnorm input=tdnnf5.relu input-dim=128 output-dim=128
component-node name=tdnnf5.dropout component=tdnnf5.dropout input=tdnnf5.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf5.noop component=tdnnf5.noop input=Sum(Scale(0.75, tdnnf4.noop), tdnnf5.dropout) input-dim=128 output-dim=128
component-node name=tdnnf6.linear component=tdnnf6.linear input=tdnnf5.noop input-dim=128 output-dim=64
component-node name=tdnnf6.affine component=tdnnf6.affine input=tdnnf6.linear input-dim=64 output-dim=128
component-node name=tdnnf6.relu component=tdnnf6.relu input=tdnnf6.affine input-dim=128 output-dim=128
component-node name=tdnnf6.batchnorm component=tdnnf6.batchnorm input=tdnnf6.relu input-dim=128 output-dim=128
component-node name=tdnnf6.dropout component=tdnnf6.dropout input=tdnnf6.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf6.noop component=tdnnf6.noop input=Sum(Scale(0.75, tdnnf5.noop), tdnnf6.dropout) input-dim=128 output-dim=128
component-node name=tdnnf7.linear component=tdnnf7.linear input=tdnnf6.noop input-dim=128 output-dim=64
component-node name=tdnnf7.affine component=tdnnf7.affine input=tdnnf7.linear input-dim=64 output-dim=128
component-node name=tdnnf7.relu component=tdnnf7.relu input=tdnnf7.affine input-dim=128 output-dim=128
component-node name=tdnnf7.batchnorm component=tdnnf7.batchnorm input=tdnnf7.relu input-dim=128 output-dim=128
component-node name=tdnnf7.dropout component=tdnnf7.dropout input=tdnnf7.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf7.noop component=tdnnf7.noop input=Sum(Scale(0.75, tdnnf6.noop), tdnnf7.dropout) input-dim=128 output-dim=128
component-node name=tdnnf8.linear component=tdnnf8.linear input=tdnnf7.noop input-dim=128 output-dim=64
component-node name=tdnnf8.affine component=tdnnf8.affine input=tdnnf8.linear input-dim=64 output-dim=128
component-node name=tdnnf8.relu component=tdnnf8.relu input=tdnnf8.affine input-dim=128 output-dim=128
component-node name=tdnnf8.batchnorm component=tdnnf8.batchnorm input=tdnnf8.relu input-dim=128 output-dim=128
component-node name=tdnnf8.dropout component=tdnnf8.dropout input=tdnnf8.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf8.noop component=tdnnf8.noop input=Sum(Scale(0.75, tdnnf7.noop), tdnnf8.dropout) input-dim=128 output-dim=128
component-node name=tdnnf9.linear component=tdnnf9.linear input=tdnnf8.noop input-dim=128 output-dim=64
component-node name=tdnnf9.affine component=tdnnf9.affine input=tdnnf9.linear input-dim=64 output-dim=128
component-node name=tdnnf9.relu component=tdnnf9.relu input=tdnnf9.affine input-dim=128 output-dim=128
component-node name=tdnnf9.batchnorm component=tdnnf9.batchnorm input=tdnnf9.relu input-dim=128 output-dim=128
component-node name=tdnnf9.dropout component=tdnnf9.dropout input=tdnnf9.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf9.noop component=tdnnf9.noop input=Sum(Scale(0.75, tdnnf8.noop), tdnnf9.dropout) input-dim=128 output-dim=128
component-node name=tdnnf10.linear component=tdnnf10.linear input=tdnnf9.noop input-dim=128 output-dim=64
component-node name=tdnnf10.affine component=tdnnf10.affine input=tdnnf10.linear input-dim=64 output-dim=128
component-node name=tdnnf10.relu component=tdnnf10.relu input=tdnnf10.affine input-dim=128 output-dim=128
component-node name=tdnnf10.batchnorm component=tdnnf10.batchnorm input=tdnnf10.relu input-dim=128 output-dim=128
component-node name=tdnnf10.dropout component=tdnnf10.dropout input=tdnnf10.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf10.noop component=tdnnf10.noop input=Sum(Scale(0.75, tdnnf9.noop), tdnnf10.dropout) input-dim=128 output-dim=128
component-node name=tdnnf11.linear component=tdnnf11.linear input=tdnnf10.noop input-dim=128 output-dim=64
component-node name=tdnnf11.affine component=tdnnf11.affine input=tdnnf11.linear input-dim=64 output-dim=128
component-node name=tdnnf11.relu component=tdnnf11.relu input=tdnnf11.affine input-dim=128 output-dim=128
component-node name=tdnnf11.batchnorm component=tdnnf11.batchnorm input=tdnnf11.relu input-dim=128 output-dim=128
component-node name=tdnnf11.dropout component=tdnnf11.dropout input=tdnnf11.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf11.noop component=tdnnf11.noop input=Sum(Scale(0.75, tdnnf10.noop), tdnnf11.dropout) input-dim=128 output-dim=128
component-node name=tdnnf12.linear component=tdnnf12.linear input=tdnnf11.noop input-dim=128 output-dim=64
component-node name=tdnnf12.affine component=tdnnf12.affine input=tdnnf12.linear input-dim=64 output-dim=128
component-node name=tdnnf12.relu component=tdnnf12.relu input=tdnnf12.affine input-dim=128 output-dim=128
component-node name=tdnnf12.batchnorm component=tdnnf12.batchnorm input=tdnnf12.relu input-dim=128 output-dim=128
component-node name=tdnnf12.dropout component=tdnnf12.dropout input=tdnnf12.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf12.noop component=tdnnf12.noop input=Sum(Scale(0.75, tdnnf11.noop), tdnnf12.dropout) input-dim=128 output-dim=128
component-node name=tdnnf13.linear component=tdnnf13.linear input=tdnnf12.noop input-dim=128 output-dim=64
component-node name=tdnnf13.affine component=tdnnf13.affine input=tdnnf13.linear input-dim=64 output-dim=128
component-node name=tdnnf13.relu component=tdnnf13.relu input=tdnnf13.affine input-dim=128 output-dim=128
component-node name=tdnnf13.batchnorm component=tdnnf13.batchnorm input=tdnnf13.relu input-dim=128 output-dim=128
component-node name=tdnnf13.dropout component=tdnnf13.dropout input=tdnnf13.batchnorm input-dim=128 output-dim=128
component-node name=tdnnf13.noop component=tdnnf13.noop input=Sum(Scale(0.75, tdnnf12.noop), tdnnf13.dropout) input-dim=128 output-dim=128
component-node name=prefinal-l component=prefinal-l input=tdnnf13.noop input-dim=128 output-dim=64
component-node name=prefinal-chain.affine component=prefinal-chain.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-chain.relu component=prefinal-chain.relu input=prefinal-chain.affine input-dim=128 output-dim=128
component-node name=prefinal-chain.batchnorm1 component=prefinal-chain.batchnorm1 input=prefinal-chain.relu input-dim=128 output-dim=128
component-node name=prefinal-chain.linear component=prefinal-chain.linear input=prefinal-chain.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-chain.batchnorm2 component=prefinal-chain.batchnorm2 input=prefinal-chain.linear input-dim=64 output-dim=64
component-node name=output.affine component=output.affine input=prefinal-chain.batchnorm2 input-dim=64 output-dim=4040
output-node name=output input=output.affine dim=4040 objective=linear
component-node name=prefinal-xent.affine component=prefinal-xent.affine input=prefinal-l input-dim=64 output-dim=128
component-node name=prefinal-xent.relu component=prefinal-xent.relu input=prefinal-xent.affine input-dim=128 output-dim=128
component-node name=prefinal-xent.batchnorm1 component=prefinal-xent.batchnorm1 input=prefinal-xent.relu input-dim=128 output-dim=128
component-node name=prefinal-xent.linear component=prefinal-xent.linear input=prefinal-xent.batchnorm1 input-dim=128 output-dim=64
component-node name=prefinal-xent.batchnorm2 component=prefinal-xent.batchnorm2 input=prefinal-xent.linear input-dim=64 output-dim=64
component-node name=output-xent.affine component=output-xent.affine input=prefinal-xent.batchnorm2 input-dim=64 output-dim=4040
component-node name=output-xent.log-softmax component=output-xent.log-softmax input=output-xent.affine input-dim=4040 output-dim=4040
output-node name=output-xent input=output-xent.log-softmax dim=4040 objective=linear
component name=lda type=FixedAffineComponent, input-dim=220, output-dim=220, linear-params-rms=0.01087, bias-{mean,stddev}=0.03747,0.5704
component name=tdnn1.affine type=NaturalGradientAffineComponent, input-dim=220, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.1396, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.94,0.97,1.3 1.4,1.7,2.0,2.4,2.6 2.9,3.3,3.3,3.4), mean=2.01, stddev=0.493], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.51,0.53,0.57,0.62 0.70,0.85,1.4,1.9,2.3 2.5,2.6,2.7,3.3), mean=1.47, stddev=0.587], bias-{mean,stddev}=-0.1154,0.2049, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=tdnn1.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=8.64e+06, self-repaired-proportion=0.0982174, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.001,0.002,0.005 0.008,0.03,0.11,0.20,0.23 0.29,0.37,0.38,0.42), mean=0.126, stddev=0.0955], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.01,0.02,0.04 0.05,0.10,0.33,0.54,0.65 0.73,0.81,0.81,0.85), mean=0.346, stddev=0.217], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.02,0.02,0.02,0.03 0.03,0.03,0.04,0.07,0.10 0.11,0.15,0.18,0.22), mean=0.0556, stddev=0.0347], oderiv-count=1.30044e+07
component name=tdnn1.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=91904, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.002,0.002,0.004 0.008,0.03,0.11,0.20,0.25 0.30,0.37,0.38,0.43), mean=0.126, stddev=0.0959], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.01,0.02,0.02,0.03 0.04,0.11,0.22,0.28,0.31 0.33,0.35,0.36,0.37), mean=0.2, stddev=0.0935]
component name=tdnn1.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf2.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1431, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.3,2.3,2.3,2.3 2.3,2.3,2.3,2.3,2.3 2.3,2.3,2.3,2.3), mean=2.29, stddev=0.00503], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.49,0.51,0.61,0.70 0.86,0.99,1.2,1.3,1.3 1.4,1.4,1.5,1.7), mean=1.13, stddev=0.203], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1382, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.3 1.4,1.4,1.5,1.7,1.8 1.9,2.0,2.0,2.2), mean=1.55, stddev=0.186], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.4,1.4,1.4 1.4,1.5,1.6,1.6,1.7 1.7,1.8,1.8,1.9), mean=1.56, stddev=0.107], bias-{mean,stddev}=-0.1415,0.08854, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf2.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=7.69e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.3,1.3 1.5,1.6,1.8,2.1,2.2 2.3,2.4,2.4,2.7), mean=1.85, stddev=0.276], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.35,0.37,0.37,0.39 0.41,0.44,0.52,0.57,0.58 0.59,0.59,0.60,0.61), mean=0.507, stddev=0.0648], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.001,0.002,0.002,0.002 0.003,0.006,0.007,0.008), mean=0.00186, stddev=0.00105], oderiv-count=1.25621e+07
component name=tdnnf2.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=84736, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.3 1.5,1.6,1.8,2.1,2.2 2.3,2.4,2.4,2.8), mean=1.86, stddev=0.284], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.9,2.2 2.4,2.6,2.9,3.4,3.6 3.9,4.0,4.1,4.1), mean=2.99, stddev=0.513]
component name=tdnnf2.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf2.noop type=NoOpComponent, dim=128
component name=tdnnf3.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1242, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.0,2.0,2.0,2.0 2.0,2.0,2.0,2.0,2.0 2.0,2.0,2.0,2.0), mean=1.99, stddev=0.005], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.76,0.78,0.82 0.85,0.89,0.98,1.1,1.1 1.2,1.2,1.3,1.4), mean=0.988, stddev=0.11], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1216, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.97,0.97,1.0,1.1 1.2,1.2,1.4,1.5,1.6 1.7,1.8,1.9,1.9), mean=1.37, stddev=0.172], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.2,1.2,1.2 1.2,1.3,1.4,1.5,1.5 1.5,1.6,1.6,1.6), mean=1.37, stddev=0.103], bias-{mean,stddev}=-0.1167,0.05547, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf3.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=7.21e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.5,1.5,1.6 1.7,1.8,2.0,2.2,2.3 2.4,2.4,2.5,2.6), mean=2.02, stddev=0.23], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.40,0.42 0.44,0.47,0.51,0.55,0.57 0.58,0.58,0.58,0.59), mean=0.511, stddev=0.0461], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.0008,0.0008,0.0008 0.0009,0.001,0.001,0.001,0.002 0.002,0.004,0.005,0.006), mean=0.00125, stddev=0.000735], oderiv-count=1.1034e+07
component name=tdnnf3.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=77568, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.5,1.6 1.7,1.8,2.0,2.2,2.4 2.4,2.5,2.5,2.5), mean=2.02, stddev=0.248], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.8,1.8,2.2,2.5 2.7,2.9,3.2,3.6,3.9 4.1,4.3,4.3,4.9), mean=3.26, stddev=0.504]
component name=tdnnf3.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf3.noop type=NoOpComponent, dim=128
component name=tdnnf4.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1119, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.8,1.8,1.8,1.8 1.8,1.8,1.8,1.8,1.8 1.8,1.8,1.8,1.8), mean=1.79, stddev=0.000488], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.67,0.70,0.72,0.74 0.78,0.82,0.89,0.95,0.99 1.0,1.1,1.1,1.3), mean=0.891, stddev=0.0861], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1148, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.63,0.74,0.84,1.1 1.1,1.2,1.3,1.4,1.5 1.5,1.6,1.6,1.6), mean=1.29, stddev=0.161], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.1,1.1,1.1,1.1 1.2,1.2,1.3,1.4,1.4 1.5,1.5,1.5,1.6), mean=1.29, stddev=0.102], bias-{mean,stddev}=-0.137,0.06621, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf4.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=6.27e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.71,0.85,1.6,1.6 1.7,1.8,2.0,2.2,2.3 2.4,2.5,2.5,2.6), mean=2, stddev=0.274], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.39,0.41,0.42 0.44,0.45,0.51,0.54,0.55 0.56,0.58,0.58,0.58), mean=0.499, stddev=0.0468], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0007,0.0007,0.0007 0.0007,0.0008,0.0009,0.001,0.001 0.002,0.004,0.004,0.006), mean=0.00107, stddev=0.000742], oderiv-count=1.0208e+07
component name=tdnnf4.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=70400, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.69,0.86,1.6,1.7 1.7,1.8,2.0,2.2,2.4 2.5,2.6,2.6,2.7), mean=2.03, stddev=0.285], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,1.3,2.2,2.6 2.8,3.0,3.4,3.7,4.0 4.3,4.5,4.7,5.2), mean=3.38, stddev=0.565]
component name=tdnnf4.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf4.noop type=NoOpComponent, dim=128
component name=tdnnf5.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1065, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.7, stddev=0.00437], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.71,0.72,0.75 0.76,0.78,0.84,0.92,0.94 0.97,1.0,1.0,1.1), mean=0.849, stddev=0.0741], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.11, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.59,0.71,0.78,1.0 1.1,1.1,1.2,1.3,1.4 1.5,1.5,1.5,1.6), mean=1.24, stddev=0.15], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,1.0,1.0,1.1 1.1,1.2,1.2,1.3,1.4 1.4,1.5,1.5,1.6), mean=1.24, stddev=0.109], bias-{mean,stddev}=-0.133,0.06648, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf5.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=5.96e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.97,1.3,1.7 1.8,1.9,2.1,2.3,2.4 2.5,2.6,2.6,2.8), mean=2.07, stddev=0.293], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.38,0.40,0.40,0.42 0.43,0.46,0.50,0.53,0.55 0.56,0.57,0.58,0.58), mean=0.495, stddev=0.0443], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0006,0.0006,0.0006,0.0007 0.0007,0.0007,0.0008,0.001,0.001 0.002,0.002,0.003,0.007), mean=0.000955, stddev=0.000639], oderiv-count=8.67859e+06
component name=tdnnf5.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=63232, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.97,1.3,1.7 1.8,1.9,2.1,2.3,2.4 2.5,2.6,2.6,2.8), mean=2.1, stddev=0.295], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.99,1.6,2.0,2.7 2.8,3.0,3.4,3.8,4.3 4.6,4.8,4.9,5.0), mean=3.44, stddev=0.621]
component name=tdnnf5.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf5.noop type=NoOpComponent, dim=128
component name=tdnnf6.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1028, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.65, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.66,0.67,0.69 0.71,0.75,0.81,0.88,0.92 0.95,0.96,0.97,1.0), mean=0.819, stddev=0.075], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.0988, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.61,0.78,0.85,0.92 0.97,1.0,1.1,1.2,1.3 1.3,1.4,1.4,1.6), mean=1.11, stddev=0.134], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.89,0.92,0.95 1.0,1.0,1.1,1.2,1.2 1.3,1.3,1.3,1.3), mean=1.11, stddev=0.0934], bias-{mean,stddev}=-0.1188,0.0537, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf6.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=5.42e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.73,1.1,1.3,1.4 1.6,1.7,1.8,2.0,2.1 2.3,2.4,2.4,2.6), mean=1.83, stddev=0.262], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.36,0.39,0.40,0.43 0.44,0.45,0.49,0.53,0.54 0.55,0.56,0.57,0.57), mean=0.492, stddev=0.0406], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0008,0.0008 0.0008,0.0009,0.001,0.001,0.001 0.001,0.002,0.002,0.003), mean=0.00103, stddev=0.000274], oderiv-count=8.03117e+06
component name=tdnnf6.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=56064, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.66,1.1,1.2,1.4 1.5,1.6,1.8,2.0,2.1 2.3,2.3,2.3,2.5), mean=1.82, stddev=0.269], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.9,1.9,2.3 2.4,2.6,2.9,3.3,3.6 3.7,3.8,4.1,5.0), mean=2.95, stddev=0.497]
component name=tdnnf6.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf6.noop type=NoOpComponent, dim=128
component name=tdnnf7.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1031, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.65, stddev=0.00234], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.57,0.63,0.66,0.68 0.71,0.75,0.82,0.90,0.93 0.96,0.99,1.0,1.1), mean=0.82, stddev=0.0868], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.09717, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.72,0.74,0.86 0.91,0.99,1.1,1.2,1.3 1.3,1.4,1.4,1.5), mean=1.09, stddev=0.145], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.89,0.91,0.93 0.96,0.99,1.1,1.2,1.2 1.3,1.4,1.4,1.4), mean=1.09, stddev=0.113], bias-{mean,stddev}=-0.1119,0.0493, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf7.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.58e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,1.1,1.3,1.4 1.5,1.6,1.8,2.0,2.2 2.3,2.4,2.4,2.5), mean=1.83, stddev=0.264], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.37,0.37,0.38,0.41 0.43,0.44,0.48,0.51,0.52 0.53,0.55,0.56,0.57), mean=0.477, stddev=0.0398], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0008,0.0008 0.0009,0.0009,0.001,0.001,0.001 0.001,0.002,0.002,0.002), mean=0.00105, stddev=0.000195], oderiv-count=7.04102e+06
component name=tdnnf7.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=48896, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,1.2,1.2,1.3 1.5,1.6,1.8,2.0,2.2 2.2,2.4,2.4,2.5), mean=1.83, stddev=0.275], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,2.0,2.0,2.4 2.4,2.6,2.9,3.3,3.6 4.0,4.3,4.3,4.4), mean=2.98, stddev=0.501]
component name=tdnnf7.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf7.noop type=NoOpComponent, dim=128
component name=tdnnf8.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1076, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.72, stddev=0.00533], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.67,0.67,0.70 0.74,0.78,0.85,0.93,0.96 1.0,1.0,1.1,1.2), mean=0.856, stddev=0.0924], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.09859, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.73,0.76,0.84 0.91,0.98,1.1,1.2,1.3 1.3,1.4,1.4,1.5), mean=1.1, stddev=0.158], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.84,0.87,0.88,0.94 0.96,1.0,1.1,1.2,1.3 1.3,1.4,1.4,1.4), mean=1.11, stddev=0.123], bias-{mean,stddev}=-0.09258,0.04222, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf8.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.84e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.3,1.4 1.5,1.7,1.8,2.1,2.2 2.5,2.7,2.7,2.9), mean=1.88, stddev=0.31], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.37,0.39,0.40 0.41,0.43,0.46,0.49,0.51 0.51,0.52,0.53,0.54), mean=0.456, stddev=0.037], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0007,0.0008,0.0008,0.0008 0.0008,0.0009,0.001,0.001,0.001 0.001,0.001,0.001,0.001), mean=0.00101, stddev=0.000136], oderiv-count=5.92538e+06
component name=tdnnf8.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=41728, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.3,1.3,1.4 1.4,1.6,1.8,2.0,2.2 2.5,2.7,2.8,2.8), mean=1.87, stddev=0.32], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.3,2.3,2.4,2.5 2.6,2.7,3.1,3.6,4.0 4.5,4.7,5.1,5.6), mean=3.21, stddev=0.614]
component name=tdnnf8.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf8.noop type=NoOpComponent, dim=128
component name=tdnnf9.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1071, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.71, stddev=0.00355], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.62,0.64,0.66 0.69,0.76,0.85,0.94,0.99 1.0,1.1,1.1,1.2), mean=0.85, stddev=0.111], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.09948, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.56,0.58,0.76 0.81,0.92,1.1,1.3,1.3 1.4,1.5,1.5,1.6), mean=1.11, stddev=0.207], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.86,0.86,0.87,0.94 0.96,1.0,1.1,1.2,1.3 1.3,1.4,1.4,1.4), mean=1.12, stddev=0.124], bias-{mean,stddev}=-0.08044,0.043, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf9.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=3.1e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.81,0.95,1.0,1.3 1.5,1.7,1.9,2.1,2.3 2.4,2.6,2.6,2.8), mean=1.89, stddev=0.333], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.28,0.28,0.29,0.37 0.39,0.41,0.45,0.48,0.49 0.50,0.51,0.52,0.56), mean=0.442, stddev=0.0468], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.0009,0.0009,0.0009 0.001,0.001,0.001,0.001,0.001 0.001,0.002,0.002,0.002), mean=0.00116, stddev=0.000172], oderiv-count=4.89888e+06
component name=tdnnf9.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=34560, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.83,0.94,0.99,1.3 1.5,1.6,1.9,2.1,2.4 2.4,2.6,2.7,2.8), mean=1.9, stddev=0.344], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.2,2.2,2.2,2.5 2.7,2.9,3.2,3.6,3.8 4.2,4.8,4.9,5.0), mean=3.29, stddev=0.521]
component name=tdnnf9.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf9.noop type=NoOpComponent, dim=128
component name=tdnnf10.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1112, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.8,1.8,1.8,1.8 1.8,1.8,1.8,1.8,1.8 1.8,1.8,1.8,1.8), mean=1.78, stddev=0.000488], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.64,0.65,0.69 0.73,0.76,0.87,1.0,1.1 1.1,1.2,1.2,1.3), mean=0.88, stddev=0.134], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1021, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.52,0.61,0.62,0.67 0.73,0.94,1.2,1.4,1.4 1.5,1.5,1.5,1.5), mean=1.13, stddev=0.239], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.82,0.83,0.88,0.92 0.97,1.0,1.1,1.3,1.3 1.4,1.5,1.5,1.6), mean=1.15, stddev=0.146], bias-{mean,stddev}=-0.05965,0.04234, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf10.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2.53e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.96,1.2,1.2,1.4 1.5,1.8,2.0,2.3,2.5 2.6,2.9,2.9,3.0), mean=2.03, stddev=0.38], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.26,0.26,0.28,0.31 0.35,0.40,0.44,0.47,0.48 0.49,0.49,0.50,0.51), mean=0.43, stddev=0.0503], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0009,0.001,0.001,0.001 0.001,0.001,0.001,0.001,0.002 0.002,0.002,0.002,0.002), mean=0.00129, stddev=0.000198], oderiv-count=4.02662e+06
component name=tdnnf10.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=27392, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,1.1,1.2,1.4 1.5,1.7,2.0,2.3,2.5 2.7,2.8,3.0,3.0), mean=2.04, stddev=0.394], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.5,2.7,2.8,2.9 3.0,3.2,3.6,4.0,4.4 4.6,4.9,5.0,6.1), mean=3.63, stddev=0.555]
component name=tdnnf10.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf10.noop type=NoOpComponent, dim=128
component name=tdnnf11.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1091, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.75, stddev=0], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.61,0.63,0.66 0.69,0.73,0.84,0.99,1.1 1.1,1.2,1.3,1.3), mean=0.86, stddev=0.148], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.1008, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.45,0.51,0.57,0.67 0.76,0.85,1.1,1.4,1.5 1.6,1.6,1.6,1.7), mean=1.11, stddev=0.281], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.85,0.86,0.89,0.97 1.0,1.0,1.1,1.2,1.3 1.3,1.4,1.4,1.4), mean=1.13, stddev=0.112], bias-{mean,stddev}=-0.07106,0.04435, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf11.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=2e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.95,0.99,1.1,1.3 1.4,1.5,1.8,2.0,2.1 2.3,2.5,2.5,2.6), mean=1.79, stddev=0.31], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.20,0.26,0.27,0.28 0.30,0.36,0.41,0.44,0.45 0.46,0.46,0.46,0.47), mean=0.394, stddev=0.0524], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.001,0.001,0.001,0.001 0.001,0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003), mean=0.00179, stddev=0.000283], oderiv-count=2.81619e+06
component name=tdnnf11.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=20224, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.94,1.0,1.1,1.3 1.3,1.5,1.8,2.1,2.2 2.3,2.5,2.6,2.6), mean=1.79, stddev=0.328], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.6,2.6,2.7,2.8 3.0,3.2,3.5,4.0,4.3 4.4,4.6,4.7,5.2), mean=3.61, stddev=0.498]
component name=tdnnf11.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf11.noop type=NoOpComponent, dim=128
component name=tdnnf12.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.1068, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7,1.7 1.7,1.7,1.7,1.7), mean=1.71, stddev=-nan], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.53,0.60,0.61,0.65 0.67,0.72,0.81,0.96,1.1 1.1,1.2,1.2,1.3), mean=0.841, stddev=0.15], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.09902, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.58,0.60,0.69 0.73,0.80,0.98,1.4,1.5 1.6,1.7,1.7,1.7), mean=1.08, stddev=0.311], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.88,0.88,0.90,0.94 0.96,1.0,1.1,1.2,1.3 1.3,1.4,1.4,1.6), mean=1.11, stddev=0.119], bias-{mean,stddev}=-0.06929,0.05181, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf12.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=1.27e+06, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.89,0.90,0.94,1.1 1.2,1.3,1.5,1.7,2.0 2.2,2.4,2.4,2.5), mean=1.54, stddev=0.331], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.17,0.17,0.18,0.22 0.26,0.29,0.35,0.41,0.45 0.47,0.48,0.48,0.60), mean=0.349, stddev=0.0749], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.002,0.002,0.002,0.002 0.002,0.002,0.003,0.003,0.003 0.004,0.004,0.004,0.005), mean=0.00276, stddev=0.000503], oderiv-count=1.81478e+06
component name=tdnnf12.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=13056, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.80,0.83,0.85,1.1 1.2,1.3,1.5,1.8,2.0 2.2,2.3,2.3,2.4), mean=1.54, stddev=0.337], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.6,2.7,2.7,2.8 3.0,3.2,3.6,4.2,4.5 4.7,4.9,5.1,5.6), mean=3.69, stddev=0.602]
component name=tdnnf12.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf12.noop type=NoOpComponent, dim=128
component name=tdnnf13.linear type=TdnnComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, orthonormal-constraint=-1, time-offsets=-14,0, linear-params-rms=0.09819, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6,1.6 1.6,1.6,1.6,1.6), mean=1.57, stddev=0.00586], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.56,0.58,0.59,0.62 0.65,0.67,0.74,0.86,0.94 1.1,1.1,1.2,1.2), mean=0.775, stddev=0.13], has-bias=false, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.affine type=TdnnComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, time-offsets=0,14, linear-params-rms=0.09176, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.54,0.56,0.58,0.60 0.62,0.67,0.95,1.3,1.5 1.5,1.6,1.6,1.7), mean=0.991, stddev=0.309], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.76,0.81,0.85,0.87 0.90,0.94,1.0,1.1,1.2 1.2,1.2,1.2,1.3), mean=1.03, stddev=0.0995], bias-{mean,stddev}=-0.09061,0.07827, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha-in=4, alpha-out=4
component name=tdnnf13.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.01e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.64,0.73,0.74,0.83 0.91,0.98,1.2,1.5,1.6 1.7,1.9,2.0,2.1), mean=1.28, stddev=0.304], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.11,0.12,0.12,0.14 0.16,0.18,0.28,0.39,0.42 0.44,0.46,0.47,0.52), mean=0.288, stddev=0.104], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.005,0.005,0.006,0.007,0.008 0.009,0.01,0.01,0.01), mean=0.00629, stddev=0.00149], oderiv-count=600576
component name=tdnnf13.batchnorm type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.58,0.63,0.64,0.77 0.82,0.94,1.2,1.6,1.7 1.8,1.9,2.0,2.0), mean=1.26, stddev=0.335], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.4,2.5,2.7,2.9 3.1,3.3,3.7,4.1,4.4 4.6,5.1,5.2,5.5), mean=3.75, stddev=0.546]
component name=tdnnf13.dropout type=GeneralDropoutComponent, dim=128, block-dim=128, dropout-proportion=0.0846561, continuous=true
component name=tdnnf13.noop type=NoOpComponent, dim=128
component name=prefinal-l type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.005, max-change=0.75, params-rms=0.1223, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4,1.4 1.4,1.4,1.4,1.4), mean=1.38, stddev=0.000772], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.55,0.68,0.72,0.77 0.82,0.87,0.98,1.1,1.1 1.1,1.1,1.2,1.2), mean=0.971, stddev=0.119], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.2136, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.3,1.4,1.4,1.5 1.5,1.6,1.7,1.8,1.9 1.9,1.9,2.0,2.0), mean=1.7, stddev=0.123], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(2.1,2.1,2.2,2.2 2.2,2.3,2.4,2.5,2.6 2.7,2.7,2.8,2.9), mean=2.41, stddev=0.154], bias-{mean,stddev}=-0.004753,0.1288, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.7 1.8,1.9,2.1,2.4,2.4 2.6,2.7,2.7,2.8), mean=2.11, stddev=0.273], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.33,0.33,0.33,0.34 0.35,0.36,0.39,0.42,0.44 0.44,0.45,0.46,0.47), mean=0.392, stddev=0.0311], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.008,0.009,0.009,0.009 0.009,0.01,0.01,0.01,0.01 0.01,0.01,0.01,0.02), mean=0.0107, stddev=0.0013], oderiv-count=645184
component name=prefinal-chain.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.5,1.5,1.6 1.7,1.8,2.1,2.3,2.5 2.5,2.6,2.7,2.8), mean=2.08, stddev=0.293], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(4.1,4.2,4.2,4.6 4.7,4.8,5.2,5.9,6.4 6.9,7.1,7.1,7.7), mean=5.4, stddev=0.701]
component name=prefinal-chain.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, params-rms=0.267, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.0,3.0,3.0,3.0 3.0,3.0,3.0,3.0,3.0 3.0,3.0,3.0,3.0), mean=3.02, stddev=-nan], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.5,1.6,1.6,1.8 1.9,2.0,2.1,2.3,2.4 2.4,2.5,2.5,2.6), mean=2.13, stddev=0.191], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-chain.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-7e-08,-5e-08,-4e-08 -3e-08,-2e-08,1e-09,3e-08,4e-08 4e-08,5e-08,6e-08,8e-08), mean=3.31e-09, stddev=2.78e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(3.4,3.4,3.4,3.4 3.5,3.5,3.7,3.9,4.0 4.1,4.3,4.4,4.6), mean=3.75, stddev=0.247]
component name=output.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.00841972, l2-regularize=5e-05, max-change=1.5, linear-params-rms=0.206, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.0008,0.12,0.21,0.44 0.69,1.0,1.7,2.0,2.2 2.3,2.4,2.5,3.1), mean=1.54, stddev=0.577], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(11,11,11,12 12,12,13,14,14 15,15,15,16), mean=13.1, stddev=0.892], bias-{mean,stddev}=0.0008491,0.2788, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=128, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, linear-params-rms=0.1644, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.68,0.77,1.0,1.2 1.2,1.3,1.3,1.4,1.4 1.4,1.4,1.5,1.6), mean=1.31, stddev=0.113], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.6,1.6,1.6,1.7 1.7,1.8,1.9,1.9,2.0 2.0,2.0,2.0,2.1), mean=1.86, stddev=0.108], bias-{mean,stddev}=-0.03184,0.2086, rank-in=20, rank-out=64, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.relu type=RectifiedLinearComponent, dim=128, self-repair-scale=1e-05, count=4.18e+05, self-repaired-proportion=0, value-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.65,0.69,0.70,0.73 0.80,0.88,1.1,1.3,1.4 1.5,1.6,1.7,1.8), mean=1.1, stddev=0.235], deriv-avg=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.32,0.37,0.37,0.38 0.41,0.42,0.47,0.51,0.54 0.55,0.58,0.58,0.62), mean=0.47, stddev=0.0542], oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.004,0.004,0.004,0.004 0.005,0.005,0.005,0.006,0.006 0.006,0.006,0.007,0.01), mean=0.00518, stddev=0.000873], oderiv-count=592960
component name=prefinal-xent.batchnorm1 type=BatchNormComponent, dim=128, block-dim=128, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.62,0.66,0.67,0.71 0.81,0.89,1.1,1.3,1.4 1.5,1.7,1.7,1.9), mean=1.1, stddev=0.249], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.2,1.2,1.2,1.3 1.4,1.5,1.7,1.9,2.0 2.1,2.2,2.2,2.2), mean=1.69, stddev=0.221]
component name=prefinal-xent.linear type=LinearComponent, input-dim=128, output-dim=64, learning-rate=0.00841972, l2-regularize=0.0005, max-change=0.75, params-rms=0.1571, params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.8,1.8,1.8,1.8 1.8,1.8,1.8,1.8,1.8 1.8,1.8,1.8,1.8), mean=1.78, stddev=-nan], params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.93,0.94,0.95,1.1 1.1,1.2,1.3,1.4,1.4 1.4,1.5,1.5,1.6), mean=1.25, stddev=0.119], orthonormal-constraint=-1, use-natural-gradient=true, rank-in=20, rank-out=32, num-samples-history=2000, update-period=4, alpha=4
component name=prefinal-xent.batchnorm2 type=BatchNormComponent, dim=64, block-dim=64, epsilon=0.001, target-rms=1, count=4352, test-mode=false, data-mean=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(-7e-08,-7e-08,-4e-08,-3e-08 -3e-08,-2e-08,-9e-10,2e-08,2e-08 3e-08,4e-08,4e-08,6e-08), mean=-9.95e-10, stddev=2.27e-08], data-stddev=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(1.7,1.7,1.7,1.7 1.7,1.8,1.9,2.0,2.0 2.1,2.1,2.1,2.2), mean=1.89, stddev=0.11]
component name=output-xent.affine type=NaturalGradientAffineComponent, input-dim=64, output-dim=4040, learning-rate=0.0420986, l2-regularize=5e-05, learning-rate-factor=5, max-change=1.5, linear-params-rms=0.191, linear-params-row-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0.03,0.03,0.07,0.24 0.68,0.99,1.5,1.9,2.1 2.3,2.4,2.5,3.7), mean=1.42, stddev=0.563], linear-params-col-norms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(12,12,12,12 12,12,12,12,12 12,12,12,13), mean=12.1, stddev=0.212], bias-{mean,stddev}=3.677e-08,0.2121, rank-in=20, rank-out=80, num-samples-history=2000, update-period=4, alpha=4
component name=output-xent.log-softmax type=LogSoftmaxComponent, dim=4040, oderiv-rms=[percentiles(0,1,2,5 10,20,50,80,90 95,98,99,100)=(0,0,0,4e-05 0.0001,0.0002,0.0005,0.001,0.002 0.002,0.003,0.004,0.06), mean=0.000784, stddev=0.0012], oderiv-count=627776
nnet3-show-progress --use-gpu=no exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/79.mdl exp_learning/inside/chain/tdnnf_Augment_128_64_14_0.2_yukang/80.mdl 
LOG (nnet3-show-progress[5.5.646~1-cdf2]:SelectGpuId():cu-device.cc:153) Manually selected to compute on CPU.
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:143) Parameter differences per layer are [ tdnn1.affine:7.04238 tdnnf2.linear:5.06305 tdnnf2.affine:5.6629 tdnnf3.linear:4.40002 tdnnf3.affine:5.13555 tdnnf4.linear:4.02316 tdnnf4.affine:4.90038 tdnnf5.linear:3.75141 tdnnf5.affine:4.66504 tdnnf6.linear:3.56118 tdnnf6.affine:4.15534 tdnnf7.linear:3.30962 tdnnf7.affine:3.88416 tdnnf8.linear:3.18445 tdnnf8.affine:3.72182 tdnnf9.linear:3.12617 tdnnf9.affine:3.78027 tdnnf10.linear:3.18522 tdnnf10.affine:3.9815 tdnnf11.linear:3.43717 tdnnf11.affine:4.23992 tdnnf12.linear:3.59884 tdnnf12.affine:4.39518 tdnnf13.linear:3.84986 tdnnf13.affine:4.77625 prefinal-l:2.70286 prefinal-chain.affine:4.95166 prefinal-chain.linear:4.14225 output.affine:13.46 prefinal-xent.affine:3.33379 prefinal-xent.linear:2.01902 output-xent.affine:13.504 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:153) Norms of parameter matrices from <new-nnet-in> are [ tdnn1.affine:23.5722 tdnnf2.linear:18.3171 tdnnf2.affine:17.7868 tdnnf3.linear:15.9024 tdnnf3.affine:15.634 tdnnf4.linear:14.3244 tdnnf4.affine:14.7903 tdnnf5.linear:13.6288 tdnnf5.affine:14.1804 tdnnf6.linear:13.1615 tdnnf6.affine:12.7325 tdnnf7.linear:13.2009 tdnnf7.affine:12.5146 tdnnf8.linear:13.7763 tdnnf8.affine:12.6725 tdnnf9.linear:13.7111 tdnnf9.affine:12.7751 tdnnf10.linear:14.2394 tdnnf10.affine:13.0959 tdnnf11.linear:13.9645 tdnnf11.affine:12.9376 tdnnf12.linear:13.6653 tdnnf12.affine:12.7126 tdnnf13.linear:12.5678 tdnnf13.affine:11.823 prefinal-l:11.065 prefinal-chain.affine:19.3892 prefinal-chain.linear:24.1634 output.affine:106.228 prefinal-xent.affine:15.0668 prefinal-xent.linear:14.2204 output-xent.affine:98.0482 ]
LOG (nnet3-show-progress[5.5.646~1-cdf2]:main():nnet3-show-progress.cc:157) Relative parameter differences per layer are [ tdnn1.affine:0.300831 tdnnf2.linear:0.277109 tdnnf2.affine:0.320995 tdnnf3.linear:0.277622 tdnnf3.affine:0.331656 tdnnf4.linear:0.282993 tdnnf4.affine:0.337836 tdnnf5.linear:0.27859 tdnnf5.affine:0.335972 tdnnf6.linear:0.272697 tdnnf6.affine:0.328672 tdnnf7.linear:0.251436 tdnnf7.affine:0.311193 tdnnf8.linear:0.231289 tdnnf8.affine:0.293739 tdnnf9.linear:0.228105 tdnnf9.affine:0.296265 tdnnf10.linear:0.223872 tdnnf10.affine:0.304328 tdnnf11.linear:0.245656 tdnnf11.affine:0.32677 tdnnf12.linear:0.2636 tdnnf12.affine:0.345184 tdnnf13.linear:0.3058 tdnnf13.affine:0.403533 prefinal-l:0.244093 prefinal-chain.affine:0.25574 prefinal-chain.linear:0.171866 output.affine:0.126991 prefinal-xent.affine:0.221373 prefinal-xent.linear:0.142229 output-xent.affine:0.137741 ]
# Accounting: time=4 threads=1
# Ended (code 0) at Mon Feb 24 08:00:33 CST 2020, elapsed time 4 seconds
